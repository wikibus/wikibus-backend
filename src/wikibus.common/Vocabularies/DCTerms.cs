// <auto-generated />
using System;

namespace wikibus.common.Vocabularies
{
    /// <summary>DCMI metadata terms (http://purl.org/dc/terms/).</summary>
    public static partial class DCTerms
    {
        public const string Prefix="dcterms";

        public const string BaseUri="http://purl.org/dc/terms/";
        
        /// <summary>
        /// Examples of Agent include person, organization, and software agent.
        /// </summary>
        public static readonly Uri Agent=new Uri(BaseUri+"Agent");
        
        /// <summary>
        /// Examples of Agent Class include groups seen as classes, such as students, women, charities, lecturers.
        /// </summary>
        public static readonly Uri AgentClass=new Uri(BaseUri+"AgentClass");
        
        /// <summary>
        /// A book, article, or other documentary resource.
        /// </summary>
        public static readonly Uri BibliographicResource=new Uri(BaseUri+"BibliographicResource");
        
        /// <summary>
        /// Examples include the formats defined by the list of Internet Media Types.
        /// </summary>
        public static readonly Uri FileFormat=new Uri(BaseUri+"FileFormat");
        
        /// <summary>
        /// A rate at which something recurs.
        /// </summary>
        public static readonly Uri Frequency=new Uri(BaseUri+"Frequency");
        
        /// <summary>
        /// The extent or range of judicial, law enforcement, or other authority.
        /// </summary>
        public static readonly Uri Jurisdiction=new Uri(BaseUri+"Jurisdiction");
        
        /// <summary>
        /// A legal document giving official permission to do something with a Resource.
        /// </summary>
        public static readonly Uri LicenseDocument=new Uri(BaseUri+"LicenseDocument");
        
        /// <summary>
        /// Examples include written, spoken, sign, and computer languages.
        /// </summary>
        public static readonly Uri LinguisticSystem=new Uri(BaseUri+"LinguisticSystem");
        
        /// <summary>
        /// A spatial region or named place.
        /// </summary>
        public static readonly Uri Location=new Uri(BaseUri+"Location");
        
        /// <summary>
        /// A location, period of time, or jurisdiction.
        /// </summary>
        public static readonly Uri LocationPeriodOrJurisdiction=new Uri(BaseUri+"LocationPeriodOrJurisdiction");
        
        /// <summary>
        /// A file format or physical medium.
        /// </summary>
        public static readonly Uri MediaType=new Uri(BaseUri+"MediaType");
        
        /// <summary>
        /// A media type or extent.
        /// </summary>
        public static readonly Uri MediaTypeOrExtent=new Uri(BaseUri+"MediaTypeOrExtent");
        
        /// <summary>
        /// A method by which resources are added to a collection.
        /// </summary>
        public static readonly Uri MethodOfAccrual=new Uri(BaseUri+"MethodOfAccrual");
        
        /// <summary>
        /// A process that is used to engender knowledge, attitudes, and skills.
        /// </summary>
        public static readonly Uri MethodOfInstruction=new Uri(BaseUri+"MethodOfInstruction");
        
        /// <summary>
        /// An interval of time that is named or defined by its start and end dates.
        /// </summary>
        public static readonly Uri PeriodOfTime=new Uri(BaseUri+"PeriodOfTime");
        
        /// <summary>
        /// Examples include paper, canvas, or DVD.
        /// </summary>
        public static readonly Uri PhysicalMedium=new Uri(BaseUri+"PhysicalMedium");
        
        /// <summary>
        /// A material thing.
        /// </summary>
        public static readonly Uri PhysicalResource=new Uri(BaseUri+"PhysicalResource");
        
        /// <summary>
        /// A plan or course of action by an authority, intended to influence and determine decisions, actions, and other matters.
        /// </summary>
        public static readonly Uri Policy=new Uri(BaseUri+"Policy");
        
        /// <summary>
        /// A statement of any changes in ownership and custody of a resource since its creation that are significant for its authenticity, integrity, and interpretation.
        /// </summary>
        public static readonly Uri ProvenanceStatement=new Uri(BaseUri+"ProvenanceStatement");
        
        /// <summary>
        /// A statement about the intellectual property rights (IPR) held in or over a Resource, a legal document giving official permission to do something with a resource, or a statement about access rights.
        /// </summary>
        public static readonly Uri RightsStatement=new Uri(BaseUri+"RightsStatement");
        
        /// <summary>
        /// Examples include a number of pages, a specification of length, width, and breadth, or a period in hours, minutes, and seconds.
        /// </summary>
        public static readonly Uri SizeOrDuration=new Uri(BaseUri+"SizeOrDuration");
        
        /// <summary>
        /// A basis for comparison; a reference point against which other things can be evaluated.
        /// </summary>
        public static readonly Uri Standard=new Uri(BaseUri+"Standard");
        
        /// <summary>
        /// A summary of the resource.
        /// </summary>
        public static readonly Uri @abstract=new Uri(BaseUri+"abstract");
        
        /// <summary>
        /// Access Rights may include information regarding access or restrictions based on privacy, security, or other policies.
        /// </summary>
        public static readonly Uri accessRights=new Uri(BaseUri+"accessRights");
        
        /// <summary>
        /// The method by which items are added to a collection.
        /// </summary>
        public static readonly Uri accrualMethod=new Uri(BaseUri+"accrualMethod");
        
        /// <summary>
        /// The frequency with which items are added to a collection.
        /// </summary>
        public static readonly Uri accrualPeriodicity=new Uri(BaseUri+"accrualPeriodicity");
        
        /// <summary>
        /// The policy governing the addition of items to a collection.
        /// </summary>
        public static readonly Uri accrualPolicy=new Uri(BaseUri+"accrualPolicy");
        
        /// <summary>
        /// The distinction between titles and alternative titles is application-specific.
        /// </summary>
        public static readonly Uri alternative=new Uri(BaseUri+"alternative");
        
        /// <summary>
        /// A class of entity for whom the resource is intended or useful.
        /// </summary>
        public static readonly Uri audience=new Uri(BaseUri+"audience");
        
        /// <summary>
        /// Date (often a range) that the resource became or will become available.
        /// </summary>
        public static readonly Uri available=new Uri(BaseUri+"available");
        
        /// <summary>
        /// Recommended practice is to include sufficient bibliographic detail to identify the resource as unambiguously as possible.
        /// </summary>
        public static readonly Uri bibliographicCitation=new Uri(BaseUri+"bibliographicCitation");
        
        /// <summary>
        /// An established standard to which the described resource conforms.
        /// </summary>
        public static readonly Uri conformsTo=new Uri(BaseUri+"conformsTo");
        
        /// <summary>
        /// Examples of a Contributor include a person, an organization, or a service. Typically, the name of a Contributor should be used to indicate the entity.
        /// </summary>
        public static readonly Uri contributor=new Uri(BaseUri+"contributor");
        
        /// <summary>
        /// Spatial topic and spatial applicability may be a named place or a location specified by its geographic coordinates. Temporal topic may be a named period, date, or date range. A jurisdiction may be a named administrative entity or a geographic place to which the resource applies. Recommended best practice is to use a controlled vocabulary such as the Thesaurus of Geographic Names [TGN]. Where appropriate, named places or time periods can be used in preference to numeric identifiers such as sets of coordinates or date ranges.
        /// </summary>
        public static readonly Uri coverage=new Uri(BaseUri+"coverage");
        
        /// <summary>
        /// Date of creation of the resource.
        /// </summary>
        public static readonly Uri created=new Uri(BaseUri+"created");
        
        /// <summary>
        /// Examples of a Creator include a person, an organization, or a service. Typically, the name of a Creator should be used to indicate the entity.
        /// </summary>
        public static readonly Uri creator=new Uri(BaseUri+"creator");
        
        /// <summary>
        /// Date may be used to express temporal information at any level of granularity. Recommended best practice is to use an encoding scheme, such as the W3CDTF profile of ISO 8601 [W3CDTF].
        /// </summary>
        public static readonly Uri date=new Uri(BaseUri+"date");
        
        /// <summary>
        /// Examples of resources to which a Date Accepted may be relevant are a thesis (accepted by a university department) or an article (accepted by a journal).
        /// </summary>
        public static readonly Uri dateAccepted=new Uri(BaseUri+"dateAccepted");
        
        /// <summary>
        /// Date of copyright.
        /// </summary>
        public static readonly Uri dateCopyrighted=new Uri(BaseUri+"dateCopyrighted");
        
        /// <summary>
        /// Examples of resources to which a Date Submitted may be relevant are a thesis (submitted to a university department) or an article (submitted to a journal).
        /// </summary>
        public static readonly Uri dateSubmitted=new Uri(BaseUri+"dateSubmitted");
        
        /// <summary>
        /// Description may include but is not limited to: an abstract, a table of contents, a graphical representation, or a free-text account of the resource.
        /// </summary>
        public static readonly Uri description=new Uri(BaseUri+"description");
        
        /// <summary>
        /// A class of entity, defined in terms of progression through an educational or training context, for which the described resource is intended.
        /// </summary>
        public static readonly Uri educationLevel=new Uri(BaseUri+"educationLevel");
        
        /// <summary>
        /// The size or duration of the resource.
        /// </summary>
        public static readonly Uri extent=new Uri(BaseUri+"extent");
        
        /// <summary>
        /// Examples of dimensions include size and duration. Recommended best practice is to use a controlled vocabulary such as the list of Internet Media Types [MIME].
        /// </summary>
        public static readonly Uri format=new Uri(BaseUri+"format");
        
        /// <summary>
        /// A related resource that is substantially the same as the pre-existing described resource, but in another format.
        /// </summary>
        public static readonly Uri hasFormat=new Uri(BaseUri+"hasFormat");
        
        /// <summary>
        /// A related resource that is included either physically or logically in the described resource.
        /// </summary>
        public static readonly Uri hasPart=new Uri(BaseUri+"hasPart");
        
        /// <summary>
        /// A related resource that is a version, edition, or adaptation of the described resource.
        /// </summary>
        public static readonly Uri hasVersion=new Uri(BaseUri+"hasVersion");
        
        /// <summary>
        /// Recommended best practice is to identify the resource by means of a string conforming to a formal identification system.
        /// </summary>
        public static readonly Uri identifier=new Uri(BaseUri+"identifier");
        
        /// <summary>
        /// Instructional Method will typically include ways of presenting instructional materials or conducting instructional activities, patterns of learner-to-learner and learner-to-instructor interactions, and mechanisms by which group and individual levels of learning are measured. Instructional methods include all aspects of the instruction and learning processes from planning and implementation through evaluation and feedback.
        /// </summary>
        public static readonly Uri instructionalMethod=new Uri(BaseUri+"instructionalMethod");
        
        /// <summary>
        /// A related resource that is substantially the same as the described resource, but in another format.
        /// </summary>
        public static readonly Uri isFormatOf=new Uri(BaseUri+"isFormatOf");
        
        /// <summary>
        /// A related resource in which the described resource is physically or logically included.
        /// </summary>
        public static readonly Uri isPartOf=new Uri(BaseUri+"isPartOf");
        
        /// <summary>
        /// A related resource that references, cites, or otherwise points to the described resource.
        /// </summary>
        public static readonly Uri isReferencedBy=new Uri(BaseUri+"isReferencedBy");
        
        /// <summary>
        /// A related resource that supplants, displaces, or supersedes the described resource.
        /// </summary>
        public static readonly Uri isReplacedBy=new Uri(BaseUri+"isReplacedBy");
        
        /// <summary>
        /// A related resource that requires the described resource to support its function, delivery, or coherence.
        /// </summary>
        public static readonly Uri isRequiredBy=new Uri(BaseUri+"isRequiredBy");
        
        /// <summary>
        /// Date of formal issuance (e.g., publication) of the resource.
        /// </summary>
        public static readonly Uri issued=new Uri(BaseUri+"issued");
        
        /// <summary>
        /// Changes in version imply substantive changes in content rather than differences in format.
        /// </summary>
        public static readonly Uri isVersionOf=new Uri(BaseUri+"isVersionOf");
        
        /// <summary>
        /// Recommended best practice is to use a controlled vocabulary such as RFC 4646 [RFC4646].
        /// </summary>
        public static readonly Uri language=new Uri(BaseUri+"language");
        
        /// <summary>
        /// A legal document giving official permission to do something with the resource.
        /// </summary>
        public static readonly Uri license=new Uri(BaseUri+"license");
        
        /// <summary>
        /// In an educational context, a mediator might be a parent, teacher, teaching assistant, or care-giver.
        /// </summary>
        public static readonly Uri mediator=new Uri(BaseUri+"mediator");
        
        /// <summary>
        /// The material or physical carrier of the resource.
        /// </summary>
        public static readonly Uri medium=new Uri(BaseUri+"medium");
        
        /// <summary>
        /// Date on which the resource was changed.
        /// </summary>
        public static readonly Uri modified=new Uri(BaseUri+"modified");
        
        /// <summary>
        /// The statement may include a description of any changes successive custodians made to the resource.
        /// </summary>
        public static readonly Uri provenance=new Uri(BaseUri+"provenance");
        
        /// <summary>
        /// Examples of a Publisher include a person, an organization, or a service. Typically, the name of a Publisher should be used to indicate the entity.
        /// </summary>
        public static readonly Uri publisher=new Uri(BaseUri+"publisher");
        
        /// <summary>
        /// A related resource that is referenced, cited, or otherwise pointed to by the described resource.
        /// </summary>
        public static readonly Uri references=new Uri(BaseUri+"references");
        
        /// <summary>
        /// Recommended best practice is to identify the related resource by means of a string conforming to a formal identification system.
        /// </summary>
        public static readonly Uri relation=new Uri(BaseUri+"relation");
        
        /// <summary>
        /// A related resource that is supplanted, displaced, or superseded by the described resource.
        /// </summary>
        public static readonly Uri replaces=new Uri(BaseUri+"replaces");
        
        /// <summary>
        /// A related resource that is required by the described resource to support its function, delivery, or coherence.
        /// </summary>
        public static readonly Uri requires=new Uri(BaseUri+"requires");
        
        /// <summary>
        /// Typically, rights information includes a statement about various property rights associated with the resource, including intellectual property rights.
        /// </summary>
        public static readonly Uri rights=new Uri(BaseUri+"rights");
        
        /// <summary>
        /// A person or organization owning or managing rights over the resource.
        /// </summary>
        public static readonly Uri rightsHolder=new Uri(BaseUri+"rightsHolder");
        
        /// <summary>
        /// The described resource may be derived from the related resource in whole or in part. Recommended best practice is to identify the related resource by means of a string conforming to a formal identification system.
        /// </summary>
        public static readonly Uri source=new Uri(BaseUri+"source");
        
        /// <summary>
        /// Spatial characteristics of the resource.
        /// </summary>
        public static readonly Uri spatial=new Uri(BaseUri+"spatial");
        
        /// <summary>
        /// Typically, the subject will be represented using keywords, key phrases, or classification codes. Recommended best practice is to use a controlled vocabulary. To describe the spatial or temporal topic of the resource, use the Coverage element.
        /// </summary>
        public static readonly Uri subject=new Uri(BaseUri+"subject");
        
        /// <summary>
        /// A list of subunits of the resource.
        /// </summary>
        public static readonly Uri tableOfContents=new Uri(BaseUri+"tableOfContents");
        
        /// <summary>
        /// Temporal characteristics of the resource.
        /// </summary>
        public static readonly Uri temporal=new Uri(BaseUri+"temporal");
        
        /// <summary>
        /// A name given to the resource.
        /// </summary>
        public static readonly Uri title=new Uri(BaseUri+"title");
        
        /// <summary>
        /// Recommended best practice is to use a controlled vocabulary such as the DCMI Type Vocabulary [DCMITYPE]. To describe the file format, physical medium, or dimensions of the resource, use the Format element.
        /// </summary>
        public static readonly Uri type=new Uri(BaseUri+"type");
        
        /// <summary>
        /// Date (often a range) of validity of a resource.
        /// </summary>
        public static readonly Uri valid=new Uri(BaseUri+"valid");
    }
}