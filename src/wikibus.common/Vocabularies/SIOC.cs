// <auto-generated />
using System;

namespace wikibus.common.Vocabularies
{
    /// <summary>SIOC Core Ontology Namespace (http://rdfs.org/sioc/ns#).</summary>
    public static partial class Sioc
    {
        public const string Prefix="sioc";

        public const string BaseUri="http://rdfs.org/sioc/ns#";
        
        /// <summary>
        /// Community is a high-level concept that defines an online community and what it consists of.
        /// </summary>
        public const string Community = BaseUri + "Community";
        
        /// <summary>
        /// An area in which content Items are contained.
        /// </summary>
        public const string Container = BaseUri + "Container";
        
        /// <summary>
        /// A discussion area on which Posts or entries are made.
        /// </summary>
        public const string Forum = BaseUri + "Forum";
        
        /// <summary>
        /// An Item is something which can be in a Container.
        /// </summary>
        public const string Item = BaseUri + "Item";
        
        /// <summary>
        /// An article or message that can be posted to a Forum.
        /// </summary>
        public const string Post = BaseUri + "Post";
        
        /// <summary>
        /// A Role is a function of a UserAccount within a scope of a particular Forum, Site, etc.
        /// </summary>
        public const string Role = BaseUri + "Role";
        
        /// <summary>
        /// A Space is a place where data resides, e.g. on a website, desktop, fileshare, etc.
        /// </summary>
        public const string Space = BaseUri + "Space";
        
        /// <summary>
        /// A Site can be the location of an online community or set of communities, with UserAccounts and Usergroups creating Items in a set of Containers. It can be thought of as a web-accessible data Space.
        /// </summary>
        public const string Site = BaseUri + "Site";
        
        /// <summary>
        /// A container for a series of threaded discussion Posts or Items.
        /// </summary>
        public const string Thread = BaseUri + "Thread";
        
        /// <summary>
        /// A user account in an online community site.
        /// </summary>
        public const string UserAccount = BaseUri + "UserAccount";
        
        /// <summary>
        /// A set of UserAccounts whose owners have a common purpose or interest. Can be used for access control purposes.
        /// </summary>
        public const string Usergroup = BaseUri + "Usergroup";
        
        /// <summary>
        /// The content of the Item in plain text format.
        /// </summary>
        public const string content = BaseUri + "content";
        
        /// <summary>
        /// An electronic mail address of the UserAccount, encoded using SHA1.
        /// </summary>
        public const string email_sha1 = BaseUri + "email_sha1";
        
        /// <summary>
        /// An identifier of a SIOC concept instance. For example, a user ID. Must be unique for instances of each type of SIOC concept within the same site.
        /// </summary>
        public const string id = BaseUri + "id";
        
        /// <summary>
        /// The IP address used when creating this Item. This can be associated with a creator. Some wiki articles list the IP addresses for the creator or modifiers when the usernames are absent.
        /// </summary>
        public const string ip_address = BaseUri + "ip_address";
        
        /// <summary>
        /// The date and time of the last activity associated with a SIOC concept instance, and expressed in ISO 8601 format. This could be due to a reply Post or Comment, a modification to an Item, etc.
        /// </summary>
        public const string last_activity_date = BaseUri + "last_activity_date";
        
        /// <summary>
        /// The date and time of the last Post (or Item) in a Forum (or a Container), in ISO 8601 format.
        /// </summary>
        public const string last_item_date = BaseUri + "last_item_date";
        
        /// <summary>
        /// The date and time of the last reply Post or Comment, which could be associated with a starter Item or Post or with a Thread, and expressed in ISO 8601 format.
        /// </summary>
        public const string last_reply_date = BaseUri + "last_reply_date";
        
        /// <summary>
        /// The name of a SIOC concept instance, e.g. a username for a UserAccount, group name for a Usergroup, etc.
        /// </summary>
        public const string name = BaseUri + "name";
        
        /// <summary>
        /// A note associated with this resource, for example, if it has been edited by a UserAccount.
        /// </summary>
        public const string note = BaseUri + "note";
        
        /// <summary>
        /// The number of unique authors (UserAccounts and unregistered posters) who have contributed to this Item, Thread, Post, etc.
        /// </summary>
        public const string num_authors = BaseUri + "num_authors";
        
        /// <summary>
        /// The number of Posts (or Items) in a Forum (or a Container).
        /// </summary>
        public const string num_items = BaseUri + "num_items";
        
        /// <summary>
        /// The number of replies that this Item, Thread, Post, etc. has. Useful for when the reply structure is absent.
        /// </summary>
        public const string num_replies = BaseUri + "num_replies";
        
        /// <summary>
        /// The number of Threads (AKA discussion topics) in a Forum.
        /// </summary>
        public const string num_threads = BaseUri + "num_threads";
        
        /// <summary>
        /// The number of times this Item, Thread, UserAccount profile, etc. has been viewed.
        /// </summary>
        public const string num_views = BaseUri + "num_views";
        
        /// <summary>
        /// Specifies that this Item is about a particular resource, e.g. a Post describing a book, hotel, etc.
        /// </summary>
        public const string about = BaseUri + "about";
        
        /// <summary>
        /// Refers to the foaf:Agent or foaf:Person who owns this sioc:UserAccount.
        /// </summary>
        public const string account_of = BaseUri + "account_of";
        
        /// <summary>
        /// Refers to who (e.g. a UserAccount, e-mail address, etc.) a particular Item is addressed to.
        /// </summary>
        public const string addressed_to = BaseUri + "addressed_to";
        
        /// <summary>
        /// A Site that the UserAccount is an administrator of.
        /// </summary>
        public const string administrator_of = BaseUri + "administrator_of";
        
        /// <summary>
        /// The URI of a file attached to an Item.
        /// </summary>
        public const string attachment = BaseUri + "attachment";
        
        /// <summary>
        /// An image or depiction used to represent this UserAccount.
        /// </summary>
        public const string avatar = BaseUri + "avatar";
        
        /// <summary>
        /// An Item that this Container contains.
        /// </summary>
        public const string container_of = BaseUri + "container_of";
        
        /// <summary>
        /// A resource that the UserAccount is a creator of.
        /// </summary>
        public const string creator_of = BaseUri + "creator_of";
        
        /// <summary>
        /// An electronic mail address of the UserAccount.
        /// </summary>
        public const string email = BaseUri + "email";
        
        /// <summary>
        /// This links Items to embedded statements, facts and structured content.
        /// </summary>
        public const string embeds_knowledge = BaseUri + "embeds_knowledge";
        
        /// <summary>
        /// A feed (e.g. RSS, Atom, etc.) pertaining to this resource (e.g. for a Forum, Site, UserAccount, etc.).
        /// </summary>
        public const string feed = BaseUri + "feed";
        
        /// <summary>
        /// Indicates that one UserAccount follows another UserAccount (e.g. for microblog posts or other content item updates).
        /// </summary>
        public const string follows = BaseUri + "follows";
        
        /// <summary>
        /// A UserAccount that has this Role.
        /// </summary>
        public const string function_of = BaseUri + "function_of";
        
        /// <summary>
        /// A UserAccount that is an administrator of this Site.
        /// </summary>
        public const string has_administrator = BaseUri + "has_administrator";
        
        /// <summary>
        /// The Container to which this Item belongs.
        /// </summary>
        public const string has_container = BaseUri + "has_container";
        
        /// <summary>
        /// This is the UserAccount that made this resource.
        /// </summary>
        public const string has_creator = BaseUri + "has_creator";
        
        /// <summary>
        /// The discussion that is related to this Item.
        /// </summary>
        public const string has_discussion = BaseUri + "has_discussion";
        
        /// <summary>
        /// A Role that this UserAccount has.
        /// </summary>
        public const string has_function = BaseUri + "has_function";
        
        /// <summary>
        /// The Site that hosts this Forum.
        /// </summary>
        public const string has_host = BaseUri + "has_host";
        
        /// <summary>
        /// A UserAccount that is a member of this Usergroup.
        /// </summary>
        public const string has_member = BaseUri + "has_member";
        
        /// <summary>
        /// A UserAccount that is a moderator of this Forum.
        /// </summary>
        public const string has_moderator = BaseUri + "has_moderator";
        
        /// <summary>
        /// A UserAccount that modified this Item.
        /// </summary>
        public const string has_modifier = BaseUri + "has_modifier";
        
        /// <summary>
        /// A UserAccount that this resource is owned by.
        /// </summary>
        public const string has_owner = BaseUri + "has_owner";
        
        /// <summary>
        /// A Container or Forum that this Container or Forum is a child of.
        /// </summary>
        public const string has_parent = BaseUri + "has_parent";
        
        /// <summary>
        /// Points to an Item or Post that is a reply or response to this Item or Post.
        /// </summary>
        public const string has_reply = BaseUri + "has_reply";
        
        /// <summary>
        /// A resource that this Role applies to.
        /// </summary>
        public const string has_scope = BaseUri + "has_scope";
        
        /// <summary>
        /// A data Space which this resource is a part of.
        /// </summary>
        public const string has_space = BaseUri + "has_space";
        
        /// <summary>
        /// A UserAccount that is subscribed to this Container.
        /// </summary>
        public const string has_subscriber = BaseUri + "has_subscriber";
        
        /// <summary>
        /// Points to a Usergroup that has certain access to this Space.
        /// </summary>
        public const string has_usergroup = BaseUri + "has_usergroup";
        
        /// <summary>
        /// A Forum that is hosted on this Site.
        /// </summary>
        public const string host_of = BaseUri + "host_of";
        
        /// <summary>
        /// Links to the latest revision of this Item or Post.
        /// </summary>
        public const string latest_version = BaseUri + "latest_version";
        
        /// <summary>
        /// A URI of a document which contains this SIOC object.
        /// </summary>
        public const string link = BaseUri + "link";
        
        /// <summary>
        /// Links extracted from hyperlinks within a SIOC concept, e.g. Post or Site.
        /// </summary>
        public const string links_to = BaseUri + "links_to";
        
        /// <summary>
        /// A Usergroup that this UserAccount is a member of.
        /// </summary>
        public const string member_of = BaseUri + "member_of";
        
        /// <summary>
        /// A Forum that a UserAccount is a moderator of.
        /// </summary>
        public const string moderator_of = BaseUri + "moderator_of";
        
        /// <summary>
        /// An Item that this UserAccount has modified.
        /// </summary>
        public const string modifier_of = BaseUri + "modifier_of";
        
        /// <summary>
        /// Next Item or Post in a given Container sorted by date.
        /// </summary>
        public const string next_by_date = BaseUri + "next_by_date";
        
        /// <summary>
        /// Links to the next revision of this Item or Post.
        /// </summary>
        public const string next_version = BaseUri + "next_version";
        
        /// <summary>
        /// A resource owned by a particular UserAccount, for example, a weblog or image gallery.
        /// </summary>
        public const string owner_of = BaseUri + "owner_of";
        
        /// <summary>
        /// A child Container or Forum that this Container or Forum is a parent of.
        /// </summary>
        public const string parent_of = BaseUri + "parent_of";
        
        /// <summary>
        /// Previous Item or Post in a given Container sorted by date.
        /// </summary>
        public const string previous_by_date = BaseUri + "previous_by_date";
        
        /// <summary>
        /// Links to the previous revision of this Item or Post.
        /// </summary>
        public const string previous_version = BaseUri + "previous_version";
        
        /// <summary>
        /// Related Posts for this Post, perhaps determined implicitly from topics or references.
        /// </summary>
        public const string related_to = BaseUri + "related_to";
        
        /// <summary>
        /// Links to an Item or Post which this Item or Post is a reply to.
        /// </summary>
        public const string reply_of = BaseUri + "reply_of";
        
        /// <summary>
        /// A Role that has a scope of this resource.
        /// </summary>
        public const string scope_of = BaseUri + "scope_of";
        
        /// <summary>
        /// A resource which belongs to this data Space.
        /// </summary>
        public const string space_of = BaseUri + "space_of";
        
        /// <summary>
        /// A Container that a UserAccount is subscribed to.
        /// </summary>
        public const string subscriber_of = BaseUri + "subscriber_of";
        
        /// <summary>
        /// A topic of interest, linking to the appropriate URI, e.g. in the Open Directory Project or of a SKOS category.
        /// </summary>
        public const string topic = BaseUri + "topic";
        
        /// <summary>
        /// A Space that the Usergroup has access to.
        /// </summary>
        public const string usergroup_of = BaseUri + "usergroup_of";
    }
}