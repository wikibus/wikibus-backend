// <auto-generated />
using System;

namespace wikibus.common.Vocabularies
{
    /// <summary>The Hydra Core Vocabulary (http://www.w3.org/ns/hydra/core#).</summary>
    public static partial class Hydra
    {
        public const string Prefix="hydra";

        public const string BaseUri="http://www.w3.org/ns/hydra/core#";
        
        /// <summary>
        /// The class of Hydra classes. Hydra classes and their instances are dereferenceable resources.
        /// </summary>
        public const string Class = BaseUri + "Class";
        
        /// <summary>
        /// The HTTP status code
        /// </summary>
        public const string statusCode = BaseUri + "statusCode";
        
        /// <summary>
        /// True if the property is write-only, false otherwise.
        /// </summary>
        public const string writeonly = BaseUri + "writeonly";
        
        /// <summary>
        /// A variable-to-property mapping of the IRI template.
        /// </summary>
        public const string mapping = BaseUri + "mapping";
        
        /// <summary>
        /// A description.
        /// </summary>
        public const string description = BaseUri + "description";
        
        /// <summary>
        /// The maximum number of items referenced by each single PagedCollection in a set of interlinked PagedCollections.
        /// </summary>
        public const string itemsPerPage = BaseUri + "itemsPerPage";
        
        /// <summary>
        /// A property representing a freetext query.
        /// </summary>
        public const string freetextQuery = BaseUri + "freetextQuery";
        
        /// <summary>
        /// A property
        /// </summary>
        public const string property = BaseUri + "property";
        
        /// <summary>
        /// True if the property is read-only, false otherwise.
        /// </summary>
        public const string @readonly = BaseUri + "readonly";
        
        /// <summary>
        /// The HTTP method.
        /// </summary>
        public const string method = BaseUri + "method";
        
        /// <summary>
        /// An IRI template as defined by RFC6570.
        /// </summary>
        public const string template = BaseUri + "template";
        
        /// <summary>
        /// True if the property is required, false otherwise.
        /// </summary>
        public const string required = BaseUri + "required";
        
        /// <summary>
        /// A title, often used along with a description.
        /// </summary>
        public const string title = BaseUri + "title";
        
        /// <summary>
        /// An IRI template variable
        /// </summary>
        public const string variable = BaseUri + "variable";
        
        /// <summary>
        /// The total number of items referenced by a collection or a set of interlinked PagedCollections.
        /// </summary>
        public const string totalItems = BaseUri + "totalItems";
        /// <summary>
        /// The Hydra API documentation class
        /// </summary>
        public const string ApiDocumentation = BaseUri + "ApiDocumentation";
        /// <summary>
        /// A collection holding references to a number of related resources.
        /// </summary>
        public const string Collection = BaseUri + "Collection";
        /// <summary>
        /// A PagedCollection is a subclass of Collection with the only difference that its members are sorted and only a subset of all members are returned in a single PagedCollection. To get the other members, the nextPage/previousPage properties have to be used.
        /// </summary>
        public const string PagedCollection = BaseUri + "PagedCollection";
        /// <summary>
        /// A templated link.
        /// </summary>
        public const string TemplatedLink = BaseUri + "TemplatedLink";
        /// <summary>
        /// The class of IRI templates.
        /// </summary>
        public const string IriTemplate = BaseUri + "IriTemplate";
        /// <summary>
        /// The class of dereferenceable resources.
        /// </summary>
        public const string Resource = BaseUri + "Resource";
        /// <summary>
        /// An operation.
        /// </summary>
        public const string Operation = BaseUri + "Operation";
        /// <summary>
        /// The class of properties representing links.
        /// </summary>
        public const string Link = BaseUri + "Link";
        /// <summary>
        /// Additional information about a status code that might be returned.
        /// </summary>
        public const string StatusCodeDescription = BaseUri + "StatusCodeDescription";
        /// <summary>
        /// A property known to be supported by a Hydra class.
        /// </summary>
        public const string SupportedProperty = BaseUri + "SupportedProperty";
        /// <summary>
        /// A runtime error, used to report information beyond the returned status code.
        /// </summary>
        public const string Error = BaseUri + "Error";
        /// <summary>
        /// A DeleteResourceOperation is a HTTP operation that deletes a resource.
        /// </summary>
        public const string DeleteResourceOperation = BaseUri + "DeleteResourceOperation";
        /// <summary>
        /// A CreateResourceOperation is a HTTP operation which expects an input of the type specified by hydra:expects and creates a resource of the type specified by hydra:returns.
        /// </summary>
        public const string CreateResourceOperation = BaseUri + "CreateResourceOperation";
        /// <summary>
        /// A mapping from an IRI template variable to a property.
        /// </summary>
        public const string IriTemplateMapping = BaseUri + "IriTemplateMapping";
        /// <summary>
        /// A ReplaceResourceOperation is a HTTP operation which overwrites a resource. It expects data of the type specified in hydra:expects and results in a resource of the type specified by hydra:returns.
        /// </summary>
        public const string ReplaceResourceOperation = BaseUri + "ReplaceResourceOperation";
    }
}