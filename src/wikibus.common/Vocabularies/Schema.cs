









// <auto-generated />
using System;

namespace wikibus.common.Vocabularies
{
    /// <summary>Schema.org (converted to OWL by TopQuadrant) (http://schema.org/).</summary>
    public static partial class Schema
    {
        /// <summary>
        /// schema
        /// </summary>
        public const string Prefix="schema";

        /// <summary>
        /// http://schema.org/
        /// </summary>
        public const string BaseUri="http://schema.org/";

        
        /// <summary>
        /// A museum.
        /// </summary>
        public const string Museum = BaseUri + "Museum";

        
        /// <summary>
        /// Provider of professional services.
        /// </summary>
        public const string ProfessionalService = BaseUri + "ProfessionalService";

        
        /// <summary>
        /// A car wash business.
        /// </summary>
        public const string AutoWash = BaseUri + "AutoWash";

        
        /// <summary>
        /// Place of worship, such as a church, synagogue, or mosque.
        /// </summary>
        public const string PlaceOfWorship = BaseUri + "PlaceOfWorship";

        
        /// <summary>
        /// A tennis complex.
        /// </summary>
        public const string TennisComplex = BaseUri + "TennisComplex";

        
        /// <summary>
        /// An offer to transfer some rights to an item or to provide a service&#x2014;for example, an offer to sell tickets to an event, to rent the DVD of a movie, to stream a TV show over the internet, to repair a motorcycle, or to loan a book.       <br/><br/>       For <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GTIN</a>-related fields, see       <a href="http://www.gs1.org/barcodes/support/check_digit_calculator">Check Digit calculator</a>       and <a href="http://www.gs1us.org/resources/standards/gtin-validation-guide">validation guide</a>       from <a href="http://www.gs1.org/">GS1</a>.       
        /// </summary>
        public const string Offer = BaseUri + "Offer";

        
        /// <summary>
        /// The act of searching for an object.<p>Related actions:</p><ul><li><a href="http://schema.org/FindAction">FindAction</a>: SearchAction generally leads to a FindAction, but not necessarily.</li></ul>
        /// </summary>
        public const string SearchAction = BaseUri + "SearchAction";

        
        /// <summary>
        /// A winery.
        /// </summary>
        public const string Winery = BaseUri + "Winery";

        
        /// <summary>
        /// The act of organizing tasks/objects/events by associating resources to it.
        /// </summary>
        public const string AllocateAction = BaseUri + "AllocateAction";

        
        /// <summary>
        /// The act of rejecting to/adopting an object.<p>Related actions:</p><ul><li><a href="http://schema.org/AcceptAction">AcceptAction</a>: The antagonym of RejectAction.</li></ul>
        /// </summary>
        public const string RejectAction = BaseUri + "RejectAction";

        
        /// <summary>
        /// A muscle is an anatomical structure consisting of a contractile form of tissue that animals use to effect movement.
        /// </summary>
        public const string Muscle = BaseUri + "Muscle";

        
        /// <summary>
        /// A public swimming pool.
        /// </summary>
        public const string PublicSwimmingPool = BaseUri + "PublicSwimmingPool";

        
        /// <summary>
        /// Data type: Integer.
        /// </summary>
        public const string Integer = BaseUri + "Integer";

        
        /// <summary>
        /// A clothing store.
        /// </summary>
        public const string ClothingStore = BaseUri + "ClothingStore";

        
        /// <summary>
        /// Event type: Festival.
        /// </summary>
        public const string Festival = BaseUri + "Festival";

        
        /// <summary>
        /// An organization that provides flights for passengers.
        /// </summary>
        public const string Airline = BaseUri + "Airline";

        
        /// <summary>
        /// The act of expressing a negative sentiment about the object. An agent dislikes an object (a proposition, topic or theme) with participants.
        /// </summary>
        public const string DislikeAction = BaseUri + "DislikeAction";

        
        /// <summary>
        /// Event type: Business event.
        /// </summary>
        public const string BusinessEvent = BaseUri + "BusinessEvent";

        
        /// <summary>
        /// A scholarly article.
        /// </summary>
        public const string ScholarlyArticle = BaseUri + "ScholarlyArticle";

        
        /// <summary>
        /// A home goods store.
        /// </summary>
        public const string HomeGoodsStore = BaseUri + "HomeGoodsStore";

        
        /// <summary>
        /// A reservation for a rental car.Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.
        /// </summary>
        public const string RentalCarReservation = BaseUri + "RentalCarReservation";

        
        /// <summary>
        /// A structured value representing the duration and scope of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.
        /// </summary>
        public const string WarrantyPromise = BaseUri + "WarrantyPromise";

        
        /// <summary>
        /// A collection of music tracks in playlist form.
        /// </summary>
        public const string MusicPlaylist = BaseUri + "MusicPlaylist";

        
        /// <summary>
        /// A department store.
        /// </summary>
        public const string DepartmentStore = BaseUri + "DepartmentStore";

        
        /// <summary>
        /// A shop that will buy, or lend money against the security of, personal possessions.
        /// </summary>
        public const string PawnShop = BaseUri + "PawnShop";

        
        /// <summary>
        /// The act of manipulating/administering/supervising/controlling one or more objects.
        /// </summary>
        public const string OrganizeAction = BaseUri + "OrganizeAction";

        
        /// <summary>
        /// A recycling center.
        /// </summary>
        public const string RecyclingCenter = BaseUri + "RecyclingCenter";

        
        /// <summary>
        /// A nightclub or discotheque.
        /// </summary>
        public const string NightClub = BaseUri + "NightClub";

        
        /// <summary>
        /// A blog
        /// </summary>
        public const string Blog = BaseUri + "Blog";

        
        /// <summary>
        /// A recommended dosing schedule for a drug or supplement as prescribed or recommended by an authority or by the drug/supplement's manufacturer. Capture the recommending authority in the recognizingAuthority property of MedicalEntity.
        /// </summary>
        public const string RecommendedDoseSchedule = BaseUri + "RecommendedDoseSchedule";

        
        /// <summary>
        /// A movie.
        /// </summary>
        public const string Movie = BaseUri + "Movie";

        
        /// <summary>
        /// A restaurant.
        /// </summary>
        public const string Restaurant = BaseUri + "Restaurant";

        
        /// <summary>
        /// The act of being defeated in a competitive activity.
        /// </summary>
        public const string LoseAction = BaseUri + "LoseAction";

        
        /// <summary>
        /// A list of possible product availability options.
        /// </summary>
        public const string ItemAvailability = BaseUri + "ItemAvailability";

        
        /// <summary>
        /// A notary.
        /// </summary>
        public const string Notary = BaseUri + "Notary";

        
        /// <summary>
        /// A police station.
        /// </summary>
        public const string PoliceStation = BaseUri + "PoliceStation";

        
        /// <summary>
        /// A wholesale store.
        /// </summary>
        public const string WholesaleStore = BaseUri + "WholesaleStore";

        
        /// <summary>
        /// The act of authoring written creative content.
        /// </summary>
        public const string WriteAction = BaseUri + "WriteAction";

        
        /// <summary>
        /// A doctor's office.
        /// </summary>
        public const string Physician = BaseUri + "Physician";

        
        /// <summary>
        /// ATM/cash machine.
        /// </summary>
        public const string AutomatedTeller = BaseUri + "AutomatedTeller";

        
        /// <summary>
        /// A class of medical drugs, e.g., statins. Classes can represent general pharmacological class, common mechanisms of action, common physiological effects, etc.
        /// </summary>
        public const string DrugClass = BaseUri + "DrugClass";

        
        /// <summary>
        /// A store that sells reading glasses and similar devices for improving vision.
        /// </summary>
        public const string Optician = BaseUri + "Optician";

        
        /// <summary>
        /// A fire station. With firemen.
        /// </summary>
        public const string FireStation = BaseUri + "FireStation";

        
        /// <summary>
        /// A utility class that serves as the umbrella for a number of 'intangible' things in the medical space.
        /// </summary>
        public const string MedicalIntangible = BaseUri + "MedicalIntangible";

        
        /// <summary>
        /// An elementary school.
        /// </summary>
        public const string ElementarySchool = BaseUri + "ElementarySchool";

        
        /// <summary>
        /// A list of possible conditions for the item.
        /// </summary>
        public const string OfferItemCondition = BaseUri + "OfferItemCondition";

        
        /// <summary>
        /// A movie rental store.
        /// </summary>
        public const string MovieRentalStore = BaseUri + "MovieRentalStore";

        
        /// <summary>
        /// Any collection of tests commonly ordered together.
        /// </summary>
        public const string MedicalTestPanel = BaseUri + "MedicalTestPanel";

        
        /// <summary>
        /// A ski resort.
        /// </summary>
        public const string SkiResort = BaseUri + "SkiResort";

        
        /// <summary>
        /// The act of notifying an event organizer as to whether you expect to attend the event.
        /// </summary>
        public const string RsvpAction = BaseUri + "RsvpAction";

        
        /// <summary>
        /// A blog post.
        /// </summary>
        public const string BlogPosting = BaseUri + "BlogPosting";

        
        /// <summary>
        /// An anatomical system is a group of anatomical structures that work together to perform a certain task. Anatomical systems, such as organ systems, are one organizing principle of anatomy, and can includes circulatory, digestive, endocrine, integumentary, immune, lymphatic, muscular, nervous, reproductive, respiratory, skeletal, urinary, vestibular, and other systems.
        /// </summary>
        public const string AnatomicalSystem = BaseUri + "AnatomicalSystem";

        
        /// <summary>
        /// The act of physically/electronically taking delivery of an object thathas been transferred from an origin to a destination. Reciprocal of SendAction.<p>Related actions:</p><ul><li><a href="http://schema.org/SendAction">SendAction</a>: The reciprocal of ReceiveAction.</li><li><a href="http://schema.org/TakeAction">TakeAction</a>: Unlike TakeAction, ReceiveAction does not imply that the ownership has been transfered (e.g. I can receive a package, but it does not mean the package is now mine).</li></ul>
        /// </summary>
        public const string ReceiveAction = BaseUri + "ReceiveAction";

        
        /// <summary>
        /// A vehicle.
        /// </summary>
        public const string Vehicle = BaseUri + "Vehicle";

        
        /// <summary>
        /// An airport.
        /// </summary>
        public const string Airport = BaseUri + "Airport";

        
        /// <summary>
        /// An electrician.
        /// </summary>
        public const string Electrician = BaseUri + "Electrician";

        
        /// <summary>
        /// A part of a successively published publication such as a periodical or multi-volume work, often numbered. It may represent a time span, such as a year.
        /// </summary>
        public const string PublicationVolume = BaseUri + "PublicationVolume";

        
        /// <summary>
        /// A contact point&#x2014;for example, a Customer Complaints department.
        /// </summary>
        public const string ContactPoint = BaseUri + "ContactPoint";

        
        /// <summary>
        /// The act of playing/exercising/training/performing for enjoyment, leisure, recreation, Competition or exercise.<p>Related actions:</p><ul><li><a href="http://schema.org/ListenAction">ListenAction</a>: Unlike ListenAction (which is under ConsumeAction), PlayAction refers to performing for an audience or at an event, rather than consuming music.</li><li><a href="http://schema.org/WatchAction">WatchAction</a>: Unlike WatchAction (which is under ConsumeAction), PlayAction refers to showing/displaying for an audience or at an event, rather than consuming visual content.</li></ul>
        /// </summary>
        public const string PlayAction = BaseUri + "PlayAction";

        
        /// <summary>
        /// The average rating based on multiple ratings or reviews.
        /// </summary>
        public const string AggregateRating = BaseUri + "AggregateRating";

        
        /// <summary>
        /// A comment on an item - for example, a comment on a blog post. The comment's content is expressed via the "text" property, and its topic via "about", properties shared with all CreativeWorks.
        /// </summary>
        public const string Comment = BaseUri + "Comment";

        
        /// <summary>
        /// A Catholic church.
        /// </summary>
        public const string CatholicChurch = BaseUri + "CatholicChurch";

        
        /// <summary>
        /// The act of producing a visual/graphical representation of an object, typically with a pen/pencil and paper as instruments.
        /// </summary>
        public const string DrawAction = BaseUri + "DrawAction";

        
        /// <summary>
        /// User interaction: Visit to a web page.
        /// </summary>
        public const string UserPageVisits = BaseUri + "UserPageVisits";

        
        /// <summary>
        /// A specific dosing schedule for a drug or supplement.
        /// </summary>
        public const string DoseSchedule = BaseUri + "DoseSchedule";

        
        /// <summary>
        /// An event venue.
        /// </summary>
        public const string EventVenue = BaseUri + "EventVenue";

        
        /// <summary>
        /// A listing that describes a job opening in a certain organization.
        /// </summary>
        public const string JobPosting = BaseUri + "JobPosting";

        
        /// <summary>
        /// A public structure, such as a town hall or concert hall.
        /// </summary>
        public const string CivicStructure = BaseUri + "CivicStructure";

        
        /// <summary>
        /// The price asked for a given offer by the respective organization or person.
        /// </summary>
        public const string UnitPriceSpecification = BaseUri + "UnitPriceSpecification";

        
        /// <summary>
        /// A nail salon.
        /// </summary>
        public const string NailSalon = BaseUri + "NailSalon";

        
        /// <summary>
        /// An indication for preventing an underlying condition, symptom, etc.
        /// </summary>
        public const string PreventionIndication = BaseUri + "PreventionIndication";

        
        /// <summary>
        /// A complex mathematical calculation requiring an online calculator, used to assess prognosis. Note: use the url property of Thing to record any URLs for online calculators.
        /// </summary>
        public const string MedicalRiskCalculator = BaseUri + "MedicalRiskCalculator";

        
        /// <summary>
        /// User interaction: Download of an item.
        /// </summary>
        public const string UserDownloads = BaseUri + "UserDownloads";

        
        /// <summary>
        /// Any medical imaging modality typically used for diagnostic purposes.
        /// </summary>
        public const string ImagingTest = BaseUri + "ImagingTest";

        
        /// <summary>
        /// An agent quotes/estimates/appraises an object/product/service with a price at a location/store.
        /// </summary>
        public const string QuoteAction = BaseUri + "QuoteAction";

        
        /// <summary>
        /// A train station.
        /// </summary>
        public const string TrainStation = BaseUri + "TrainStation";

        
        /// <summary>
        /// Auto body shop.
        /// </summary>
        public const string AutoBodyShop = BaseUri + "AutoBodyShop";

        
        /// <summary>
        /// A medical laboratory that offers on-site or off-site diagnostic services.
        /// </summary>
        public const string DiagnosticLab = BaseUri + "DiagnosticLab";

        
        /// <summary>
        /// The act of producing a painting, typically with paint and canvas as instruments.
        /// </summary>
        public const string PaintAction = BaseUri + "PaintAction";

        
        /// <summary>
        /// The act of notifying someone that a future event/action is going to happen as expected.<p>Related actions:</p><ul><li><a href="http://schema.org/CancelAction">CancelAction</a>: The antagonym of ConfirmAction.</li></ul>
        /// </summary>
        public const string ConfirmAction = BaseUri + "ConfirmAction";

        
        /// <summary>
        /// An event involving the delivery of an item.
        /// </summary>
        public const string DeliveryEvent = BaseUri + "DeliveryEvent";

        
        /// <summary>
        /// The legal availability status of a medical drug.
        /// </summary>
        public const string DrugLegalStatus = BaseUri + "DrugLegalStatus";

        
        /// <summary>
        /// A crematorium.
        /// </summary>
        public const string Crematorium = BaseUri + "Crematorium";

        
        /// <summary>
        /// An image file.
        /// </summary>
        public const string ImageObject = BaseUri + "ImageObject";

        
        /// <summary>
        /// The act of consuming dynamic/moving visual content.
        /// </summary>
        public const string WatchAction = BaseUri + "WatchAction";

        
        /// <summary>
        /// A trip on a commercial train line.
        /// </summary>
        public const string TrainTrip = BaseUri + "TrainTrip";

        
        /// <summary>
        /// A reservoir of water, typically an artificially created lake, like the Lake Kariba reservoir.
        /// </summary>
        public const string Reservoir = BaseUri + "Reservoir";

        
        /// <summary>
        /// The act of providing an object under an agreement that it will be returned at a later date. Reciprocal of BorrowAction.<p>Related actions:</p><ul><li><a href="http://schema.org/BorrowAction">BorrowAction</a>: Reciprocal of LendAction.</li></ul>
        /// </summary>
        public const string LendAction = BaseUri + "LendAction";

        
        /// <summary>
        /// A government building.
        /// </summary>
        public const string GovernmentBuilding = BaseUri + "GovernmentBuilding";

        
        /// <summary>
        /// A motorcycle dealer.
        /// </summary>
        public const string MotorcycleDealer = BaseUri + "MotorcycleDealer";

        
        /// <summary>
        /// A medical procedure intended primarily for therapeutic purposes, aimed at improving a health condition.
        /// </summary>
        public const string TherapeuticProcedure = BaseUri + "TherapeuticProcedure";

        
        /// <summary>
        /// A body of water, such as a sea, ocean, or lake.
        /// </summary>
        public const string BodyOfWater = BaseUri + "BodyOfWater";

        
        /// <summary>
        /// Any physical manifestation of a person's medical condition discoverable by objective diagnostic tests or physical examination.
        /// </summary>
        public const string MedicalSign = BaseUri + "MedicalSign";

        
        /// <summary>
        /// The act of un-registering from a service.<p>Related actions:</p><ul><li><a href="http://schema.org/RegisterAction">RegisterAction</a>: Antagonym of UnRegisterAction.</li><li><a href="http://schema.org/Leave">Leave</a>: Unlike LeaveAction, UnRegisterAction implies that you are unregistering from a service you werer previously registered, rather than leaving a team/group of people.</li></ul>
        /// </summary>
        public const string UnRegisterAction = BaseUri + "UnRegisterAction";

        
        /// <summary>
        /// A map.
        /// </summary>
        public const string Map = BaseUri + "Map";

        
        /// <summary>
        /// The act of traveling from an fromLocation to a destination by a specified mode of transport, optionally with participants.
        /// </summary>
        public const string TravelAction = BaseUri + "TravelAction";

        
        /// <summary>
        /// The act of an agent communicating (service provider, social media, etc) their arrival by registering/confirming for a previously reserved service (e.g. flight check in) or at a place (e.g. hotel), possibly resulting in a result (boarding pass, etc).<p>Related actions:</p><ul><li><a href="http://schema.org/CheckOutAction">CheckOutAction</a>: The antagonym of CheckInAction.</li><li><a href="http://schema.org/ArriveAction">ArriveAction</a>: Unlike ArriveAction, CheckInAction implies that the agent is informing/confirming the start of a previously reserved service.</li><li><a href="http://schema.org/ConfirmAction">ConfirmAction</a>: Unlike ConfirmAction, CheckInAction implies that the agent is informing/confirming the *start* of a previously reserved service rather than its validity/existence.</li></ul>
        /// </summary>
        public const string CheckInAction = BaseUri + "CheckInAction";

        
        /// <summary>
        /// A TV or radio season.
        /// </summary>
        public const string Season = BaseUri + "Season";

        
        /// <summary>
        /// A sporting goods store.
        /// </summary>
        public const string SportingGoodsStore = BaseUri + "SportingGoodsStore";

        
        /// <summary>
        /// Event type: Comedy event.
        /// </summary>
        public const string ComedyEvent = BaseUri + "ComedyEvent";

        
        /// <summary>
        /// An airline flight.
        /// </summary>
        public const string Flight = BaseUri + "Flight";

        
        /// <summary>
        /// A retail good store.
        /// </summary>
        public const string Store = BaseUri + "Store";

        
        /// <summary>
        /// A moving company.
        /// </summary>
        public const string MovingCompany = BaseUri + "MovingCompany";

        
        /// <summary>
        /// A person (alive, dead, undead, or fictional).
        /// </summary>
        public const string Person = BaseUri + "Person";

        
        /// <summary>
        /// A WebSite is a set of related web pages and other items typically served from a single web domain and accessible via URLs.
        /// </summary>
        public const string WebSite = BaseUri + "WebSite";

        
        /// <summary>
        /// A motorcycle repair shop.
        /// </summary>
        public const string MotorcycleRepair = BaseUri + "MotorcycleRepair";

        
        /// <summary>
        /// A tourist attraction.
        /// </summary>
        public const string TouristAttraction = BaseUri + "TouristAttraction";

        
        /// <summary>
        /// A placeholder for multiple similar products of the same kind.
        /// </summary>
        public const string SomeProducts = BaseUri + "SomeProducts";

        
        /// <summary>
        /// A structured value providing information about the opening hours of a place or a certain service inside a place.
        /// </summary>
        public const string OpeningHoursSpecification = BaseUri + "OpeningHoursSpecification";

        
        /// <summary>
        /// The act of responding instinctively and emotionally to an object, expressing a sentiment.
        /// </summary>
        public const string ReactAction = BaseUri + "ReactAction";

        
        /// <summary>
        /// The act of inserting at the beginning if an ordered collection.
        /// </summary>
        public const string PrependAction = BaseUri + "PrependAction";

        
        /// <summary>
        /// A specific question - e.g. from a user seeking answers online, or collected in a Frequently Asked Questions (FAQ) document.
        /// </summary>
        public const string Question = BaseUri + "Question";

        
        /// <summary>
        /// A preschool.
        /// </summary>
        public const string Preschool = BaseUri + "Preschool";

        
        /// <summary>
        /// A scholarly article in the medical domain.
        /// </summary>
        public const string MedicalScholarlyArticle = BaseUri + "MedicalScholarlyArticle";

        
        /// <summary>
        /// A theater group or company, for example, the Royal Shakespeare Company or Druid Theatre.
        /// </summary>
        public const string TheaterGroup = BaseUri + "TheaterGroup";

        
        /// <summary>
        /// User interaction: Play count of an item, for example a video or a song.
        /// </summary>
        public const string UserPlays = BaseUri + "UserPlays";

        
        /// <summary>
        /// A bus stop.
        /// </summary>
        public const string BusStop = BaseUri + "BusStop";

        
        /// <summary>
        /// Describes a reservation for travel, dining or an event. Some reservations require tickets.Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, restaurant reservations, flights, or rental cars, use http://schema.org/Offer.
        /// </summary>
        public const string Reservation = BaseUri + "Reservation";

        
        /// <summary>
        /// An answer offered to a question; perhaps correct, perhaps opinionated or wrong.
        /// </summary>
        public const string Answer = BaseUri + "Answer";

        
        /// <summary>
        /// A place offering space for "Recreational Vehicles", Caravans, mobile homes and the like.
        /// </summary>
        public const string RVPark = BaseUri + "RVPark";

        
        /// <summary>
        /// The act of forming one's opinion, reaction or sentiment.
        /// </summary>
        public const string AssessAction = BaseUri + "AssessAction";

        
        /// <summary>
        /// Web page type: Video gallery page.
        /// </summary>
        public const string VideoGallery = BaseUri + "VideoGallery";

        
        /// <summary>
        /// The header section of the page.
        /// </summary>
        public const string WPHeader = BaseUri + "WPHeader";

        
        /// <summary>
        /// The act of dressing oneself in clothing.
        /// </summary>
        public const string WearAction = BaseUri + "WearAction";

        
        /// <summary>
        /// An agent approves/certifies/likes/supports/sanction an object.
        /// </summary>
        public const string EndorseAction = BaseUri + "EndorseAction";

        
        /// <summary>
        /// Series dedicated to radio broadcast and associated online delivery.
        /// </summary>
        public const string RadioSeries = BaseUri + "RadioSeries";

        
        /// <summary>
        /// Nutritional information about the recipe.
        /// </summary>
        public const string NutritionInformation = BaseUri + "NutritionInformation";

        
        /// <summary>
        /// Any offered product or service. For example: a pair of shoes; a concert ticket; the rental of a car; a haircut; or an episode of a TV show streamed online.
        /// </summary>
        public const string Product = BaseUri + "Product";

        
        /// <summary>
        /// The act of downloading an object.
        /// </summary>
        public const string DownloadAction = BaseUri + "DownloadAction";

        
        /// <summary>
        /// A mosque.
        /// </summary>
        public const string Mosque = BaseUri + "Mosque";

        
        /// <summary>
        /// The act of capturing still images of objects using a camera.
        /// </summary>
        public const string PhotographAction = BaseUri + "PhotographAction";

        
        /// <summary>
        /// A part of a successively published publication such as a periodical or publication volume, often numbered, usually containing a grouping of works such as articles.
        /// </summary>
        public const string PublicationIssue = BaseUri + "PublicationIssue";

        
        /// <summary>
        /// A city or town.
        /// </summary>
        public const string City = BaseUri + "City";

        
        /// <summary>
        /// A navigation element of the page.
        /// </summary>
        public const string SiteNavigationElement = BaseUri + "SiteNavigationElement";

        
        /// <summary>
        /// Any medical imaging modality typically used for diagnostic purposes. Enumerated type.
        /// </summary>
        public const string MedicalImagingTechnique = BaseUri + "MedicalImagingTechnique";

        
        /// <summary>
        /// A radio station.
        /// </summary>
        public const string RadioStation = BaseUri + "RadioStation";

        
        /// <summary>
        /// A chemical or biologic substance, used as a medical therapy, that has a physiological effect on an organism.
        /// </summary>
        public const string Drug = BaseUri + "Drug";

        
        /// <summary>
        /// A simple system that adds up the number of risk factors to yield a score that is associated with prognosis, e.g. CHAD score, TIMI risk score.
        /// </summary>
        public const string MedicalRiskScore = BaseUri + "MedicalRiskScore";

        
        /// <summary>
        /// The act of planning the execution of an event/task/action/reservation/plan to a future date.
        /// </summary>
        public const string PlanAction = BaseUri + "PlanAction";

        
        /// <summary>
        /// Level of evidence for a medical guideline. Enumerated type.
        /// </summary>
        public const string MedicalEvidenceLevel = BaseUri + "MedicalEvidenceLevel";

        
        /// <summary>
        /// The act of registering to be a user of a service, product or web page.<p>Related actions:</p><ul><li><a href="http://schema.org/JoinAction">JoinAction</a>: Unlike JoinAction, RegisterAction implies you are registering to be a user of a service, *not* a group/team of people.</li><li><a href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction, RegisterAction doesn't imply that the agent is expecting to poll for updates from the object.</li><li><a href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike SubscribeAction, RegisterAction doesn't imply that the agent is expecting updates from the object.</li></ul>
        /// </summary>
        public const string RegisterAction = BaseUri + "RegisterAction";

        
        /// <summary>
        /// A hair salon.
        /// </summary>
        public const string HairSalon = BaseUri + "HairSalon";

        
        /// <summary>
        /// Design models for medical trials. Enumerated type.
        /// </summary>
        public const string MedicalTrialDesign = BaseUri + "MedicalTrialDesign";

        
        /// <summary>
        /// Enumerated options related to a ContactPoint
        /// </summary>
        public const string ContactPointOption = BaseUri + "ContactPointOption";

        
        /// <summary>
        /// Reference documentation for application programming interfaces (APIs).
        /// </summary>
        public const string APIReference = BaseUri + "APIReference";

        
        /// <summary>
        /// A video file.
        /// </summary>
        public const string VideoObject = BaseUri + "VideoObject";

        
        /// <summary>
        /// A stadium.
        /// </summary>
        public const string StadiumOrArena = BaseUri + "StadiumOrArena";

        
        /// <summary>
        /// A credit or debit card type as a standardized procedure for transferring the monetary amount for a purchase.      Commonly used values:      http://purl.org/goodrelations/v1#AmericanExpress     http://purl.org/goodrelations/v1#DinersClub     http://purl.org/goodrelations/v1#Discover     http://purl.org/goodrelations/v1#JCB     http://purl.org/goodrelations/v1#MasterCard     http://purl.org/goodrelations/v1#VISA     		
        /// </summary>
        public const string CreditCard = BaseUri + "CreditCard";

        
        /// <summary>
        /// Event type: Food event.
        /// </summary>
        public const string FoodEvent = BaseUri + "FoodEvent";

        
        /// <summary>
        /// A real-estate agent.
        /// </summary>
        public const string RealEstateAgent = BaseUri + "RealEstateAgent";

        
        /// <summary>
        /// A performance group, such as a band, an orchestra, or a circus.
        /// </summary>
        public const string PerformingGroup = BaseUri + "PerformingGroup";

        
        /// <summary>
        /// A mountain, like Mount Whitney or Mount Everest
        /// </summary>
        public const string Mountain = BaseUri + "Mountain";

        
        /// <summary>
        /// The act of intentionally disregarding the object. An agent ignores an object.
        /// </summary>
        public const string IgnoreAction = BaseUri + "IgnoreAction";

        
        /// <summary>
        /// A computer store.
        /// </summary>
        public const string ComputerStore = BaseUri + "ComputerStore";

        
        /// <summary>
        /// An electronics store.
        /// </summary>
        public const string ElectronicsStore = BaseUri + "ElectronicsStore";

        
        /// <summary>
        /// The act of gaining ownership of an object from an origin. Reciprocal of GiveAction.<p>Related actions:</p><ul><li><a href="http://schema.org/GiveAction">GiveAction</a>: The reciprocal of TakeAction.</li><li><a href="http://schema.org/ReceiveAction">ReceiveAction</a>: Unlike ReceiveAction, TakeAction implies that ownership has been transfered.</li></ul>
        /// </summary>
        public const string TakeAction = BaseUri + "TakeAction";

        
        /// <summary>
        /// Event type: Visual arts event.
        /// </summary>
        public const string VisualArtsEvent = BaseUri + "VisualArtsEvent";

        
        /// <summary>
        /// Categories of medical devices, organized by the purpose or intended use of the device.
        /// </summary>
        public const string MedicalDevicePurpose = BaseUri + "MedicalDevicePurpose";

        
        /// <summary>
        /// Organization: Non-governmental Organization.
        /// </summary>
        public const string NGO = BaseUri + "NGO";

        
        /// <summary>
        /// A gym.
        /// </summary>
        public const string ExerciseGym = BaseUri + "ExerciseGym";

        
        /// <summary>
        /// Data type: URL.
        /// </summary>
        public const string URL = BaseUri + "URL";

        
        /// <summary>
        /// A self-storage facility.
        /// </summary>
        public const string SelfStorage = BaseUri + "SelfStorage";

        
        /// <summary>
        /// A subway station.
        /// </summary>
        public const string SubwayStation = BaseUri + "SubwayStation";

        
        /// <summary>
        /// The act of participating in an exchange of goods and services for monetary compensation. An agent trades an object, product or service with a participant in exchange for a one time or periodic payment.
        /// </summary>
        public const string TradeAction = BaseUri + "TradeAction";

        
        /// <summary>
        /// A predefined value for a product characteristic, e.g. the the power cord plug type "US" or the garment sizes "S", "M", "L", and "XL"
        /// </summary>
        public const string QualitativeValue = BaseUri + "QualitativeValue";

        
        /// <summary>
        /// Used to describe a ticket to an event, a flight, a bus ride, etc.
        /// </summary>
        public const string Ticket = BaseUri + "Ticket";

        
        /// <summary>
        /// Used to describe a seat, such as a reserved seat in an event reservation.
        /// </summary>
        public const string Seat = BaseUri + "Seat";

        
        /// <summary>
        /// Event type: Literary event.
        /// </summary>
        public const string LiteraryEvent = BaseUri + "LiteraryEvent";

        
        /// <summary>
        /// Season dedicated to TV broadcast and associated online delivery.
        /// </summary>
        public const string TVSeason = BaseUri + "TVSeason";

        
        /// <summary>
        /// A process of care used in either a diagnostic, therapeutic, or palliative capacity that relies on invasive (surgical), non-invasive, or percutaneous techniques.
        /// </summary>
        public const string MedicalProcedure = BaseUri + "MedicalProcedure";

        
        /// <summary>
        /// Properties that take Distances as values are of the form '&lt;Number&gt; &lt;Length unit of measure&gt;'. E.g., '7 ft'
        /// </summary>
        public const string Distance = BaseUri + "Distance";

        
        /// <summary>
        /// A taxi stand.
        /// </summary>
        public const string TaxiStand = BaseUri + "TaxiStand";

        
        /// <summary>
        /// A delivery service through which content is provided via broadcast over the air or online.
        /// </summary>
        public const string BroadcastService = BaseUri + "BroadcastService";

        
        /// <summary>
        /// Any object used in a medical capacity, such as to diagnose or treat a patient.
        /// </summary>
        public const string MedicalDevice = BaseUri + "MedicalDevice";

        
        /// <summary>
        /// A PerformanceRole is a Role that some entity places with regard to a theatrical performance, e.g. in a Movie, TVSeries etc.
        /// </summary>
        public const string PerformanceRole = BaseUri + "PerformanceRole";

        
        /// <summary>
        /// A tourist information center.
        /// </summary>
        public const string TouristInformationCenter = BaseUri + "TouristInformationCenter";

        
        /// <summary>
        /// The cost per unit of a medical drug. Note that this type is not meant to represent the price in an offer of a drug for sale; see the Offer type for that. This type will typically be used to tag wholesale or average retail cost of a drug, or maximum reimbursable cost. Costs of medical drugs vary widely depending on how and where they are paid for, so while this type captures some of the variables, costs should be used with caution by consumers of this schema's markup.
        /// </summary>
        public const string DrugCost = BaseUri + "DrugCost";

        
        /// <summary>
        /// A jewelry store.
        /// </summary>
        public const string JewelryStore = BaseUri + "JewelryStore";

        
        /// <summary>
        /// A process of care relying upon counseling, dialogue, communication, verbalization aimed at improving a mental health condition.
        /// </summary>
        public const string PsychologicalTreatment = BaseUri + "PsychologicalTreatment";

        
        /// <summary>
        /// A medical organization, such as a doctor's office or clinic.
        /// </summary>
        public const string MedicalOrganization = BaseUri + "MedicalOrganization";

        
        /// <summary>
        /// The act of finding an object.<p>Related actions:</p><ul><li><a href="http://schema.org/SearchAction">SearchAction</a>: FindAction is generally lead by a SearchAction, but not necessarily.</li></ul>
        /// </summary>
        public const string FindAction = BaseUri + "FindAction";

        
        /// <summary>
        /// Systems of medical practice.
        /// </summary>
        public const string MedicineSystem = BaseUri + "MedicineSystem";

        
        /// <summary>
        /// A reservation for air travel.Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use http://schema.org/Offer.
        /// </summary>
        public const string FlightReservation = BaseUri + "FlightReservation";

        
        /// <summary>
        /// A music video file.
        /// </summary>
        public const string MusicVideoObject = BaseUri + "MusicVideoObject";

        
        /// <summary>
        /// Car repair, sales, or parts.
        /// </summary>
        public const string AutomotiveBusiness = BaseUri + "AutomotiveBusiness";

        
        /// <summary>
        /// One of the continents (for example, Europe or Africa).
        /// </summary>
        public const string Continent = BaseUri + "Continent";

        
        /// <summary>
        /// The act of capturing sound and moving images on film, video, or digitally.
        /// </summary>
        public const string FilmAction = BaseUri + "FilmAction";

        
        /// <summary>
        /// The delivery of a parcel either via the postal service or a commercial service.
        /// </summary>
        public const string ParcelDelivery = BaseUri + "ParcelDelivery";

        
        /// <summary>
        /// A music recording (track), usually a single song.
        /// </summary>
        public const string MusicRecording = BaseUri + "MusicRecording";

        
        /// <summary>
        /// A utility class that serves as the umbrella for a number of 'intangible' things such as quantities, structured values, etc.
        /// </summary>
        public const string Intangible = BaseUri + "Intangible";

        
        /// <summary>
        /// The costs of settling the payment using a particular payment method.
        /// </summary>
        public const string PaymentChargeSpecification = BaseUri + "PaymentChargeSpecification";

        
        /// <summary>
        /// A health club.
        /// </summary>
        public const string HealthClub = BaseUri + "HealthClub";

        
        /// <summary>
        /// A TV or radio episode which can be part of a series or season.
        /// </summary>
        public const string Episode = BaseUri + "Episode";

        
        /// <summary>
        /// A medical procedure intended primarily for diagnostic, as opposed to therapeutic, purposes.
        /// </summary>
        public const string DiagnosticProcedure = BaseUri + "DiagnosticProcedure";

        
        /// <summary>
        /// EventStatusType is an enumeration type whose instances represent several states that an Event may be in.
        /// </summary>
        public const string EventStatusType = BaseUri + "EventStatusType";

        
        /// <summary>
        /// The act of obtaining an object under an agreement to return it at a later date. Reciprocal of LendAction.<p>Related actions:</p><ul><li><a href="http://schema.org/LendAction">LendAction</a>: Reciprocal of BorrowAction.</li></ul>
        /// </summary>
        public const string BorrowAction = BaseUri + "BorrowAction";

        
        /// <summary>
        /// The act of discovering/finding an object.
        /// </summary>
        public const string DiscoverAction = BaseUri + "DiscoverAction";

        
        /// <summary>
        /// An agent leaves an event / group with participants/friends at a location.<p>Related actions:</p><ul><li><a href="http://schema.org/JoinAction">JoinAction</a>: The antagonym of LeaveAction.</li><li><a href="http://schema.org/UnRegisterAction">UnRegisterAction</a>: Unlike UnRegisterAction, LeaveAction implies leaving a group/team of people rather than a service.</li></ul>
        /// </summary>
        public const string LeaveAction = BaseUri + "LeaveAction";

        
        /// <summary>
        /// Data type: Text.
        /// </summary>
        public const string Text = BaseUri + "Text";

        
        /// <summary>
        /// A construction business.
        /// </summary>
        public const string HomeAndConstructionBusiness = BaseUri + "HomeAndConstructionBusiness";

        
        /// <summary>
        /// A taxi.
        /// </summary>
        public const string Taxi = BaseUri + "Taxi";

        
        /// <summary>
        /// User interaction: Like an item.
        /// </summary>
        public const string UserLikes = BaseUri + "UserLikes";

        
        /// <summary>
        /// The act of returning to the origin that which was previously received (concrete objects) or taken (ownership).
        /// </summary>
        public const string ReturnAction = BaseUri + "ReturnAction";

        
        /// <summary>
        /// A library.
        /// </summary>
        public const string Library = BaseUri + "Library";

        
        /// <summary>
        /// A DeliveryMethod in which an item is made available via locker.
        /// </summary>
        public const string LockerDelivery = BaseUri + "LockerDelivery";

        
        /// <summary>
        /// Web page type: About page.
        /// </summary>
        public const string AboutPage = BaseUri + "AboutPage";

        
        /// <summary>
        /// The act of forming a personal connection with someone (object) mutually/bidirectionally/symmetrically.<p>Related actions:</p><ul><li><a href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction, BefriendAction implies that the connection is reciprocal.</li></ul>
        /// </summary>
        public const string BefriendAction = BaseUri + "BefriendAction";

        
        /// <summary>
        /// A web page element, like a table or an image
        /// </summary>
        public const string WebPageElement = BaseUri + "WebPageElement";

        
        /// <summary>
        /// The act of giving money voluntarily to a beneficiary in recognition of services rendered.
        /// </summary>
        public const string TipAction = BaseUri + "TipAction";

        
        /// <summary>
        /// The act of participating in performance arts.
        /// </summary>
        public const string PerformAction = BaseUri + "PerformAction";

        
        /// <summary>
        /// The day of the week, e.g. used to specify to which day the opening hours of an OpeningHoursSpecification refer.      Commonly used values:      http://purl.org/goodrelations/v1#Monday     http://purl.org/goodrelations/v1#Tuesday     http://purl.org/goodrelations/v1#Wednesday     http://purl.org/goodrelations/v1#Thursday     http://purl.org/goodrelations/v1#Friday     http://purl.org/goodrelations/v1#Saturday     http://purl.org/goodrelations/v1#Sunday     http://purl.org/goodrelations/v1#PublicHolidays     		
        /// </summary>
        public const string DayOfWeek = BaseUri + "DayOfWeek";

        
        /// <summary>
        /// Web page type: Checkout page.
        /// </summary>
        public const string CheckoutPage = BaseUri + "CheckoutPage";

        
        /// <summary>
        /// Beauty salon.
        /// </summary>
        public const string BeautySalon = BaseUri + "BeautySalon";

        
        /// <summary>
        /// A stage of a medical condition, such as 'Stage IIIa'.
        /// </summary>
        public const string MedicalConditionStage = BaseUri + "MedicalConditionStage";

        
        /// <summary>
        /// The act of registering to an organization/service without the guarantee to receive it. NOTE(goto): should this be under InteractAction instead?<p>Related actions:</p><ul><li><a href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike RegisterAction, ApplyAction has no guarantees that the application will be accepted.</li></ul>
        /// </summary>
        public const string ApplyAction = BaseUri + "ApplyAction";

        
        /// <summary>
        /// Residence type: Gated community.
        /// </summary>
        public const string GatedResidenceCommunity = BaseUri + "GatedResidenceCommunity";

        
        /// <summary>
        /// A publication in any medium issued in successive parts bearing numerical or chronological designations and intended, such as a magazine, scholarly journal, or newspaper to continue indefinitely.
        /// </summary>
        public const string Periodical = BaseUri + "Periodical";

        
        /// <summary>
        /// The geographic shape of a place.
        /// </summary>
        public const string GeoShape = BaseUri + "GeoShape";

        
        /// <summary>
        /// A component of the human body circulatory system comprised of an intricate network of hollow tubes that transport blood throughout the entire body.
        /// </summary>
        public const string Vessel = BaseUri + "Vessel";

        
        /// <summary>
        /// The act of expressing a desire about the object. An agent wants an object.
        /// </summary>
        public const string WantAction = BaseUri + "WantAction";

        
        /// <summary>
        /// A plumbing service.
        /// </summary>
        public const string Plumber = BaseUri + "Plumber";

        
        /// <summary>
        /// The act of expressing a difference of opinion with the object. An agent disagrees to/about an object (a proposition, topic or theme) with participants.
        /// </summary>
        public const string DisagreeAction = BaseUri + "DisagreeAction";

        
        /// <summary>
        /// The act of managing by changing/editing the state of the object.
        /// </summary>
        public const string UpdateAction = BaseUri + "UpdateAction";

        
        /// <summary>
        /// A river (for example, the broad majestic Shannon).
        /// </summary>
        public const string RiverBodyOfWater = BaseUri + "RiverBodyOfWater";

        
        /// <summary>
        /// A graveyard.
        /// </summary>
        public const string Cemetery = BaseUri + "Cemetery";

        
        /// <summary>
        /// The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates polled from.<p>Related actions:</p><ul><li><a href="http://schema.org/BefriendAction">BefriendAction</a>: Unlike BefriendAction, FollowAction implies that the connection is *not* necessarily reciprocal.</li><li><a href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike SubscribeAction, FollowAction implies that the follower acts as an active agent constantly/actively polling for updates.</li><li><a href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike RegisterAction, FollowAction implies that the agent is interested in continuing receiving updates from the object.</li><li><a href="http://schema.org/JoinAction">JoinAction</a>: Unlike JoinAction, FollowAction implies that the agent is interested in getting updates from the object.</li><li><a href="http://schema.org/TrackAction">TrackAction</a>: Unlike TrackAction, FollowAction refers to the polling of updates of all aspects of animate objects rather than the location of inanimate objects (e.g. you track a package, but you don't follow it).</li></ul>
        /// </summary>
        public const string FollowAction = BaseUri + "FollowAction";

        
        /// <summary>
        /// An article, such as a news article or piece of investigative report. Newspapers and magazines have articles of many different types and this is intended to cover them all.
        /// </summary>
        public const string Article = BaseUri + "Article";

        
        /// <summary>
        /// Event type: Social event.
        /// </summary>
        public const string SocialEvent = BaseUri + "SocialEvent";

        
        /// <summary>
        /// A set of characteristics belonging to people, e.g. who compose an item's target audience.
        /// </summary>
        public const string PeopleAudience = BaseUri + "PeopleAudience";

        
        /// <summary>
        /// A reservation for lodging at a hotel, motel, inn, etc.Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.
        /// </summary>
        public const string LodgingReservation = BaseUri + "LodgingReservation";

        
        /// <summary>
        /// The act of expressing a preference from a fixed/finite/structured set of choices/options.
        /// </summary>
        public const string VoteAction = BaseUri + "VoteAction";

        
        /// <summary>
        /// An Insurance agency.
        /// </summary>
        public const string InsuranceAgency = BaseUri + "InsuranceAgency";

        
        /// <summary>
        /// The act of deliberately creating/producing/generating/building a result out of the agent.
        /// </summary>
        public const string CreateAction = BaseUri + "CreateAction";

        
        /// <summary>
        /// Any rule set or interactive tool for estimating the risk of developing a complication or condition.
        /// </summary>
        public const string MedicalRiskEstimator = BaseUri + "MedicalRiskEstimator";

        
        /// <summary>
        /// A type of blood vessel that specifically carries blood away from the heart.
        /// </summary>
        public const string Artery = BaseUri + "Artery";

        
        /// <summary>
        /// A locksmith.
        /// </summary>
        public const string Locksmith = BaseUri + "Locksmith";

        
        /// <summary>
        /// A strategy of regulating the intake of food to achieve or maintain a specific health-related goal.
        /// </summary>
        public const string Diet = BaseUri + "Diet";

        
        /// <summary>
        /// User interaction: Tweets.
        /// </summary>
        public const string UserTweets = BaseUri + "UserTweets";

        
        /// <summary>
        /// A Buddhist temple.
        /// </summary>
        public const string BuddhistTemple = BaseUri + "BuddhistTemple";

        
        /// <summary>
        /// A web page. Every web page is implicitly assumed to be declared to be of type WebPage, so the various properties about that webpage, such as <code>breadcrumb</code> may be used. We recommend explicit declaration if these properties are specified, but if they are found outside of an itemscope, they will be assumed to be about the page
        /// </summary>
        public const string WebPage = BaseUri + "WebPage";

        
        /// <summary>
        /// A combination of date and time of day in the form [-]CCYY-MM-DDThh:mm:ss[Z|(+|-)hh:mm] (see Chapter 5.4 of ISO 8601).
        /// </summary>
        public const string DateTime = BaseUri + "DateTime";

        
        /// <summary>
        /// The act of reaching a draw in a competitive activity.
        /// </summary>
        public const string TieAction = BaseUri + "TieAction";

        
        /// <summary>
        /// An employment agency.
        /// </summary>
        public const string EmploymentAgency = BaseUri + "EmploymentAgency";

        
        /// <summary>
        /// An order is a confirmation of a transaction (a receipt), which can contain multiple line items, each represented by an Offer that has been accepted by the customer.
        /// </summary>
        public const string Order = BaseUri + "Order";

        
        /// <summary>
        /// A musical group, such as a band, an orchestra, or a choir. Can also be a solo musician.
        /// </summary>
        public const string MusicGroup = BaseUri + "MusicGroup";

        
        /// <summary>
        /// The act of accomplishing something via     previous efforts. It is an instantaneous action rather than an ongoing     process.
        /// </summary>
        public const string AchieveAction = BaseUri + "AchieveAction";

        
        /// <summary>
        /// A business that provide Heating, Ventilation and Air Conditioning services.
        /// </summary>
        public const string HVACBusiness = BaseUri + "HVACBusiness";

        
        /// <summary>
        /// A particular physical business or branch of an organization. Examples of LocalBusiness include a restaurant, a particular branch of a restaurant chain, a branch of a bank, a medical practice, a club, a bowling alley, etc.
        /// </summary>
        public const string LocalBusiness = BaseUri + "LocalBusiness";

        
        /// <summary>
        /// A medical test performed by a laboratory that typically involves examination of a tissue sample by a pathologist.
        /// </summary>
        public const string PathologyTest = BaseUri + "PathologyTest";

        
        /// <summary>
        /// The price for the delivery of an offer using a particular delivery method.
        /// </summary>
        public const string DeliveryChargeSpecification = BaseUri + "DeliveryChargeSpecification";

        
        /// <summary>
        /// The act of expressing a consistency of opinion with the object. An agent agrees to/about an object (a proposition, topic or theme) with participants.
        /// </summary>
        public const string AgreeAction = BaseUri + "AgreeAction";

        
        /// <summary>
        /// An organization such as a school, NGO, corporation, club, etc.
        /// </summary>
        public const string Organization = BaseUri + "Organization";

        
        /// <summary>
        /// A day spa.
        /// </summary>
        public const string DaySpa = BaseUri + "DaySpa";

        
        /// <summary>
        /// A tattoo parlor.
        /// </summary>
        public const string TattooParlor = BaseUri + "TattooParlor";

        
        /// <summary>
        /// The most generic type of entity related to health and the practice of medicine.
        /// </summary>
        public const string MedicalEntity = BaseUri + "MedicalEntity";

        
        /// <summary>
        /// An agent orders an object/product/service to be delivered/sent.
        /// </summary>
        public const string OrderAction = BaseUri + "OrderAction";

        
        /// <summary>
        /// An advertising section of the page.
        /// </summary>
        public const string WPAdBlock = BaseUri + "WPAdBlock";

        
        /// <summary>
        /// An agent joins an event/group with participants/friends at a location.<p>Related actions:</p><ul><li><a href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike RegisterAction, JoinAction refers to joining a group/team of people.</li><li><a href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike SubscribeAction, JoinAction does not imply that you'll be receiving updates.</li><li><a href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction, JoinAction does not imply that you'll be polling for updates.</li></ul>
        /// </summary>
        public const string JoinAction = BaseUri + "JoinAction";

        
        /// <summary>
        /// A Property value specification.
        /// </summary>
        public const string PropertyValueSpecification = BaseUri + "PropertyValueSpecification";

        
        /// <summary>
        /// Quantity: Duration (use  <a href='http://en.wikipedia.org/wiki/ISO_8601'>ISO 8601 duration format</a>).
        /// </summary>
        public const string Duration = BaseUri + "Duration";

        
        /// <summary>
        /// Boolean: True or False.
        /// </summary>
        public const string Boolean = BaseUri + "Boolean";

        
        /// <summary>
        /// An event happening at a certain time and location, such as a concert, lecture, or festival. Ticketing information may be added via the 'offers' property. Repeated events may be structured as separate Event objects.
        /// </summary>
        public const string Event = BaseUri + "Event";

        
        /// <summary>
        /// A volcano, like Fuji san.
        /// </summary>
        public const string Volcano = BaseUri + "Volcano";

        
        /// <summary>
        /// A governmental organization or agency.
        /// </summary>
        public const string GovernmentOrganization = BaseUri + "GovernmentOrganization";

        
        /// <summary>
        /// A QAPage is a WebPage focussed on a specific Question and its Answer(s), e.g. in a question answering site or documenting Frequently Asked Questions (FAQs).
        /// </summary>
        public const string QAPage = BaseUri + "QAPage";

        
        /// <summary>
        /// Categories that represent an assessment of the risk of fetal injury due to a drug or pharmaceutical used as directed by the mother during pregnancy.
        /// </summary>
        public const string DrugPregnancyCategory = BaseUri + "DrugPregnancyCategory";

        
        /// <summary>
        /// A medical clinic.
        /// </summary>
        public const string MedicalClinic = BaseUri + "MedicalClinic";

        
        /// <summary>
        /// Event type: Sales event.
        /// </summary>
        public const string SaleEvent = BaseUri + "SaleEvent";

        
        /// <summary>
        /// A short radio program or a segment/part of a radio program.
        /// </summary>
        public const string RadioClip = BaseUri + "RadioClip";

        
        /// <summary>
        /// User interaction: Block this content.
        /// </summary>
        public const string UserBlocks = BaseUri + "UserBlocks";

        
        /// <summary>
        /// The act of  departing from a place. An agent departs from an fromLocation for a destination, optionally with participants.
        /// </summary>
        public const string DepartAction = BaseUri + "DepartAction";

        
        /// <summary>
        /// A short TV or radio program or a segment/part of a program.
        /// </summary>
        public const string Clip = BaseUri + "Clip";

        
        /// <summary>
        /// A playground.
        /// </summary>
        public const string Playground = BaseUri + "Playground";

        
        /// <summary>
        /// A city hall.
        /// </summary>
        public const string CityHall = BaseUri + "CityHall";

        
        /// <summary>
        /// A church.
        /// </summary>
        public const string Church = BaseUri + "Church";

        
        /// <summary>
        /// The act of consuming written content.
        /// </summary>
        public const string ReadAction = BaseUri + "ReadAction";

        
        /// <summary>
        /// The act of arriving at a place. An agent arrives at a destination from an fromLocation, optionally with participants.
        /// </summary>
        public const string ArriveAction = BaseUri + "ArriveAction";

        
        /// <summary>
        /// A PublicationEvent corresponds indifferently to the event of publication for a CreativeWork of any type e.g. a broadcast event, an on-demand event, a book/journal publication via a variety of delivery media.
        /// </summary>
        public const string PublicationEvent = BaseUri + "PublicationEvent";

        
        /// <summary>
        /// A hostel - cheap accommodation, often in shared dormitories.
        /// </summary>
        public const string Hostel = BaseUri + "Hostel";

        
        /// <summary>
        /// Computer programming source code. Example: Full (compile ready) solutions, code snippet samples, scripts, templates.
        /// </summary>
        public const string Code = BaseUri + "Code";

        
        /// <summary>
        /// The act of an agent communicating (service provider, social media, etc) their departure of a previously reserved service (e.g. flight check in) or place (e.g. hotel).<p>Related actions:</p><ul><li><a href="http://schema.org/CheckInAction">CheckInAction</a>: The antagonym of CheckOutAction.</li><li><a href="http://schema.org/DepartAction">DepartAction</a>: Unlike DepartAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.</li><li><a href="http://schema.org/CancelAction">CancelAction</a>: Unlike CancelAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.</li></ul>
        /// </summary>
        public const string CheckOutAction = BaseUri + "CheckOutAction";

        
        /// <summary>
        /// Enumerated status values for Reservation.
        /// </summary>
        public const string ReservationStatusType = BaseUri + "ReservationStatusType";

        
        /// <summary>
        /// The act of asserting that a future event/action is no longer going to happen.<p>Related actions:</p><ul><li><a href="http://schema.org/ConfirmAction">ConfirmAction</a>: The antagonym of CancelAction.</li></ul>
        /// </summary>
        public const string CancelAction = BaseUri + "CancelAction";

        
        /// <summary>
        /// A motel.
        /// </summary>
        public const string Motel = BaseUri + "Motel";

        
        /// <summary>
        /// The act of achieving victory in a competitive activity.
        /// </summary>
        public const string WinAction = BaseUri + "WinAction";

        
        /// <summary>
        /// A bakery.
        /// </summary>
        public const string Bakery = BaseUri + "Bakery";

        
        /// <summary>
        /// The act of conveying information to another person via a communication medium (instrument) such as speech, email, or telephone conversation.
        /// </summary>
        public const string CommunicateAction = BaseUri + "CommunicateAction";

        
        /// <summary>
        /// An internet cafe.
        /// </summary>
        public const string InternetCafe = BaseUri + "InternetCafe";

        
        /// <summary>
        /// A piece of sculpture.
        /// </summary>
        public const string Sculpture = BaseUri + "Sculpture";

        
        /// <summary>
        /// A florist.
        /// </summary>
        public const string Florist = BaseUri + "Florist";

        
        /// <summary>
        /// A TV episode which can be part of a series or season.
        /// </summary>
        public const string TVEpisode = BaseUri + "TVEpisode";

        
        /// <summary>
        /// A men's clothing store.
        /// </summary>
        public const string MensClothingStore = BaseUri + "MensClothingStore";

        
        /// <summary>
        /// A dentist.
        /// </summary>
        public const string Dentist = BaseUri + "Dentist";

        
        /// <summary>
        /// A music venue.
        /// </summary>
        public const string MusicVenue = BaseUri + "MusicVenue";

        
        /// <summary>
        /// A page devoted to a single item, such as a particular product or hotel.
        /// </summary>
        public const string ItemPage = BaseUri + "ItemPage";

        
        /// <summary>
        /// Web page type: Search results page.
        /// </summary>
        public const string SearchResultsPage = BaseUri + "SearchResultsPage";

        
        /// <summary>
        /// Event type: Music event.
        /// </summary>
        public const string MusicEvent = BaseUri + "MusicEvent";

        
        /// <summary>
        /// An email message.
        /// </summary>
        public const string EmailMessage = BaseUri + "EmailMessage";

        
        /// <summary>
        /// A recipe.
        /// </summary>
        public const string Recipe = BaseUri + "Recipe";

        
        /// <summary>
        /// User interaction: Check-in at a place.
        /// </summary>
        public const string UserCheckins = BaseUri + "UserCheckins";

        
        /// <summary>
        /// The act of distributing content to people for their amusement or edification.
        /// </summary>
        public const string ShareAction = BaseUri + "ShareAction";

        
        /// <summary>
        /// The publication format of the book.
        /// </summary>
        public const string BookFormatType = BaseUri + "BookFormatType";

        
        /// <summary>
        /// A theater or other performing art center.
        /// </summary>
        public const string PerformingArtsTheater = BaseUri + "PerformingArtsTheater";

        
        /// <summary>
        /// The geographic coordinates of a place or event.
        /// </summary>
        public const string GeoCoordinates = BaseUri + "GeoCoordinates";

        
        /// <summary>
        /// A reservation for train travel.Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use http://schema.org/Offer.
        /// </summary>
        public const string TrainReservation = BaseUri + "TrainReservation";

        
        /// <summary>
        /// The act of taking money from a buyer in exchange for goods or services rendered. An agent sells an object, product, or service to a buyer for a price. Reciprocal of BuyAction.
        /// </summary>
        public const string SellAction = BaseUri + "SellAction";

        
        /// <summary>
        /// A dataset in downloadable form.
        /// </summary>
        public const string DataDownload = BaseUri + "DataDownload";

        
        /// <summary>
        /// A medical trial is a type of medical study that uses scientific process used to compare the safety and efficacy of medical therapies or medical procedures. In general, medical trials are controlled and subjects are allocated at random to the different treatment and/or control groups.
        /// </summary>
        public const string MedicalTrial = BaseUri + "MedicalTrial";

        
        /// <summary>
        /// Natural languages such as Spanish, Tamil, Hindi, English, etc. and programming languages such as Scheme and Lisp.
        /// </summary>
        public const string Language = BaseUri + "Language";

        
        /// <summary>
        /// The act of consuming static visual content.
        /// </summary>
        public const string ViewAction = BaseUri + "ViewAction";

        
        /// <summary>
        /// The act of expressing a preference from a set of options or a large or unbounded set of choices/options.
        /// </summary>
        public const string ChooseAction = BaseUri + "ChooseAction";

        
        /// <summary>
        /// A vet's office.
        /// </summary>
        public const string VeterinaryCare = BaseUri + "VeterinaryCare";

        
        /// <summary>
        /// The act of expressing a positive sentiment about the object. An agent likes an object (a proposition, topic or theme) with participants.
        /// </summary>
        public const string LikeAction = BaseUri + "LikeAction";

        
        /// <summary>
        /// Organization: Sports team.
        /// </summary>
        public const string SportsTeam = BaseUri + "SportsTeam";

        
        /// <summary>
        /// The act of consuming audio content.
        /// </summary>
        public const string ListenAction = BaseUri + "ListenAction";

        
        /// <summary>
        /// A business providing entertainment.
        /// </summary>
        public const string EntertainmentBusiness = BaseUri + "EntertainmentBusiness";

        
        /// <summary>
        /// A type of physical examination of a patient performed by a physician. Enumerated type.
        /// </summary>
        public const string PhysicalExam = BaseUri + "PhysicalExam";

        
        /// <summary>
        /// A condition or factor that serves as a reason to withhold a certain medical therapy. Contraindications can be absolute (there are no reasonable circumstances for undertaking a course of action) or relative (the patient is at higher risk of complications, but that these risks may be outweighed by other considerations or mitigated by other measures).
        /// </summary>
        public const string MedicalContraindication = BaseUri + "MedicalContraindication";

        
        /// <summary>
        /// The place where a person lives.
        /// </summary>
        public const string Residence = BaseUri + "Residence";

        
        /// <summary>
        /// A type of blood vessel that specifically carries lymph fluid unidirectionally toward the heart.
        /// </summary>
        public const string LymphaticVessel = BaseUri + "LymphaticVessel";

        
        /// <summary>
        /// A brand is a name used by an organization or business person for labeling a product, product group, or similar.
        /// </summary>
        public const string Brand = BaseUri + "Brand";

        
        /// <summary>
        /// An art gallery.
        /// </summary>
        public const string ArtGallery = BaseUri + "ArtGallery";

        
        /// <summary>
        /// A reservation for an event like a concert, sporting event, or lecture.Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use http://schema.org/Offer.
        /// </summary>
        public const string EventReservation = BaseUri + "EventReservation";

        
        /// <summary>
        /// Used to describe membership in a loyalty programs (e.g. "StarAliance"), traveler clubs (e.g. "AAA"), purchase clubs ("Safeway Club"), etc.
        /// </summary>
        public const string ProgramMembership = BaseUri + "ProgramMembership";

        
        /// <summary>
        /// A guideline recommendation that is regarded as efficacious and where quality of the data supporting the recommendation is sound.
        /// </summary>
        public const string MedicalGuidelineRecommendation = BaseUri + "MedicalGuidelineRecommendation";

        
        /// <summary>
        /// A legislative building&#x2014;for example, the state capitol.
        /// </summary>
        public const string LegislativeBuilding = BaseUri + "LegislativeBuilding";

        
        /// <summary>
        /// An indication for treating an underlying condition, symptom, etc.
        /// </summary>
        public const string TreatmentIndication = BaseUri + "TreatmentIndication";

        
        /// <summary>
        /// The act of generating a comment about a subject.
        /// </summary>
        public const string CommentAction = BaseUri + "CommentAction";

        
        /// <summary>
        /// Reserving a concrete object.<p>Related actions:</p><ul><li><a href="http://schema.org/ScheduleAction">ScheduleAction</a>: Unlike ScheduleAction, ReserveAction reserves concrete objects (e.g. a table, a hotel) towards a time slot / spatial allocation.</li></ul>
        /// </summary>
        public const string ReserveAction = BaseUri + "ReserveAction";

        
        /// <summary>
        /// An auto parts store.
        /// </summary>
        public const string AutoPartsStore = BaseUri + "AutoPartsStore";

        
        /// <summary>
        /// The basic data types such as Integers, Strings, etc.
        /// </summary>
        public const string DataType = BaseUri + "DataType";

        
        /// <summary>
        /// An agent bookmarks/flags/labels/tags/marks an object.
        /// </summary>
        public const string BookmarkAction = BaseUri + "BookmarkAction";

        
        /// <summary>
        /// The maximum dosing schedule considered safe for a drug or supplement as recommended by an authority or by the drug/supplement's manufacturer. Capture the recommending authority in the recognizingAuthority property of MedicalEntity.
        /// </summary>
        public const string MaximumDoseSchedule = BaseUri + "MaximumDoseSchedule";

        
        /// <summary>
        /// A reservation for bus travel.Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use http://schema.org/Offer.
        /// </summary>
        public const string BusReservation = BaseUri + "BusReservation";

        
        /// <summary>
        /// A toy store.
        /// </summary>
        public const string ToyStore = BaseUri + "ToyStore";

        
        /// <summary>
        /// An infectious disease is a clinically evident human disease resulting from the presence of pathogenic microbial agents, like pathogenic viruses, pathogenic bacteria, fungi, protozoa, multicellular parasites, and prions. To be considered an infectious disease, such pathogens are known to be able to cause this disease.
        /// </summary>
        public const string InfectiousDisease = BaseUri + "InfectiousDisease";

        
        /// <summary>
        /// A collection of music tracks.
        /// </summary>
        public const string MusicAlbum = BaseUri + "MusicAlbum";

        
        /// <summary>
        /// Accountancy business.
        /// </summary>
        public const string AccountingService = BaseUri + "AccountingService";

        
        /// <summary>
        /// A shopping center or mall.
        /// </summary>
        public const string ShoppingCenter = BaseUri + "ShoppingCenter";

        
        /// <summary>
        /// A television station.
        /// </summary>
        public const string TelevisionStation = BaseUri + "TelevisionStation";

        
        /// <summary>
        /// An EducationalAudience
        /// </summary>
        public const string EducationalAudience = BaseUri + "EducationalAudience";

        
        /// <summary>
        /// A landform or physical feature.  Landform elements include mountains, plains, lakes, rivers, seascape and oceanic waterbody interface features such as bays, peninsulas, seas and so forth, including sub-aqueous terrain features such as submersed mountain ranges, volcanoes, and the great ocean basins.
        /// </summary>
        public const string Landform = BaseUri + "Landform";

        
        /// <summary>
        /// A state or province of a country.
        /// </summary>
        public const string State = BaseUri + "State";

        
        /// <summary>
        /// An embassy.
        /// </summary>
        public const string Embassy = BaseUri + "Embassy";

        
        /// <summary>
        /// A structured value providing information about when a certain organization or person owned a certain product.
        /// </summary>
        public const string OwnershipInfo = BaseUri + "OwnershipInfo";

        
        /// <summary>
        /// A sports club.
        /// </summary>
        public const string SportsClub = BaseUri + "SportsClub";

        
        /// <summary>
        /// A lodging business, such as a motel, hotel, or inn.
        /// </summary>
        public const string LodgingBusiness = BaseUri + "LodgingBusiness";

        
        /// <summary>
        /// Web applications.
        /// </summary>
        public const string WebApplication = BaseUri + "WebApplication";

        
        /// <summary>
        /// The act of editing a recipient by removing one of its objects.
        /// </summary>
        public const string DeleteAction = BaseUri + "DeleteAction";

        
        /// <summary>
        /// A book.
        /// </summary>
        public const string Book = BaseUri + "Book";

        
        /// <summary>
        /// A fast-food restaurant.
        /// </summary>
        public const string FastFoodRestaurant = BaseUri + "FastFoodRestaurant";

        
        /// <summary>
        /// A store that sells mobile phones and related accessories.
        /// </summary>
        public const string MobilePhoneStore = BaseUri + "MobilePhoneStore";

        
        /// <summary>
        /// A gas station.
        /// </summary>
        public const string GasStation = BaseUri + "GasStation";

        
        /// <summary>
        /// A government office&#x2014;for example, an IRS or DMV office.
        /// </summary>
        public const string GovernmentOffice = BaseUri + "GovernmentOffice";

        
        /// <summary>
        /// The mailing address.
        /// </summary>
        public const string PostalAddress = BaseUri + "PostalAddress";

        
        /// <summary>
        /// A Childcare center.
        /// </summary>
        public const string ChildCare = BaseUri + "ChildCare";

        
        /// <summary>
        /// The act of transferring ownership of an object to a destination. Reciprocal of TakeAction.<p>Related actions:</p><ul><li><a href="http://schema.org/TakeAction">TakeAction</a>: Reciprocal of GiveAction.</li><li><a href="http://schema.org/SendAction">SendAction</a>: Unlike SendAction, GiveAction implies that ownership is being transferred (e.g. I may send my laptop to you, but that doesn't mean I'm giving it to you).</li></ul>
        /// </summary>
        public const string GiveAction = BaseUri + "GiveAction";

        
        /// <summary>
        /// An agent pays a price to a participant.
        /// </summary>
        public const string PayAction = BaseUri + "PayAction";

        
        /// <summary>
        /// An indication for a medical therapy that has been formally specified or approved by a regulatory body that regulates use of the therapy; for example, the US FDA approves indications for most drugs in the US.
        /// </summary>
        public const string ApprovedIndication = BaseUri + "ApprovedIndication";

        
        /// <summary>
        /// An enumeration that describes different types of medical procedures.
        /// </summary>
        public const string MedicalProcedureType = BaseUri + "MedicalProcedureType";

        
        /// <summary>
        /// The act of giving money to a seller in exchange for goods or services rendered. An agent buys an object, product, or service from a seller for a price. Reciprocal of SellAction.
        /// </summary>
        public const string BuyAction = BaseUri + "BuyAction";

        
        /// <summary>
        /// Fitness-related activity designed for a specific health-related purpose, including defined exercise routines as well as activity prescribed by a clinician.
        /// </summary>
        public const string ExercisePlan = BaseUri + "ExercisePlan";

        
        /// <summary>
        /// Web page type: Contact page.
        /// </summary>
        public const string ContactPage = BaseUri + "ContactPage";

        
        /// <summary>
        /// An audio file.
        /// </summary>
        public const string AudioObject = BaseUri + "AudioObject";

        
        /// <summary>
        /// The causative agent(s) that are responsible for the pathophysiologic process that eventually results in a medical condition, symptom or sign. In this schema, unless otherwise specified this is meant to be the proximate cause of the medical condition, symptom or sign. The proximate cause is defined as the causative agent that most directly results in the medical condition, symptom or sign. For example, the HIV virus could be considered a cause of AIDS. Or in a diagnostic context, if a patient fell and sustained a hip fracture and two days later sustained a pulmonary embolism which eventuated in a cardiac arrest, the cause of the cardiac arrest (the proximate cause) would be the pulmonary embolism and not the fall. <p>Medical causes can include cardiovascular, chemical, dermatologic, endocrine, environmental, gastroenterologic, genetic, hematologic, gynecologic, iatrogenic, infectious, musculoskeletal, neurologic, nutritional, obstetric, oncologic, otolaryngologic, pharmacologic, psychiatric, pulmonary, renal, rheumatologic, toxic, traumatic, or urologic causes; medical conditions can be causes as well.
        /// </summary>
        public const string MedicalCause = BaseUri + "MedicalCause";

        
        /// <summary>
        /// A technical article - Example: How-to (task) topics, step-by-step, procedural troubleshooting, specifications, etc.
        /// </summary>
        public const string TechArticle = BaseUri + "TechArticle";

        
        /// <summary>
        /// A music store.
        /// </summary>
        public const string MusicStore = BaseUri + "MusicStore";

        
        /// <summary>
        /// The act of interacting with another person or organization.
        /// </summary>
        public const string InteractAction = BaseUri + "InteractAction";

        
        /// <summary>
        /// Indicates whether this drug is available by prescription or over-the-counter.
        /// </summary>
        public const string DrugPrescriptionStatus = BaseUri + "DrugPrescriptionStatus";

        
        /// <summary>
        /// Categories of physical activity, organized by physiologic classification.
        /// </summary>
        public const string PhysicalActivityCategory = BaseUri + "PhysicalActivityCategory";

        
        /// <summary>
        /// A Hindu temple.
        /// </summary>
        public const string HinduTemple = BaseUri + "HinduTemple";

        
        /// <summary>
        /// A hospital.
        /// </summary>
        public const string Hospital = BaseUri + "Hospital";

        
        /// <summary>
        /// Any branch of a field in which people typically develop specific expertise, usually after significant study, time, and effort.
        /// </summary>
        public const string Specialty = BaseUri + "Specialty";

        
        /// <summary>
        /// A set of characteristics describing parents, who can be interested in viewing some content
        /// </summary>
        public const string ParentAudience = BaseUri + "ParentAudience";

        
        /// <summary>
        /// A short band of tough, flexible, fibrous connective tissue that functions to connect multiple bones, cartilages, and structurally support joints.
        /// </summary>
        public const string Ligament = BaseUri + "Ligament";

        
        /// <summary>
        /// An historical landmark or building.
        /// </summary>
        public const string LandmarksOrHistoricalBuildings = BaseUri + "LandmarksOrHistoricalBuildings";

        
        /// <summary>
        /// A permit issued by a government agency.
        /// </summary>
        public const string GovernmentPermit = BaseUri + "GovernmentPermit";

        
        /// <summary>
        /// A courthouse.
        /// </summary>
        public const string Courthouse = BaseUri + "Courthouse";

        
        /// <summary>
        /// A sports location, such as a playing field.
        /// </summary>
        public const string SportsActivityLocation = BaseUri + "SportsActivityLocation";

        
        /// <summary>
        /// A type of blood vessel that specifically carries blood to the heart.
        /// </summary>
        public const string Vein = BaseUri + "Vein";

        
        /// <summary>
        /// An educational organization.
        /// </summary>
        public const string EducationalOrganization = BaseUri + "EducationalOrganization";

        
        /// <summary>
        /// Any medical intervention designed to prevent, treat, and cure human diseases and medical conditions, including both curative and palliative therapies. Medical therapies are typically processes of care relying upon pharmacotherapy, behavioral therapy, supportive therapy (with fluid or nutrition for example), or detoxification (e.g. hemodialysis) aimed at improving or preventing a health condition.
        /// </summary>
        public const string MedicalTherapy = BaseUri + "MedicalTherapy";

        
        /// <summary>
        /// A pond
        /// </summary>
        public const string Pond = BaseUri + "Pond";

        
        /// <summary>
        /// A list of items of any sort&#x2014;for example, Top 10 Movies About Weathermen, or Top 100 Party Songs. Not to be confused with HTML lists, which are often used only for formatting.
        /// </summary>
        public const string ItemList = BaseUri + "ItemList";

        
        /// <summary>
        /// A golf course.
        /// </summary>
        public const string GolfCourse = BaseUri + "GolfCourse";

        
        /// <summary>
        /// A geographical region under the jurisdiction of a particular government.
        /// </summary>
        public const string AdministrativeArea = BaseUri + "AdministrativeArea";

        
        /// <summary>
        /// A movie theater.
        /// </summary>
        public const string MovieTheater = BaseUri + "MovieTheater";

        
        /// <summary>
        /// The act of applying an object to its intended purpose.
        /// </summary>
        public const string UseAction = BaseUri + "UseAction";

        
        /// <summary>
        /// A synagogue.
        /// </summary>
        public const string Synagogue = BaseUri + "Synagogue";

        
        /// <summary>
        /// Enumerated status values for Order.
        /// </summary>
        public const string OrderStatus = BaseUri + "OrderStatus";

        
        /// <summary>
        /// A bowling alley.
        /// </summary>
        public const string BowlingAlley = BaseUri + "BowlingAlley";

        
        /// <summary>
        /// Any anatomical structure which pertains to the soft nervous tissue functioning as the coordinating center of sensation and intellectual and nervous activity.
        /// </summary>
        public const string BrainStructure = BaseUri + "BrainStructure";

        
        /// <summary>
        /// A code for a medical entity.
        /// </summary>
        public const string MedicalCode = BaseUri + "MedicalCode";

        
        /// <summary>
        /// A short TV program or a segment/part of a TV program.
        /// </summary>
        public const string TVClip = BaseUri + "TVClip";

        
        /// <summary>
        /// The act of swallowing liquids.
        /// </summary>
        public const string DrinkAction = BaseUri + "DrinkAction";

        
        /// <summary>
        /// A bus station.
        /// </summary>
        public const string BusStation = BaseUri + "BusStation";

        
        /// <summary>
        /// The act of marrying a person.
        /// </summary>
        public const string MarryAction = BaseUri + "MarryAction";

        
        /// <summary>
        /// A body of structured information describing some topic(s) of interest.
        /// </summary>
        public const string Dataset = BaseUri + "Dataset";

        
        /// <summary>
        /// Event type: Education event.
        /// </summary>
        public const string EducationEvent = BaseUri + "EducationEvent";

        
        /// <summary>
        /// An entry point, within some Web-based protocol.
        /// </summary>
        public const string EntryPoint = BaseUri + "EntryPoint";

        
        /// <summary>
        /// An alternative, closely-related condition typically considered later in the differential diagnosis process along with the signs that are used to distinguish it.
        /// </summary>
        public const string DDxElement = BaseUri + "DDxElement";

        
        /// <summary>
        /// A private parcel service as the delivery mode available for a certain offer.      Commonly used values:      http://purl.org/goodrelations/v1#DHL     http://purl.org/goodrelations/v1#FederalExpress     http://purl.org/goodrelations/v1#UPS     	
        /// </summary>
        public const string ParcelService = BaseUri + "ParcelService";

        
        /// <summary>
        /// Aquarium.
        /// </summary>
        public const string Aquarium = BaseUri + "Aquarium";

        
        /// <summary>
        /// A campground.
        /// </summary>
        public const string Campground = BaseUri + "Campground";

        
        /// <summary>
        /// The act of installing an application.
        /// </summary>
        public const string InstallAction = BaseUri + "InstallAction";

        
        /// <summary>
        /// A post office.
        /// </summary>
        public const string PostOffice = BaseUri + "PostOffice";

        
        /// <summary>
        /// Financial services business.
        /// </summary>
        public const string FinancialService = BaseUri + "FinancialService";

        
        /// <summary>
        /// The act of physically/electronically dispatching an object for transfer from an origin to a destination.<p>Related actions:</p><ul><li><a href="http://schema.org/ReceiveAction">ReceiveAction</a>: The reciprocal of SendAction.</li><li><a href="http://schema.org/GiveAction">GiveAction</a>: Unlike GiveAction, SendAction does not imply the transfer of ownership (e.g. I can send you my laptop, but I'm not necessarily giving it to you).</li></ul>
        /// </summary>
        public const string SendAction = BaseUri + "SendAction";

        
        /// <summary>
        /// A general contractor.
        /// </summary>
        public const string GeneralContractor = BaseUri + "GeneralContractor";

        
        /// <summary>
        /// A publication event e.g. catch-up TV or radio podcast, during which a program is available on-demand.
        /// </summary>
        public const string OnDemandEvent = BaseUri + "OnDemandEvent";

        
        /// <summary>
        /// A lake (for example, Lake Pontrachain).
        /// </summary>
        public const string LakeBodyOfWater = BaseUri + "LakeBodyOfWater";

        
        /// <summary>
        /// Any specific branch of medical science or practice. Medical specialities include clinical specialties that pertain to particular organ systems and their respective disease states, as well as allied health specialties. Enumerated type.
        /// </summary>
        public const string MedicalSpecialty = BaseUri + "MedicalSpecialty";

        
        /// <summary>
        /// An automobile.
        /// </summary>
        public const string Car = BaseUri + "Car";

        
        /// <summary>
        /// Web page type: Profile page.
        /// </summary>
        public const string ProfilePage = BaseUri + "ProfilePage";

        
        /// <summary>
        /// A medical procedure intended primarily for palliative purposes, aimed at relieving the symptoms of an underlying health condition.
        /// </summary>
        public const string PalliativeProcedure = BaseUri + "PalliativeProcedure";

        
        /// <summary>
        /// Residence type: Apartment complex.
        /// </summary>
        public const string ApartmentComplex = BaseUri + "ApartmentComplex";

        
        /// <summary>
        /// A radio episode which can be part of a series or season.
        /// </summary>
        public const string RadioEpisode = BaseUri + "RadioEpisode";

        
        /// <summary>
        /// A product taken by mouth that contains a dietary ingredient intended to supplement the diet. Dietary ingredients may include vitamins, minerals, herbs or other botanicals, amino acids, and substances such as enzymes, organ tissues, glandulars and metabolites.
        /// </summary>
        public const string DietarySupplement = BaseUri + "DietarySupplement";

        
        /// <summary>
        /// A comedy club.
        /// </summary>
        public const string ComedyClub = BaseUri + "ComedyClub";

        
        /// <summary>
        /// Bed and breakfast.
        /// </summary>
        public const string BedAndBreakfast = BaseUri + "BedAndBreakfast";

        
        /// <summary>
        /// A high school.
        /// </summary>
        public const string HighSchool = BaseUri + "HighSchool";

        
        /// <summary>
        /// An car dealership.
        /// </summary>
        public const string AutoDealer = BaseUri + "AutoDealer";

        
        /// <summary>
        /// A college, university, or other third-level educational institution.
        /// </summary>
        public const string CollegeOrUniversity = BaseUri + "CollegeOrUniversity";

        
        /// <summary>
        /// Event type: Children's event.
        /// </summary>
        public const string ChildrensEvent = BaseUri + "ChildrensEvent";

        
        /// <summary>
        /// A sea (for example, the Caspian sea).
        /// </summary>
        public const string SeaBodyOfWater = BaseUri + "SeaBodyOfWater";

        
        /// <summary>
        /// A travel agency.
        /// </summary>
        public const string TravelAgency = BaseUri + "TravelAgency";

        
        /// <summary>
        /// A dry-cleaning business.
        /// </summary>
        public const string DryCleaningOrLaundry = BaseUri + "DryCleaningOrLaundry";

        
        /// <summary>
        /// Event type: A social dance.
        /// </summary>
        public const string DanceEvent = BaseUri + "DanceEvent";

        
        /// <summary>
        /// A medical test performed on a sample of a patient's blood.
        /// </summary>
        public const string BloodTest = BaseUri + "BloodTest";

        
        /// <summary>
        /// Car repair business.
        /// </summary>
        public const string AutoRepair = BaseUri + "AutoRepair";

        
        /// <summary>
        /// A patient-reported or observed dosing schedule for a drug or supplement.
        /// </summary>
        public const string ReportedDoseSchedule = BaseUri + "ReportedDoseSchedule";

        
        /// <summary>
        /// A table on a Web page.
        /// </summary>
        public const string Table = BaseUri + "Table";

        
        /// <summary>
        /// Event type: Theater performance.
        /// </summary>
        public const string TheaterEvent = BaseUri + "TheaterEvent";

        
        /// <summary>
        /// Brewery.
        /// </summary>
        public const string Brewery = BaseUri + "Brewery";

        
        /// <summary>
        /// Properties that take Mass as values are of the form '&lt;Number&gt; &lt;Mass unit of measure&gt;'. E.g., '7 kg'
        /// </summary>
        public const string Mass = BaseUri + "Mass";

        
        /// <summary>
        /// A middle school (typically for children aged around 11-14, although this varies somewhat).
        /// </summary>
        public const string MiddleSchool = BaseUri + "MiddleSchool";

        
        /// <summary>
        /// The most generic kind of creative work, including books, movies, photographs, software programs, etc.
        /// </summary>
        public const string CreativeWork = BaseUri + "CreativeWork";

        
        /// <summary>
        /// Any indication of the existence of a medical condition or disease that is apparent to the patient.
        /// </summary>
        public const string MedicalSymptom = BaseUri + "MedicalSymptom";

        
        /// <summary>
        /// A store that sells materials useful or necessary for various hobbies.
        /// </summary>
        public const string HobbyShop = BaseUri + "HobbyShop";

        
        /// <summary>
        /// A group of multiple reservations with common values for all sub-reservations.
        /// </summary>
        public const string ReservationPackage = BaseUri + "ReservationPackage";

        
        /// <summary>
        /// Represents additional information about a relationship or property. For example a Role can be used to say that a 'member' role linking some SportsTeam to a player occurred during a particular time period. Or that a Person's 'actor' role in a Movie was for some particular characterName. Such properties can be attached to a Role entity, which is then associated with the main entities using ordinary properties like 'member' or 'actor'.     
        /// </summary>
        public const string Role = BaseUri + "Role";

        
        /// <summary>
        /// A reservation to dine at a food-related business.Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.
        /// </summary>
        public const string FoodEstablishmentReservation = BaseUri + "FoodEstablishmentReservation";

        
        /// <summary>
        /// A means for accessing a service, e.g. a government office location, web site, or phone number.
        /// </summary>
        public const string ServiceChannel = BaseUri + "ServiceChannel";

        
        /// <summary>
        /// A hardware store.
        /// </summary>
        public const string HardwareStore = BaseUri + "HardwareStore";

        
        /// <summary>
        /// A grocery store.
        /// </summary>
        public const string GroceryStore = BaseUri + "GroceryStore";

        
        /// <summary>
        /// A set of characteristics belonging to businesses, e.g. who compose an item's target audience.
        /// </summary>
        public const string BusinessAudience = BaseUri + "BusinessAudience";

        
        /// <summary>
        /// A defence establishment, such as an army or navy base.
        /// </summary>
        public const string DefenceEstablishment = BaseUri + "DefenceEstablishment";

        
        /// <summary>
        /// An over the air or online broadcast event.
        /// </summary>
        public const string BroadcastEvent = BaseUri + "BroadcastEvent";

        
        /// <summary>
        /// A software application designed specifically to work well on a mobile device such as a telephone.
        /// </summary>
        public const string MobileApplication = BaseUri + "MobileApplication";

        
        /// <summary>
        /// A service provided by an organization, e.g. delivery service, print services, etc.
        /// </summary>
        public const string Service = BaseUri + "Service";

        
        /// <summary>
        /// Data type: Floating number.
        /// </summary>
        public const string Float = BaseUri + "Float";

        
        /// <summary>
        /// A park.
        /// </summary>
        public const string Park = BaseUri + "Park";

        
        /// <summary>
        /// An adult entertainment establishment.
        /// </summary>
        public const string AdultEntertainment = BaseUri + "AdultEntertainment";

        
        /// <summary>
        /// Series dedicated to TV broadcast and associated online delivery.
        /// </summary>
        public const string TVSeries = BaseUri + "TVSeries";

        
        /// <summary>
        /// An ice cream shop
        /// </summary>
        public const string IceCreamShop = BaseUri + "IceCreamShop";

        
        /// <summary>
        /// A process of care using radiation aimed at improving a health condition.
        /// </summary>
        public const string RadiationTherapy = BaseUri + "RadiationTherapy";

        
        /// <summary>
        /// A demand entity represents the public, not necessarily binding, not necessarily exclusive, announcement by an organization or person to seek a certain type of goods or services. For describing demand using this type, the very same properties used for Offer apply.
        /// </summary>
        public const string Demand = BaseUri + "Demand";

        
        /// <summary>
        /// A pharmacy or drugstore.
        /// </summary>
        public const string Pharmacy = BaseUri + "Pharmacy";

        
        /// <summary>
        /// Organization: A business corporation.
        /// </summary>
        public const string Corporation = BaseUri + "Corporation";

        
        /// <summary>
        /// A reservation for a taxi.Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use http://schema.org/Offer.
        /// </summary>
        public const string TaxiReservation = BaseUri + "TaxiReservation";

        
        /// <summary>
        /// A bookstore.
        /// </summary>
        public const string BookStore = BaseUri + "BookStore";

        
        /// <summary>
        /// A hotel.
        /// </summary>
        public const string Hotel = BaseUri + "Hotel";

        
        /// <summary>
        /// A common pathway for the electrochemical nerve impulses that are transmitted along each of the axons.
        /// </summary>
        public const string Nerve = BaseUri + "Nerve";

        
        /// <summary>
        /// A furniture store.
        /// </summary>
        public const string FurnitureStore = BaseUri + "FurnitureStore";

        
        /// <summary>
        /// Data type: Number.
        /// </summary>
        public const string Number = BaseUri + "Number";

        
        /// <summary>
        /// A food-related business.
        /// </summary>
        public const string FoodEstablishment = BaseUri + "FoodEstablishment";

        
        /// <summary>
        /// The act of adding at a specific location in an ordered collection.
        /// </summary>
        public const string InsertAction = BaseUri + "InsertAction";

        
        /// <summary>
        /// A single, identifiable product instance (e.g. a laptop with a particular serial number).
        /// </summary>
        public const string IndividualProduct = BaseUri + "IndividualProduct";

        
        /// <summary>
        /// The act of editing by adding an object to a collection.
        /// </summary>
        public const string AddAction = BaseUri + "AddAction";

        
        /// <summary>
        /// An office equipment store.
        /// </summary>
        public const string OfficeEquipmentStore = BaseUri + "OfficeEquipmentStore";

        
        /// <summary>
        /// Design models for observational medical studies. Enumerated type.
        /// </summary>
        public const string MedicalObservationalStudyDesign = BaseUri + "MedicalObservationalStudyDesign";

        
        /// <summary>
        /// A software application.
        /// </summary>
        public const string SoftwareApplication = BaseUri + "SoftwareApplication";

        
        /// <summary>
        /// A range of of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.      Commonly used values:      http://purl.org/goodrelations/v1#Labor-BringIn     http://purl.org/goodrelations/v1#PartsAndLabor-BringIn     http://purl.org/goodrelations/v1#PartsAndLabor-PickUp     	
        /// </summary>
        public const string WarrantyScope = BaseUri + "WarrantyScope";

        
        /// <summary>
        /// A payment method is a standardized procedure for transferring the monetary amount for a purchase. Payment methods are characterized by the legal and technical structures used, and by the organization or group carrying out the transaction.      Commonly used values:      http://purl.org/goodrelations/v1#ByBankTransferInAdvance     http://purl.org/goodrelations/v1#ByInvoice     http://purl.org/goodrelations/v1#Cash     http://purl.org/goodrelations/v1#CheckInAdvance     http://purl.org/goodrelations/v1#COD     http://purl.org/goodrelations/v1#DirectDebit     http://purl.org/goodrelations/v1#GoogleCheckout     http://purl.org/goodrelations/v1#PayPal     http://purl.org/goodrelations/v1#PaySwarm     		
        /// </summary>
        public const string PaymentMethod = BaseUri + "PaymentMethod";

        
        /// <summary>
        /// A sidebar section of the page.
        /// </summary>
        public const string WPSideBar = BaseUri + "WPSideBar";

        
        /// <summary>
        /// The anatomical location at which two or more bones make contact.
        /// </summary>
        public const string Joint = BaseUri + "Joint";

        
        /// <summary>
        /// The act of granting permission to an object.
        /// </summary>
        public const string AuthorizeAction = BaseUri + "AuthorizeAction";

        
        /// <summary>
        /// An outlet store.
        /// </summary>
        public const string OutletStore = BaseUri + "OutletStore";

        
        /// <summary>
        /// A structured value indicating the quantity, unit of measurement, and business function of goods included in a bundle offer.
        /// </summary>
        public const string TypeAndQuantityNode = BaseUri + "TypeAndQuantityNode";

        
        /// <summary>
        /// Intended audience for an item, i.e. the group for whom the item was created.
        /// </summary>
        public const string Audience = BaseUri + "Audience";

        
        /// <summary>
        /// Target audiences for medical web pages. Enumerated type.
        /// </summary>
        public const string MedicalAudience = BaseUri + "MedicalAudience";

        
        /// <summary>
        /// Event type: Sports event.
        /// </summary>
        public const string SportsEvent = BaseUri + "SportsEvent";

        
        /// <summary>
        /// A review of an item - for example, of a restaurant, movie, or store.
        /// </summary>
        public const string Review = BaseUri + "Review";

        
        /// <summary>
        /// Health and beauty.
        /// </summary>
        public const string HealthAndBeautyBusiness = BaseUri + "HealthAndBeautyBusiness";

        
        /// <summary>
        /// The business function specifies the type of activity or access (i.e., the bundle of rights) offered by the organization or business person through the offer. Typical are sell, rental or lease, maintenance or repair, manufacture / produce, recycle / dispose, engineering / construction, or installation. Proprietary specifications of access rights are also instances of this class.      Commonly used values:      http://purl.org/goodrelations/v1#ConstructionInstallation     http://purl.org/goodrelations/v1#Dispose     http://purl.org/goodrelations/v1#LeaseOut     http://purl.org/goodrelations/v1#Maintain     http://purl.org/goodrelations/v1#ProvideService     http://purl.org/goodrelations/v1#Repair     http://purl.org/goodrelations/v1#Sell     http://purl.org/goodrelations/v1#Buy     		
        /// </summary>
        public const string BusinessFunction = BaseUri + "BusinessFunction";

        
        /// <summary>
        /// A house painting service.
        /// </summary>
        public const string HousePainter = BaseUri + "HousePainter";

        
        /// <summary>
        /// Web page type: Collection page.
        /// </summary>
        public const string CollectionPage = BaseUri + "CollectionPage";

        
        /// <summary>
        /// Lists or enumerations&#x2014;for example, a list of cuisines or music genres, etc.
        /// </summary>
        public const string Enumeration = BaseUri + "Enumeration";

        
        /// <summary>
        /// A date value in <a href='http://en.wikipedia.org/wiki/ISO_8601'>ISO 8601 date format</a>.
        /// </summary>
        public const string Date = BaseUri + "Date";

        
        /// <summary>
        /// Animal shelter.
        /// </summary>
        public const string AnimalShelter = BaseUri + "AnimalShelter";

        
        /// <summary>
        /// A datasheet or vendor specification of a product (in the sense of a prototypical description).
        /// </summary>
        public const string ProductModel = BaseUri + "ProductModel";

        
        /// <summary>
        /// A news article
        /// </summary>
        public const string NewsArticle = BaseUri + "NewsArticle";

        
        /// <summary>
        /// A process of progressive physical care and rehabilitation aimed at improving a health condition.
        /// </summary>
        public const string PhysicalTherapy = BaseUri + "PhysicalTherapy";

        
        /// <summary>
        /// A condition or factor that indicates use of a medical therapy, including signs, symptoms, risk factors, anatomical states, etc.
        /// </summary>
        public const string MedicalIndication = BaseUri + "MedicalIndication";

        
        /// <summary>
        /// Quantities such as distance, time, mass, weight, etc. Particular instances of say Mass are entities like '3 Kg' or '4 milligrams'.
        /// </summary>
        public const string Quantity = BaseUri + "Quantity";

        
        /// <summary>
        /// A permit issued by an organization, e.g. a parking pass.
        /// </summary>
        public const string Permit = BaseUri + "Permit";

        
        /// <summary>
        /// The act of providing goods, services, or money without compensation, often for philanthropic reasons.
        /// </summary>
        public const string DonateAction = BaseUri + "DonateAction";

        
        /// <summary>
        /// A cafe or coffee shop.
        /// </summary>
        public const string CafeOrCoffeeShop = BaseUri + "CafeOrCoffeeShop";

        
        /// <summary>
        /// A web page that provides medical information.
        /// </summary>
        public const string MedicalWebPage = BaseUri + "MedicalWebPage";

        
        /// <summary>
        /// A tire shop.
        /// </summary>
        public const string TireShop = BaseUri + "TireShop";

        
        /// <summary>
        /// Enumerations related to health and the practice of medicine.
        /// </summary>
        public const string MedicalEnumeration = BaseUri + "MedicalEnumeration";

        
        /// <summary>
        /// A subclass of Role used to describe roles within organizations.
        /// </summary>
        public const string OrganizationRole = BaseUri + "OrganizationRole";

        
        /// <summary>
        /// The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates pushed to.<p>Related actions:</p><ul><li><a href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction, SubscribeAction implies that the subscriber acts as a passive agent being constantly/actively pushed for updates.</li><li><a href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike RegisterAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.</li><li><a href="http://schema.org/JoinAction">JoinAction</a>: Unlike JoinAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.</li></ul>
        /// </summary>
        public const string SubscribeAction = BaseUri + "SubscribeAction";

        
        /// <summary>
        /// Any recommendation made by a standard society (e.g. ACC/AHA) or consensus statement that denotes how to diagnose and treat a particular condition. Note: this type should be used to tag the actual guideline recommendation; if the guideline recommendation occurs in a larger scholarly article, use MedicalScholarlyArticle to tag the overall article, not this type. Note also: the organization making the recommendation should be captured in the recognizingAuthority base property of MedicalEntity.
        /// </summary>
        public const string MedicalGuideline = BaseUri + "MedicalGuideline";

        
        /// <summary>
        /// A car rental business.
        /// </summary>
        public const string AutoRental = BaseUri + "AutoRental";

        
        /// <summary>
        /// A convenience store.
        /// </summary>
        public const string ConvenienceStore = BaseUri + "ConvenienceStore";

        
        /// <summary>
        /// Entities that have a somewhat fixed, physical extension.
        /// </summary>
        public const string Place = BaseUri + "Place";

        
        /// <summary>
        /// An amusement park.
        /// </summary>
        public const string AmusementPark = BaseUri + "AmusementPark";

        
        /// <summary>
        /// A canal, like the Panama Canal
        /// </summary>
        public const string Canal = BaseUri + "Canal";

        
        /// <summary>
        /// A point in time recurring on multiple days in the form hh:mm:ss[Z|(+|-)hh:mm] (see <a href="http://www.w3.org/TR/xmlschema-2/#time">XML schema for details</a>).
        /// </summary>
        public const string Time = BaseUri + "Time";

        
        /// <summary>
        /// The act of swallowing solid objects.
        /// </summary>
        public const string EatAction = BaseUri + "EatAction";

        
        /// <summary>
        /// A delivery method is a standardized procedure for transferring the product or service to the destination of fulfillment chosen by the customer. Delivery methods are characterized by the means of transportation used, and by the organization or group that is the contracting party for the sending organization or person.      Commonly used values:      http://purl.org/goodrelations/v1#DeliveryModeDirectDownload     http://purl.org/goodrelations/v1#DeliveryModeFreight     http://purl.org/goodrelations/v1#DeliveryModeMail     http://purl.org/goodrelations/v1#DeliveryModeOwnFleet     http://purl.org/goodrelations/v1#DeliveryModePickUp     http://purl.org/goodrelations/v1#DHL     http://purl.org/goodrelations/v1#FederalExpress     http://purl.org/goodrelations/v1#UPS     		
        /// </summary>
        public const string DeliveryMethod = BaseUri + "DeliveryMethod";

        
        /// <summary>
        /// A business entity type is a conceptual entity representing the legal form, the size, the main line of business, the position in the value chain, or any combination thereof, of an organization or business person.      Commonly used values:      http://purl.org/goodrelations/v1#Business     http://purl.org/goodrelations/v1#Enduser     http://purl.org/goodrelations/v1#PublicInstitution     http://purl.org/goodrelations/v1#Reseller      		
        /// </summary>
        public const string BusinessEntityType = BaseUri + "BusinessEntityType";

        
        /// <summary>
        /// A process of care involving exercise, changes to diet, fitness routines, and other lifestyle changes aimed at improving a health condition.
        /// </summary>
        public const string LifestyleModification = BaseUri + "LifestyleModification";

        
        /// <summary>
        /// A pet store.
        /// </summary>
        public const string PetStore = BaseUri + "PetStore";

        
        /// <summary>
        /// The status of an Action.
        /// </summary>
        public const string ActionStatusType = BaseUri + "ActionStatusType";

        
        /// <summary>
        /// Any part of the human body, typically a component of an anatomical system. Organs, tissues, and cells are all anatomical structures.
        /// </summary>
        public const string AnatomicalStructure = BaseUri + "AnatomicalStructure";

        
        /// <summary>
        /// A user interacting with a page
        /// </summary>
        public const string UserInteraction = BaseUri + "UserInteraction";

        
        /// <summary>
        /// Any bodily activity that enhances or maintains physical fitness and overall health and wellness. Includes activity that is part of daily living and routine, structured exercise, and exercise prescribed as part of a medical treatment or recovery plan.
        /// </summary>
        public const string PhysicalActivity = BaseUri + "PhysicalActivity";

        
        /// <summary>
        /// An action performed by a direct agent and indirect     participants upon a direct object. Optionally happens at a location     with the help of an inanimate instrument. The execution of the action     may produce a result. Specific action sub-type documentation specifies     the exact expectation of each argument/role.
        /// </summary>
        public const string Action = BaseUri + "Action";

        
        /// <summary>
        /// An ocean (for example, the Pacific).
        /// </summary>
        public const string OceanBodyOfWater = BaseUri + "OceanBodyOfWater";

        
        /// <summary>
        /// A zoo.
        /// </summary>
        public const string Zoo = BaseUri + "Zoo";

        
        /// <summary>
        /// The act of notifying someone of information pertinent to them, with no expectation of a response.
        /// </summary>
        public const string InformAction = BaseUri + "InformAction";

        
        /// <summary>
        /// A parking lot or other parking facility.
        /// </summary>
        public const string ParkingFacility = BaseUri + "ParkingFacility";

        
        /// <summary>
        /// Bank or credit union.
        /// </summary>
        public const string BankOrCreditUnion = BaseUri + "BankOrCreditUnion";

        
        /// <summary>
        /// The UserInteraction event in which a user comments on an item.
        /// </summary>
        public const string UserComments = BaseUri + "UserComments";

        
        /// <summary>
        /// Residence type: Single-family home.
        /// </summary>
        public const string SingleFamilyResidence = BaseUri + "SingleFamilyResidence";

        
        /// <summary>
        /// A country.
        /// </summary>
        public const string Country = BaseUri + "Country";

        
        /// <summary>
        /// The act of an agent relocating to a place.<p>Related actions:</p><ul><li><a href="http://schema.org/TransferAction">TransferAction</a>: Unlike TransferAction, the subject of the move is a living Person or Organization rather than an inanimate object.</li></ul>
        /// </summary>
        public const string MoveAction = BaseUri + "MoveAction";

        
        /// <summary>
        /// A service provided by a government organization, e.g. food stamps, veterans benefits, etc.
        /// </summary>
        public const string GovernmentService = BaseUri + "GovernmentService";

        
        /// <summary>
        /// Scheduling future actions, events, or tasks.<p>Related actions:</p><ul><li><a href="http://schema.org/ReserveAction">ReserveAction</a>: Unlike ReserveAction, ScheduleAction allocates future actions (e.g. an event, a task, etc) towards a time slot / spatial allocation.</li></ul>
        /// </summary>
        public const string ScheduleAction = BaseUri + "ScheduleAction";

        
        /// <summary>
        /// The act of giving money in return for temporary use, but not ownership, of an object such as a vehicle or property. For example, an agent rents a property from a landlord in exchange for a periodic payment.
        /// </summary>
        public const string RentAction = BaseUri + "RentAction";

        
        /// <summary>
        /// The act of transferring/moving (abstract or concrete) animate or inanimate objects from one place to another.
        /// </summary>
        public const string TransferAction = BaseUri + "TransferAction";

        
        /// <summary>
        /// Enumerated categories of medical drug costs.
        /// </summary>
        public const string DrugCostCategory = BaseUri + "DrugCostCategory";

        
        /// <summary>
        /// The act of ingesting information/resources/food.
        /// </summary>
        public const string ConsumeAction = BaseUri + "ConsumeAction";

        
        /// <summary>
        /// The act of asking someone to attend an event. Reciprocal of RsvpAction.
        /// </summary>
        public const string InviteAction = BaseUri + "InviteAction";

        
        /// <summary>
        /// A collection of datasets.
        /// </summary>
        public const string DataCatalog = BaseUri + "DataCatalog";

        
        /// <summary>
        /// The act of producing a balanced opinion about the object for an audience. An agent reviews an object with participants resulting in a review.
        /// </summary>
        public const string ReviewAction = BaseUri + "ReviewAction";

        
        /// <summary>
        /// A shoe store.
        /// </summary>
        public const string ShoeStore = BaseUri + "ShoeStore";

        
        /// <summary>
        /// A dance group&#x2014;for example, the Alvin Ailey Dance Theater or Riverdance.
        /// </summary>
        public const string DanceGroup = BaseUri + "DanceGroup";

        
        /// <summary>
        /// The act of posing a question / favor to someone.<p>Related actions:</p><ul><li><a href="http://schema.org/ReplyAction">ReplyAction</a>: Appears generally as a response to AskAction.</li></ul>
        /// </summary>
        public const string AskAction = BaseUri + "AskAction";

        
        /// <summary>
        /// A bike store.
        /// </summary>
        public const string BikeStore = BaseUri + "BikeStore";

        
        /// <summary>
        /// The act of responding to a question/message asked/sent by the object. Related to <a href="AskAction">AskAction</a>.<p>Related actions:</p><ul><li><a href="http://schema.org/AskAction">AskAction</a>: Appears generally as an origin of a ReplyAction.</li></ul>
        /// </summary>
        public const string ReplyAction = BaseUri + "ReplyAction";

        
        /// <summary>
        /// Classes of agents or pathogens that transmit infectious diseases. Enumerated type.
        /// </summary>
        public const string InfectiousAgentClass = BaseUri + "InfectiousAgentClass";

        
        /// <summary>
        /// When a single product is associated with multiple offers (for example, the same pair of shoes is offered by different merchants), then AggregateOffer can be used.
        /// </summary>
        public const string AggregateOffer = BaseUri + "AggregateOffer";

        
        /// <summary>
        /// A risk factor is anything that increases a person's likelihood of developing or contracting a disease, medical condition, or complication.
        /// </summary>
        public const string MedicalRiskFactor = BaseUri + "MedicalRiskFactor";

        
        /// <summary>
        /// An intangible item that describes an alignment between a learning resource and a node in an educational framework.
        /// </summary>
        public const string AlignmentObject = BaseUri + "AlignmentObject";

        
        /// <summary>
        /// An emergency service, such as a fire station or ER.
        /// </summary>
        public const string EmergencyService = BaseUri + "EmergencyService";

        
        /// <summary>
        /// A structured value representing a monetary amount. Typically, only the subclasses of this type are used for markup.
        /// </summary>
        public const string PriceSpecification = BaseUri + "PriceSpecification";

        
        /// <summary>
        /// A garden store.
        /// </summary>
        public const string GardenStore = BaseUri + "GardenStore";

        
        /// <summary>
        /// Rigid connective tissue that comprises up the skeletal structure of the human body.
        /// </summary>
        public const string Bone = BaseUri + "Bone";

        
        /// <summary>
        /// A roofing contractor.
        /// </summary>
        public const string RoofingContractor = BaseUri + "RoofingContractor";

        
        /// <summary>
        /// A painting.
        /// </summary>
        public const string Painting = BaseUri + "Painting";

        
        /// <summary>
        /// The rating of the video.
        /// </summary>
        public const string Rating = BaseUri + "Rating";

        
        /// <summary>
        /// An enumeration of several kinds of Map.
        /// </summary>
        public const string MapCategoryType = BaseUri + "MapCategoryType";

        
        /// <summary>
        /// A bar or pub.
        /// </summary>
        public const string BarOrPub = BaseUri + "BarOrPub";

        
        /// <summary>
        /// Web page type: Image gallery page.
        /// </summary>
        public const string ImageGallery = BaseUri + "ImageGallery";

        
        /// <summary>
        /// An observational study is a type of medical study that attempts to infer the possible effect of a treatment through observation of a cohort of subjects over a period of time. In an observational study, the assignment of subjects into treatment groups versus control groups is outside the control of the investigator. This is in contrast with controlled studies, such as the randomized controlled trials represented by MedicalTrial, where each subject is randomly assigned to a treatment group or a control group before the start of the treatment.
        /// </summary>
        public const string MedicalObservationalStudy = BaseUri + "MedicalObservationalStudy";

        
        /// <summary>
        /// A casino.
        /// </summary>
        public const string Casino = BaseUri + "Casino";

        
        /// <summary>
        /// An agent inspects/determines/investigates/inquire or examine an object's accuracy/quality/condition or state.
        /// </summary>
        public const string CheckAction = BaseUri + "CheckAction";

        
        /// <summary>
        /// The act of participating in exertive activity for the purposes of improving health and fitness
        /// </summary>
        public const string ExerciseAction = BaseUri + "ExerciseAction";

        
        /// <summary>
        /// A specific strength in which a medical drug is available in a specific country.
        /// </summary>
        public const string DrugStrength = BaseUri + "DrugStrength";

        
        /// <summary>
        /// An image, video, or audio object embedded in a web page. Note that a creative work may have many media objects associated with it on the same web page. For example, a page about a single song (MusicRecording) may have a music video (VideoObject), and a high and low bandwidth audio stream (2 AudioObject's).
        /// </summary>
        public const string MediaObject = BaseUri + "MediaObject";

        
        /// <summary>
        /// Structured values are strings&#x2014;for example, addresses&#x2014;that have certain constraints on their structure.
        /// </summary>
        public const string StructuredValue = BaseUri + "StructuredValue";

        
        /// <summary>
        /// The act of inserting at the end if an ordered collection.
        /// </summary>
        public const string AppendAction = BaseUri + "AppendAction";

        
        /// <summary>
        ///  A point value or interval for product characteristics and other purposes.
        /// </summary>
        public const string QuantitativeValue = BaseUri + "QuantitativeValue";

        
        /// <summary>
        /// The footer section of the page.
        /// </summary>
        public const string WPFooter = BaseUri + "WPFooter";

        
        /// <summary>
        /// Properties that take Energy as values are of the form '&lt;Number&gt; &lt;Energy unit of measure&gt;'
        /// </summary>
        public const string Energy = BaseUri + "Energy";

        
        /// <summary>
        /// Any medical test, typically performed for diagnostic purposes.
        /// </summary>
        public const string MedicalTest = BaseUri + "MedicalTest";

        
        /// <summary>
        /// User interaction: +1.
        /// </summary>
        public const string UserPlusOnes = BaseUri + "UserPlusOnes";

        
        /// <summary>
        /// A shop that sells alcoholic drinks such as wine, beer, whisky and other spirits.
        /// </summary>
        public const string LiquorStore = BaseUri + "LiquorStore";

        
        /// <summary>
        /// A TV or radio series.
        /// </summary>
        public const string Series = BaseUri + "Series";

        
        /// <summary>
        /// A waterfall, like Niagara
        /// </summary>
        public const string Waterfall = BaseUri + "Waterfall";

        
        /// <summary>
        /// Any indication of the existence of a medical condition or disease.
        /// </summary>
        public const string MedicalSignOrSymptom = BaseUri + "MedicalSignOrSymptom";

        
        /// <summary>
        /// The act of editing a recipient by replacing an old object with a new object.
        /// </summary>
        public const string ReplaceAction = BaseUri + "ReplaceAction";

        
        /// <summary>
        /// Beach.
        /// </summary>
        public const string Beach = BaseUri + "Beach";

        
        /// <summary>
        /// Any condition of the human body that affects the normal functioning of a person, whether physically or mentally. Includes diseases, injuries, disabilities, disorders, syndromes, etc.
        /// </summary>
        public const string MedicalCondition = BaseUri + "MedicalCondition";

        
        /// <summary>
        /// A medical study is an umbrella type covering all kinds of research studies relating to human medicine or health, including observational studies and interventional trials and registries, randomized, controlled or not. When the specific type of study is known, use one of the extensions of this type, such as MedicalTrial or MedicalObservationalStudy. Also, note that this type should be used to mark up data that describes the study itself; to tag an article that publishes the results of a study, use MedicalScholarlyArticle. Note: use the code property of MedicalEntity to store study IDs, e.g. clinicaltrials.gov ID.
        /// </summary>
        public const string MedicalStudy = BaseUri + "MedicalStudy";

        
        /// <summary>
        /// The act of producing/preparing food.
        /// </summary>
        public const string CookAction = BaseUri + "CookAction";

        
        /// <summary>
        /// A photograph.
        /// </summary>
        public const string Photograph = BaseUri + "Photograph";

        
        /// <summary>
        /// Professional service: Attorney.
        /// </summary>
        public const string Attorney = BaseUri + "Attorney";

        
        /// <summary>
        /// Anatomical features that can be observed by sight (without dissection), including the form and proportions of the human body as well as surface landmarks that correspond to deeper subcutaneous structures. Superficial anatomy plays an important role in sports medicine, phlebotomy, and other medical specialties as underlying anatomical structures can be identified through surface palpation. For example, during back surgery, superficial anatomy can be used to palpate and count vertebrae to find the site of incision. Or in phlebotomy, superficial anatomy can be used to locate an underlying vein; for example, the median cubital vein can be located by palpating the borders of the cubital fossa (such as the epicondyles of the humerus) and then looking for the superficial signs of the vein, such as size, prominence, ability to refill after depression, and feel of surrounding tissue support. As another example, in a subluxation (dislocation) of the glenohumeral joint, the bony structure becomes pronounced with the deltoid muscle failing to cover the glenohumeral joint allowing the edges of the scapula to be superficially visible. Here, the superficial anatomy is the visible edges of the scapula, implying the underlying dislocation of the joint (the related anatomical structure).
        /// </summary>
        public const string SuperficialAnatomy = BaseUri + "SuperficialAnatomy";

        
        /// <summary>
        /// The act of committing to/adopting an object.<p>Related actions:</p><ul><li><a href="http://schema.org/RejectAction">RejectAction</a>: The antagonym of AcceptAction.</li></ul>
        /// </summary>
        public const string AcceptAction = BaseUri + "AcceptAction";

        
        /// <summary>
        /// A school.
        /// </summary>
        public const string School = BaseUri + "School";

        
        /// <summary>
        /// A guideline contraindication that designates a process as harmful and where quality of the data supporting the contraindication is sound.
        /// </summary>
        public const string MedicalGuidelineContraindication = BaseUri + "MedicalGuidelineContraindication";

        
        /// <summary>
        /// A trip on a commercial bus line.
        /// </summary>
        public const string BusTrip = BaseUri + "BusTrip";

        
        /// <summary>
        /// Season dedicated to radio broadcast and associated online delivery.
        /// </summary>
        public const string RadioSeason = BaseUri + "RadioSeason";

        
        /// <summary>
        /// An agent tracks an object for updates.<p>Related actions:</p><ul><li><a href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction, TrackAction refers to the interest on the location of innanimates objects.</li><li><a href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike SubscribeAction, TrackAction refers to  the interest on the location of innanimate objects.</li></ul>
        /// </summary>
        public const string TrackAction = BaseUri + "TrackAction";

        
        /// <summary>
        /// The status of a medical study. Enumerated type.
        /// </summary>
        public const string MedicalStudyStatus = BaseUri + "MedicalStudyStatus";

        
        /// <summary>
        /// The act of allocating an action/event/task to some destination (someone or something).
        /// </summary>
        public const string AssignAction = BaseUri + "AssignAction";

        
        /// <summary>
        /// A citation or reference to another creative work, such as another publication, web page, scholarly article, etc.
        /// </summary>
        public const string citation = BaseUri + "citation";

        
        /// <summary>
        /// The default value of the input.  For properties that expect a literal, the default is a literal value, for properties that expect an object, it's an ID reference to one of the current values.
        /// </summary>
        public const string defaultValue = BaseUri + "defaultValue";

        
        /// <summary>
        /// The type/class of the seat.
        /// </summary>
        public const string seatingType = BaseUri + "seatingType";

        
        /// <summary>
        /// Textual description of the unit type (including suite vs. room, size of bed, etc.).
        /// </summary>
        public const string lodgingUnitType = BaseUri + "lodgingUnitType";

        
        /// <summary>
        /// The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is valid.
        /// </summary>
        public const string eligibleRegion = BaseUri + "eligibleRegion";

        
        /// <summary>
        /// The depth of the product.
        /// </summary>
        public const string depth = BaseUri + "depth";

        
        /// <summary>
        /// A sub property of object. The options subject to this action.
        /// </summary>
        public const string option = BaseUri + "option";

        
        /// <summary>
        /// The width of the item.
        /// </summary>
        public const string width = BaseUri + "width";

        
        /// <summary>
        /// The model of the product. Use with the URL of a ProductModel or a textual representation of the model identifier. The URL of the ProductModel can be from an external source. It is recommended to additionally provide strong product identifiers via the gtin8/gtin13/gtin14 and mpn properties.
        /// </summary>
        public const string model = BaseUri + "model";

        
        /// <summary>
        /// The height of the item.
        /// </summary>
        public const string height = BaseUri + "height";

        
        /// <summary>
        /// The kind of aircraft (e.g., "Boeing 747").
        /// </summary>
        public const string aircraft = BaseUri + "aircraft";

        
        /// <summary>
        /// The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. "iPhone") or a general category of products or services (e.g. "smartphones").
        /// </summary>
        public const string productSupported = BaseUri + "productSupported";

        
        /// <summary>
        /// A sub property of instrument. The query used on this action.
        /// </summary>
        public const string query = BaseUri + "query";

        
        /// <summary>
        /// A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.
        /// </summary>
        public const string category = BaseUri + "category";

        
        /// <summary>
        /// An alias for the item.
        /// </summary>
        public const string alternateName = BaseUri + "alternateName";

        
        /// <summary>
        /// Type(s) of exercise or activity, such as strength training, flexibility training, aerobics, cardiac rehabilitation, etc.
        /// </summary>
        public const string exerciseType = BaseUri + "exerciseType";

        
        /// <summary>
        /// Nutritional information specific to the dietary plan. May include dietary recommendations on what foods to avoid, what foods to consume, and specific alterations/deviations from the USDA or other regulatory body's approved dietary guidelines.
        /// </summary>
        public const string dietFeatures = BaseUri + "dietFeatures";

        
        /// <summary>
        /// Quantitative measure of the physiologic output of the exercise; also referred to as energy expenditure.
        /// </summary>
        public const string workload = BaseUri + "workload";

        
        /// <summary>
        /// The number of upvotes this question has received from the community.
        /// </summary>
        public const string upvoteCount = BaseUri + "upvoteCount";

        
        /// <summary>
        /// Indicates whether this content is family friendly.
        /// </summary>
        public const string isFamilyFriendly = BaseUri + "isFamilyFriendly";

        
        /// <summary>
        /// Identifies the issue of publication; for example, "iii" or "2".
        /// </summary>
        public const string issueNumber = BaseUri + "issueNumber";

        
        /// <summary>
        /// The street address. For example, 1600 Amphitheatre Pkwy.
        /// </summary>
        public const string streetAddress = BaseUri + "streetAddress";

        
        /// <summary>
        /// The number of grams of fat.
        /// </summary>
        public const string fatContent = BaseUri + "fatContent";

        
        /// <summary>
        /// The number of grams of trans fat.
        /// </summary>
        public const string transFatContent = BaseUri + "transFatContent";

        
        /// <summary>
        /// The release date of a product or product model. This can be used to distinguish the exact variant of a product.
        /// </summary>
        public const string releaseDate = BaseUri + "releaseDate";

        
        /// <summary>
        /// Specifies browser requirements in human-readable text. For example,"requires HTML5 support".
        /// </summary>
        public const string browserRequirements = BaseUri + "browserRequirements";

        
        /// <summary>
        /// The category of the recipe&#x2014;for example, appetizer, entree, etc.
        /// </summary>
        public const string recipeCategory = BaseUri + "recipeCategory";

        
        /// <summary>
        /// The predominant mode of learning supported by the learning resource. Acceptable values are 'active', 'expositive', or 'mixed'.
        /// </summary>
        public const string interactivityType = BaseUri + "interactivityType";

        
        /// <summary>
        /// Indicates whether this image is representative of the content of the page.
        /// </summary>
        public const string representativeOfPage = BaseUri + "representativeOfPage";

        
        /// <summary>
        /// The name given to how bone physically connects to each other.
        /// </summary>
        public const string structuralClass = BaseUri + "structuralClass";

        
        /// <summary>
        /// Full (compile ready) solution, code snippet, inline code, scripts, template.
        /// </summary>
        public const string sampleType = BaseUri + "sampleType";

        
        /// <summary>
        /// After this date, the item will no longer be available for pickup.
        /// </summary>
        public const string availableThrough = BaseUri + "availableThrough";

        
        /// <summary>
        /// Type of employment (e.g. full-time, part-time, contract, temporary, seasonal, internship).
        /// </summary>
        public const string employmentType = BaseUri + "employmentType";

        
        /// <summary>
        /// The actual code.
        /// </summary>
        public const string codeValue = BaseUri + "codeValue";

        
        /// <summary>
        /// When a taxi will pickup a passenger or a rental car can be picked up.
        /// </summary>
        public const string pickupTime = BaseUri + "pickupTime";

        
        /// <summary>
        /// The specific biochemical interaction through which this drug or supplement produces its pharmacological effect.
        /// </summary>
        public const string mechanismOfAction = BaseUri + "mechanismOfAction";

        
        /// <summary>
        /// A description of the procedure involved in setting up, using, and/or installing the device.
        /// </summary>
        public const string procedure = BaseUri + "procedure";

        
        /// <summary>
        /// The description of a node in an established educational framework.
        /// </summary>
        public const string targetDescription = BaseUri + "targetDescription";

        
        /// <summary>
        /// The date and time of obtaining the product.
        /// </summary>
        public const string ownedFrom = BaseUri + "ownedFrom";

        
        /// <summary>
        /// The number of answers this question has received.
        /// </summary>
        public const string answerCount = BaseUri + "answerCount";

        
        /// <summary>
        /// Countries for which the application is not supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.
        /// </summary>
        public const string countriesNotSupported = BaseUri + "countriesNotSupported";

        
        /// <summary>
        /// The currency (in 3-letter ISO 4217 format) of the discount.
        /// </summary>
        public const string discountCurrency = BaseUri + "discountCurrency";

        
        /// <summary>
        /// A more specific type of the condition, where applicable, for example 'Type 1 Diabetes', 'Type 2 Diabetes', or 'Gestational Diabetes' for Diabetes.
        /// </summary>
        public const string subtype = BaseUri + "subtype";

        
        /// <summary>
        /// Indicates if use of the media require a subscription  (either paid or free). Allowed values are <code>true</code> or <code>false</code> (note that an earlier version had 'yes', 'no').
        /// </summary>
        public const string requiresSubscription = BaseUri + "requiresSubscription";

        
        /// <summary>
        /// Date of death.
        /// </summary>
        public const string deathDate = BaseUri + "deathDate";

        
        /// <summary>
        /// The name of the train (e.g. The Orient Express).
        /// </summary>
        public const string trainName = BaseUri + "trainName";

        
        /// <summary>
        /// Date on which this guideline's recommendation was made.
        /// </summary>
        public const string guidelineDate = BaseUri + "guidelineDate";

        
        /// <summary>
        /// The units of an active ingredient's strength, e.g. mg.
        /// </summary>
        public const string strengthUnit = BaseUri + "strengthUnit";

        
        /// <summary>
        /// The value of an active ingredient's strength, e.g. 325.
        /// </summary>
        public const string strengthValue = BaseUri + "strengthValue";

        
        /// <summary>
        /// Type of software application, e.g. "Game, Multimedia".
        /// </summary>
        public const string applicationCategory = BaseUri + "applicationCategory";

        
        /// <summary>
        /// Identifier of the flight's departure terminal.
        /// </summary>
        public const string departureTerminal = BaseUri + "departureTerminal";

        
        /// <summary>
        /// Email address.
        /// </summary>
        public const string email = BaseUri + "email";

        
        /// <summary>
        /// A flag to signal that the publication is accessible for free.
        /// </summary>
        public const string free = BaseUri + "free";

        
        /// <summary>
        /// A number that confirms the given order.
        /// </summary>
        public const string confirmationNumber = BaseUri + "confirmationNumber";

        
        /// <summary>
        /// The expected progression of the condition if it is not treated and allowed to progress naturally.
        /// </summary>
        public const string naturalProgression = BaseUri + "naturalProgression";

        
        /// <summary>
        /// Content features of the resource, such as accessible media, alternatives and supported enhancements for accessibility (<a href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas wiki lists possible values</a>).
        /// </summary>
        public const string accessibilityFeature = BaseUri + "accessibilityFeature";

        
        /// <summary>
        /// The number of pages in the book.
        /// </summary>
        public const string numberOfPages = BaseUri + "numberOfPages";

        
        /// <summary>
        /// The name of the bus (e.g. Bolt Express).
        /// </summary>
        public const string busName = BaseUri + "busName";

        
        /// <summary>
        /// The date and time the reservation was modified.
        /// </summary>
        public const string modifiedTime = BaseUri + "modifiedTime";

        
        /// <summary>
        /// Publication date for the job posting.
        /// </summary>
        public const string datePosted = BaseUri + "datePosted";

        
        /// <summary>
        /// The color of the product.
        /// </summary>
        public const string color = BaseUri + "color";

        
        /// <summary>
        /// Estimated processing time for the service using this channel.
        /// </summary>
        public const string processingTime = BaseUri + "processingTime";

        
        /// <summary>
        /// The value of the dose, e.g. 500.
        /// </summary>
        public const string doseValue = BaseUri + "doseValue";

        
        /// <summary>
        /// The date and time of giving up ownership on the product.
        /// </summary>
        public const string ownedThrough = BaseUri + "ownedThrough";

        
        /// <summary>
        /// The language of the content. please use one of the language codes from the <a href='http://tools.ietf.org/html/bcp47'>IETF BCP 47 standard.</a>
        /// </summary>
        public const string inLanguage = BaseUri + "inLanguage";

        
        /// <summary>
        /// The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.
        /// </summary>
        public const string sku = BaseUri + "sku";

        
        /// <summary>
        /// The opening hours for a business. Opening hours can be specified as a weekly time range, starting with days, then times per day. Multiple days can be listed with commas ',' separating each day. Day or time ranges are specified using a hyphen '-'.<br />- Days are specified using the following two-letter combinations: <code>Mo</code>, <code>Tu</code>, <code>We</code>, <code>Th</code>, <code>Fr</code>, <code>Sa</code>, <code>Su</code>.<br />- Times are specified using 24:00 time. For example, 3pm is specified as <code>15:00</code>. <br />- Here is an example: <code>&lt;time itemprop=&quot;openingHours&quot; datetime=&quot;Tu,Th 16:00-20:00&quot;&gt;Tuesdays and Thursdays 4-8pm&lt;/time&gt;</code>. <br />- If a business is open 7 days a week, then it can be specified as <code>&lt;time itemprop=&quot;openingHours&quot; datetime=&quot;Mo-Su&quot;&gt;Monday through Sunday, all day&lt;/time&gt;</code>.
        /// </summary>
        public const string openingHours = BaseUri + "openingHours";

        
        /// <summary>
        /// URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.
        /// </summary>
        public const string sameAs = BaseUri + "sameAs";

        
        /// <summary>
        /// The elevation of a location.
        /// </summary>
        public const string elevation = BaseUri + "elevation";

        
        /// <summary>
        /// The identifier of the transaction.
        /// </summary>
        public const string orderNumber = BaseUri + "orderNumber";

        
        /// <summary>
        /// The earliest date the package may arrive.
        /// </summary>
        public const string expectedArrivalFrom = BaseUri + "expectedArrivalFrom";

        
        /// <summary>
        /// A thumbnail image relevant to the Thing.
        /// </summary>
        public const string thumbnailUrl = BaseUri + "thumbnailUrl";

        
        /// <summary>
        /// An additional name for a Person, can be used for a middle name.
        /// </summary>
        public const string additionalName = BaseUri + "additionalName";

        
        /// <summary>
        /// Date the content expires and is no longer useful or available. Useful for videos.
        /// </summary>
        public const string expires = BaseUri + "expires";

        
        /// <summary>
        /// Identifier of the flight's departure gate.
        /// </summary>
        public const string departureGate = BaseUri + "departureGate";

        
        /// <summary>
        /// The location where the NewsArticle was produced.
        /// </summary>
        public const string dateline = BaseUri + "dateline";

        
        /// <summary>
        /// Maximal age recommended for viewing content.
        /// </summary>
        public const string suggestedMaxAge = BaseUri + "suggestedMaxAge";

        
        /// <summary>
        /// Changes in the normal mechanical, physical, and biochemical functions that are associated with this activity or condition.
        /// </summary>
        public const string pathophysiology = BaseUri + "pathophysiology";

        
        /// <summary>
        /// The type of service being offered, e.g. veterans' benefits, emergency relief, etc.
        /// </summary>
        public const string serviceType = BaseUri + "serviceType";

        
        /// <summary>
        /// Minimal age of the child
        /// </summary>
        public const string childMinAge = BaseUri + "childMinAge";

        
        /// <summary>
        /// The opening hour of the place or service on the given day(s) of the week.
        /// </summary>
        public const string opens = BaseUri + "opens";

        
        /// <summary>
        /// The number of adults staying in the unit.
        /// </summary>
        public const string numAdults = BaseUri + "numAdults";

        
        /// <summary>
        /// The cost per unit of the drug.
        /// </summary>
        public const string costPerUnit = BaseUri + "costPerUnit";

        
        /// <summary>
        /// The number of tracks in this album or playlist.
        /// </summary>
        public const string numTracks = BaseUri + "numTracks";

        
        /// <summary>
        /// The end of the validity of offer, price specification, or opening hours data.
        /// </summary>
        public const string validThrough = BaseUri + "validThrough";

        
        /// <summary>
        /// Medical expert advice related to the plan.
        /// </summary>
        public const string expertConsiderations = BaseUri + "expertConsiderations";

        
        /// <summary>
        /// The count of total number of reviews.
        /// </summary>
        public const string reviewCount = BaseUri + "reviewCount";

        
        /// <summary>
        /// Identifier of the flight's arrival gate.
        /// </summary>
        public const string arrivalGate = BaseUri + "arrivalGate";

        
        /// <summary>
        /// The highest price if the price is a range.
        /// </summary>
        public const string maxPrice = BaseUri + "maxPrice";

        
        /// <summary>
        /// Minimum memory requirements.
        /// </summary>
        public const string memoryRequirements = BaseUri + "memoryRequirements";

        
        /// <summary>
        /// Specifies whether the applicable value-added tax (VAT) is included in the price specification or not.
        /// </summary>
        public const string valueAddedTaxIncluded = BaseUri + "valueAddedTaxIncluded";

        
        /// <summary>
        /// The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes. <br /> <br />       Usage guidelines: <br /> <ul> <li>Use the <a href="/priceCurrency">priceCurrency</a> property (with <a href="http://en.wikipedia.org/wiki/ISO_4217#Active_codes">ISO 4217 codes</a> e.g. "USD") instead of       including <a href="http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign">ambiguous symbols</a> such as '$' in the value. </li> <li>       Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator. </li> <li>       Note that both <a href="http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute">RDFa</a> and Microdata syntax allow the use of a "content=" attribute for publishing simple machine-readable values       alongside more human-friendly formatting. </li> <li>       Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols. </li> </ul>        
        /// </summary>
        public const string price = BaseUri + "price";

        
        /// <summary>
        /// How the procedure is performed.
        /// </summary>
        public const string howPerformed = BaseUri + "howPerformed";

        
        /// <summary>
        /// A secondary title of the CreativeWork.
        /// </summary>
        public const string alternativeHeadline = BaseUri + "alternativeHeadline";

        
        /// <summary>
        /// The number of seasons in this series.
        /// </summary>
        public const string numberOfSeasons = BaseUri + "numberOfSeasons";

        
        /// <summary>
        /// A short text or acronym indicating multiple price specifications for the same offer, e.g. SRP for the suggested retail price or INVOICE for the invoice price, mostly used in the car industry.
        /// </summary>
        public const string priceType = BaseUri + "priceType";

        
        /// <summary>
        /// Specific physiologic risks associated to the plan.
        /// </summary>
        public const string risks = BaseUri + "risks";

        
        /// <summary>
        /// The official name of the organization, e.g. the registered company name.
        /// </summary>
        public const string legalName = BaseUri + "legalName";

        
        /// <summary>
        /// The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
        /// </summary>
        public const string isicV4 = BaseUri + "isicV4";

        
        /// <summary>
        /// How often one should engage in the activity.
        /// </summary>
        public const string activityFrequency = BaseUri + "activityFrequency";

        
        /// <summary>
        /// Type of ordering (e.g. Ascending, Descending, Unordered).
        /// </summary>
        public const string itemListOrder = BaseUri + "itemListOrder";

        
        /// <summary>
        /// Code used to redeem a discount.
        /// </summary>
        public const string discountCode = BaseUri + "discountCode";

        
        /// <summary>
        /// Genre of the creative work
        /// </summary>
        public const string genre = BaseUri + "genre";

        
        /// <summary>
        /// Typical or recommended followup care after the procedure is performed.
        /// </summary>
        public const string followup = BaseUri + "followup";

        
        /// <summary>
        /// The position of the creative work within a series or other ordered collection of works.
        /// </summary>
        public const string position = BaseUri + "position";

        
        /// <summary>
        /// Prerequisites needed to fulfill steps in article.
        /// </summary>
        public const string dependencies = BaseUri + "dependencies";

        
        /// <summary>
        /// A link to the page containing the comments of the CreativeWork.
        /// </summary>
        public const string discussionUrl = BaseUri + "discussionUrl";

        
        /// <summary>
        /// The distance of the flight.
        /// </summary>
        public const string flightDistance = BaseUri + "flightDistance";

        
        /// <summary>
        /// Used in conjunction with eventStatus for rescheduled or cancelled events. This property contains the previously scheduled start date. For rescheduled events, the startDate property should be used for the newly scheduled start date. In the (rare) case of an event that has been postponed and rescheduled multiple times, this field may be repeated.
        /// </summary>
        public const string previousStartDate = BaseUri + "previousStartDate";

        
        /// <summary>
        /// A dosage form in which this drug/supplement is available, e.g. 'tablet', 'suspension', 'injection'.
        /// </summary>
        public const string dosageForm = BaseUri + "dosageForm";

        
        /// <summary>
        /// Description of the meals that will be provided or available for purchase.
        /// </summary>
        public const string mealService = BaseUri + "mealService";

        
        /// <summary>
        /// Any characteristics of the population used in the study, e.g. 'males under 65'.
        /// </summary>
        public const string population = BaseUri + "population";

        
        /// <summary>
        /// Indicates whether a FoodEstablishment accepts reservations. Values can be Boolean, an URL at which reservations can be made or (for backwards compatibility) the strings <code>Yes</code> or <code>No</code>.
        /// </summary>
        public const string acceptsReservations = BaseUri + "acceptsReservations";

        
        /// <summary>
        /// The length of time it takes to prepare the recipe, in <a href='http://en.wikipedia.org/wiki/ISO_8601'>ISO 8601 duration format</a>.
        /// </summary>
        public const string prepTime = BaseUri + "prepTime";

        
        /// <summary>
        /// The number of grams of fiber.
        /// </summary>
        public const string fiberContent = BaseUri + "fiberContent";

        
        /// <summary>
        /// The rating for the content.
        /// </summary>
        public const string ratingValue = BaseUri + "ratingValue";

        
        /// <summary>
        /// If this NewsArticle appears in print, this field indicates the name of the page on which the article is found. Please note that this field is intended for the exact page name (e.g. A5, B18).
        /// </summary>
        public const string printPage = BaseUri + "printPage";

        
        /// <summary>
        /// Specific qualifications required for this role.
        /// </summary>
        public const string qualifications = BaseUri + "qualifications";

        
        /// <summary>
        /// Headline of the article
        /// </summary>
        public const string headline = BaseUri + "headline";

        
        /// <summary>
        /// The number of children staying in the unit.
        /// </summary>
        public const string numChildren = BaseUri + "numChildren";

        
        /// <summary>
        /// The edition of the print product in which the NewsArticle appears.
        /// </summary>
        public const string printEdition = BaseUri + "printEdition";

        
        /// <summary>
        /// A sub property of location. The final location of the object or the agent after the action.
        /// </summary>
        public const string toLocation = BaseUri + "toLocation";

        
        /// <summary>
        /// mp3, mpeg4, etc.
        /// </summary>
        public const string encodingFormat = BaseUri + "encodingFormat";

        
        /// <summary>
        /// A circle is the circular region of a specified radius centered at a specified latitude and longitude. A circle is expressed as a pair followed by a radius in meters.
        /// </summary>
        public const string circle = BaseUri + "circle";

        
        /// <summary>
        /// Features or modules provided by this application (and possibly required by other applications).
        /// </summary>
        public const string featureList = BaseUri + "featureList";

        
        /// <summary>
        /// Range of acceptable values for a typical patient, when applicable.
        /// </summary>
        public const string normalRange = BaseUri + "normalRange";

        
        /// <summary>
        /// The caption for this object.
        /// </summary>
        public const string caption = BaseUri + "caption";

        
        /// <summary>
        /// Maximal age of the child
        /// </summary>
        public const string childMaxAge = BaseUri + "childMaxAge";

        
        /// <summary>
        /// The number of calories
        /// </summary>
        public const string calories = BaseUri + "calories";

        
        /// <summary>
        /// The unit in which the drug is measured, e.g. '5 mg tablet'.
        /// </summary>
        public const string drugUnit = BaseUri + "drugUnit";

        
        /// <summary>
        /// The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to *December*.  Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions. 
        /// </summary>
        public const string endTime = BaseUri + "endTime";

        
        /// <summary>
        /// Type of app development: phone, Metro style, desktop, XBox, etc.
        /// </summary>
        public const string targetPlatform = BaseUri + "targetPlatform";

        
        /// <summary>
        /// Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime).
        /// </summary>
        public const string requirements = BaseUri + "requirements";

        
        /// <summary>
        /// The exchange traded instrument associated with a Corporation object. The tickerSymbol is expressed as an exchange and an instrument name separated by a space character. For the exchange component of the tickerSymbol attribute, we reccommend using the controlled vocaulary of Market Identifier Codes (MIC) specified in ISO15022.
        /// </summary>
        public const string tickerSymbol = BaseUri + "tickerSymbol";

        
        /// <summary>
        /// Date order was placed.
        /// </summary>
        public const string orderDate = BaseUri + "orderDate";

        
        /// <summary>
        /// The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.
        /// </summary>
        public const string mpn = BaseUri + "mpn";

        
        /// <summary>
        /// Any precaution, guidance, contraindication, etc. related to this drug's use during pregnancy.
        /// </summary>
        public const string pregnancyWarning = BaseUri + "pregnancyWarning";

        
        /// <summary>
        /// The number of milligrams of cholesterol.
        /// </summary>
        public const string cholesterolContent = BaseUri + "cholesterolContent";

        
        /// <summary>
        /// Quantitative measure gauging the degree of force involved in the exercise, for example, heartbeats per minute. May include the velocity of the movement.
        /// </summary>
        public const string intensity = BaseUri + "intensity";

        
        /// <summary>
        /// A line is a point-to-point path consisting of two or more points. A line is expressed as a series of two or more point objects separated by space.
        /// </summary>
        public const string line = BaseUri + "line";

        
        /// <summary>
        /// How often the dose is taken, e.g. 'daily'.
        /// </summary>
        public const string frequency = BaseUri + "frequency";

        
        /// <summary>
        /// The estimated time the flight will take.
        /// </summary>
        public const string estimatedFlightDuration = BaseUri + "estimatedFlightDuration";

        
        /// <summary>
        /// The number of words in the text of the Article.
        /// </summary>
        public const string wordCount = BaseUri + "wordCount";

        
        /// <summary>
        /// The date that this organization was dissolved.
        /// </summary>
        public const string dissolutionDate = BaseUri + "dissolutionDate";

        
        /// <summary>
        /// Any precaution, guidance, contraindication, etc. related to consumption of specific foods while taking this drug.
        /// </summary>
        public const string foodWarning = BaseUri + "foodWarning";

        
        /// <summary>
        /// The base salary of the job.
        /// </summary>
        public const string baseSalary = BaseUri + "baseSalary";

        
        /// <summary>
        /// A description of the workup, testing, and other preparations required before implanting this device.
        /// </summary>
        public const string preOp = BaseUri + "preOp";

        
        /// <summary>
        /// Proficiency needed for this content; expected values: 'Beginner', 'Expert'.
        /// </summary>
        public const string proficiencyLevel = BaseUri + "proficiencyLevel";

        
        /// <summary>
        /// Device required to run the application. Used in cases where a specific make/model is required to run the application.
        /// </summary>
        public const string device = BaseUri + "device";

        
        /// <summary>
        /// Link to prescribing information for the drug.
        /// </summary>
        public const string prescribingInfo = BaseUri + "prescribingInfo";

        
        /// <summary>
        /// The purpose of a work in the context of education; for example, 'assignment', 'group work'.
        /// </summary>
        public const string educationalUse = BaseUri + "educationalUse";

        
        /// <summary>
        /// Description of bonus and commission compensation aspects of the job.
        /// </summary>
        public const string incentives = BaseUri + "incentives";

        
        /// <summary>
        /// Category or categories describing the job. Use BLS O*NET-SOC taxonomy: http://www.onetcenter.org/taxonomy.html. Ideally includes textual label and formal code, with the property repeated for each applicable value.
        /// </summary>
        public const string occupationalCategory = BaseUri + "occupationalCategory";

        
        /// <summary>
        /// A set of links that can help a user understand and navigate a website hierarchy.
        /// </summary>
        public const string breadcrumb = BaseUri + "breadcrumb";

        
        /// <summary>
        /// The name of the application suite to which the application belongs (e.g. Excel belongs to Office)
        /// </summary>
        public const string applicationSuite = BaseUri + "applicationSuite";

        
        /// <summary>
        /// The total price for the reservation or ticket, including applicable taxes, shipping, etc.
        /// </summary>
        public const string totalPrice = BaseUri + "totalPrice";

        
        /// <summary>
        /// The row location of the reserved seat (e.g., B).
        /// </summary>
        public const string seatRow = BaseUri + "seatRow";

        
        /// <summary>
        /// The actual body of the review.
        /// </summary>
        public const string reviewBody = BaseUri + "reviewBody";

        
        /// <summary>
        /// The latest someone may check out of a lodging establishment.
        /// </summary>
        public const string checkoutTime = BaseUri + "checkoutTime";

        
        /// <summary>
        /// The cuisine of the restaurant.
        /// </summary>
        public const string servesCuisine = BaseUri + "servesCuisine";

        
        /// <summary>
        /// The end of the availability of the product or service included in the offer.
        /// </summary>
        public const string availabilityEnds = BaseUri + "availabilityEnds";

        
        /// <summary>
        /// Number of times one should repeat the activity.
        /// </summary>
        public const string repetitions = BaseUri + "repetitions";

        
        /// <summary>
        /// Whether multiple values are allowed for the property.  Default is false.
        /// </summary>
        public const string multipleValues = BaseUri + "multipleValues";

        
        /// <summary>
        /// An active ingredient, typically chemical compounds and/or biologic substances.
        /// </summary>
        public const string activeIngredient = BaseUri + "activeIngredient";

        
        /// <summary>
        /// The biomechanical properties of the bone.
        /// </summary>
        public const string biomechnicalClass = BaseUri + "biomechnicalClass";

        
        /// <summary>
        /// An url template (RFC6570) that will be used to construct the target of the execution of the action.
        /// </summary>
        public const string urlTemplate = BaseUri + "urlTemplate";

        
        /// <summary>
        /// The date on which the CreativeWork was most recently modified.
        /// </summary>
        public const string dateModified = BaseUri + "dateModified";

        
        /// <summary>
        /// A logo associated with an organization.
        /// </summary>
        public const string logo = BaseUri + "logo";

        
        /// <summary>
        /// When the item is available for pickup from the store, locker, etc.
        /// </summary>
        public const string availableFrom = BaseUri + "availableFrom";

        
        /// <summary>
        /// MIME format of the binary (e.g. application/zip).
        /// </summary>
        public const string fileFormat = BaseUri + "fileFormat";

        
        /// <summary>
        /// A unique identifier for the reservation.
        /// </summary>
        public const string reservationId = BaseUri + "reservationId";

        
        /// <summary>
        /// Actual bytes of the media object, for example the image file or video file. (previous spelling: contentURL)
        /// </summary>
        public const string contentUrl = BaseUri + "contentUrl";

        
        /// <summary>
        /// The frame size of the video.
        /// </summary>
        public const string videoFrameSize = BaseUri + "videoFrameSize";

        
        /// <summary>
        /// The type of tissue sample required for the test.
        /// </summary>
        public const string tissueSample = BaseUri + "tissueSample";

        
        /// <summary>
        /// The cuisine of the recipe (for example, French or Ethiopian).
        /// </summary>
        public const string recipeCuisine = BaseUri + "recipeCuisine";

        
        /// <summary>
        /// Date when this media object was uploaded to this site.
        /// </summary>
        public const string uploadDate = BaseUri + "uploadDate";

        
        /// <summary>
        /// File size in (mega/kilo) bytes.
        /// </summary>
        public const string contentSize = BaseUri + "contentSize";

        
        /// <summary>
        /// The framework to which the resource being described is aligned.
        /// </summary>
        public const string educationalFramework = BaseUri + "educationalFramework";

        
        /// <summary>
        /// The name of a node in an established educational framework.
        /// </summary>
        public const string targetName = BaseUri + "targetName";

        
        /// <summary>
        /// The airline-specific indicator of boarding order / preference.
        /// </summary>
        public const string boardingGroup = BaseUri + "boardingGroup";

        
        /// <summary>
        /// The Dun & Bradstreet DUNS number for identifying an organization or business person.
        /// </summary>
        public const string duns = BaseUri + "duns";

        
        /// <summary>
        /// Library file name e.g., mscorlib.dll, system.web.dll
        /// </summary>
        public const string assembly = BaseUri + "assembly";

        
        /// <summary>
        /// The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.
        /// </summary>
        public const string taxID = BaseUri + "taxID";

        
        /// <summary>
        /// The target group associated with a given audience (e.g. veterans, car owners, musicians, etc.)           domain: Audience           Range: Text         
        /// </summary>
        public const string audienceType = BaseUri + "audienceType";

        
        /// <summary>
        /// The expected departure time.
        /// </summary>
        public const string departureTime = BaseUri + "departureTime";

        
        /// <summary>
        /// Strength of the guideline's recommendation (e.g. 'class I').
        /// </summary>
        public const string recommendationStrength = BaseUri + "recommendationStrength";

        
        /// <summary>
        /// The likely outcome in either the short term or long term of the medical condition.
        /// </summary>
        public const string expectedPrognosis = BaseUri + "expectedPrognosis";

        
        /// <summary>
        /// Any precaution, guidance, contraindication, etc. related to this drug's use by breastfeeding mothers.
        /// </summary>
        public const string breastfeedingWarning = BaseUri + "breastfeedingWarning";

        
        /// <summary>
        /// When a rental car can be dropped off.
        /// </summary>
        public const string dropoffTime = BaseUri + "dropoffTime";

        
        /// <summary>
        /// URL at which the app may be installed, if different from the URL of the item.
        /// </summary>
        public const string installUrl = BaseUri + "installUrl";

        
        /// <summary>
        /// The type of the medical article, taken from the US NLM MeSH <a href=http://www.nlm.nih.gov/mesh/pubtypes.html>publication type catalog.
        /// </summary>
        public const string publicationType = BaseUri + "publicationType";

        
        /// <summary>
        /// The time it takes to actually cook the dish, in <a href='http://en.wikipedia.org/wiki/ISO_8601'>ISO 8601 duration format</a>.
        /// </summary>
        public const string cookTime = BaseUri + "cookTime";

        
        /// <summary>
        /// The steps to make the dish.
        /// </summary>
        public const string recipeInstructions = BaseUri + "recipeInstructions";

        
        /// <summary>
        /// A single list item.
        /// </summary>
        public const string itemListElement = BaseUri + "itemListElement";

        
        /// <summary>
        /// Gender of the person.
        /// </summary>
        public const string gender = BaseUri + "gender";

        
        /// <summary>
        /// The gender of the person or audience.
        /// </summary>
        public const string suggestedGender = BaseUri + "suggestedGender";

        
        /// <summary>
        /// The earliest someone may check into a lodging establishment.
        /// </summary>
        public const string checkinTime = BaseUri + "checkinTime";

        
        /// <summary>
        /// Player type required&#x2014;for example, Flash or Silverlight.
        /// </summary>
        public const string playerType = BaseUri + "playerType";

        
        /// <summary>
        /// A sub property of object. A question.
        /// </summary>
        public const string question = BaseUri + "question";

        
        /// <summary>
        /// The upper value of some characteristic or property.
        /// </summary>
        public const string maxValue = BaseUri + "maxValue";

        
        /// <summary>
        /// A URL pointing to a player for a specific video. In general, this is the information in the <code>src</code> element of an <code>embed</code> tag and should not be the same as the content of the <code>loc</code> tag. (previous spelling: embedURL)
        /// </summary>
        public const string embedUrl = BaseUri + "embedUrl";

        
        /// <summary>
        /// A position played, performed or filled by a person or organization, as part of an organization. For example, an athlete in a SportsTeam might play in the position named 'Quarterback'.
        /// </summary>
        public const string namedPosition = BaseUri + "namedPosition";

        
        /// <summary>
        /// A license document that applies to this content, typically indicated by URL.
        /// </summary>
        public const string license = BaseUri + "license";

        
        /// <summary>
        /// Date of birth.
        /// </summary>
        public const string birthDate = BaseUri + "birthDate";

        
        /// <summary>
        /// Official rating of a piece of content&#x2014;for example,'MPAA PG-13'.
        /// </summary>
        public const string contentRating = BaseUri + "contentRating";

        
        /// <summary>
        /// The bitrate of the media object.
        /// </summary>
        public const string bitrate = BaseUri + "bitrate";

        
        /// <summary>
        /// Specifies the minimum allowed range for number of characters in a literal value.
        /// </summary>
        public const string valueMinLength = BaseUri + "valueMinLength";

        
        /// <summary>
        /// The program providing the membership.
        /// </summary>
        public const string programName = BaseUri + "programName";

        
        /// <summary>
        /// The number of milligrams of sodium.
        /// </summary>
        public const string sodiumContent = BaseUri + "sodiumContent";

        
        /// <summary>
        /// The text of the UserComment.
        /// </summary>
        public const string commentText = BaseUri + "commentText";

        
        /// <summary>
        /// The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from *January* to December.  Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions. 
        /// </summary>
        public const string startTime = BaseUri + "startTime";

        
        /// <summary>
        /// Either the actual menu or a URL of the menu.
        /// </summary>
        public const string menu = BaseUri + "menu";

        
        /// <summary>
        /// The latest date the package may arrive.
        /// </summary>
        public const string expectedArrivalUntil = BaseUri + "expectedArrivalUntil";

        
        /// <summary>
        /// If this NewsArticle appears in print, this field indicates the print section in which the article appeared.
        /// </summary>
        public const string printSection = BaseUri + "printSection";

        
        /// <summary>
        /// The serving size, in terms of the number of volume or mass.
        /// </summary>
        public const string servingSize = BaseUri + "servingSize";

        
        /// <summary>
        /// The quantity of the goods included in the offer.
        /// </summary>
        public const string amountOfThisGood = BaseUri + "amountOfThisGood";

        
        /// <summary>
        /// The number of offers for the product.
        /// </summary>
        public const string offerCount = BaseUri + "offerCount";

        
        /// <summary>
        /// The version of the CreativeWork embodied by a specified resource.
        /// </summary>
        public const string version = BaseUri + "version";

        
        /// <summary>
        /// The expected arrival time.
        /// </summary>
        public const string arrivalTime = BaseUri + "arrivalTime";

        
        /// <summary>
        /// The closing hour of the place or service on the given day(s) of the week.
        /// </summary>
        public const string closes = BaseUri + "closes";

        
        /// <summary>
        /// The product identifier, such as ISBN. For example: <code>&lt;meta itemprop='productID' content='isbn:123-456-789'/&gt;</code>.
        /// </summary>
        public const string productID = BaseUri + "productID";

        
        /// <summary>
        /// An HTTP method that specifies the appropriate HTTP method for a request to an HTTP EntryPoint. Values are capitalized strings as used in HTTP.
        /// </summary>
        public const string httpMethod = BaseUri + "httpMethod";

        
        /// <summary>
        /// An ingredient used in the recipe.
        /// </summary>
        public const string ingredients = BaseUri + "ingredients";

        
        /// <summary>
        /// The URL for sending a payment.
        /// </summary>
        public const string paymentUrl = BaseUri + "paymentUrl";

        
        /// <summary>
        /// The method of cooking, such as Frying, Steaming, ...
        /// </summary>
        public const string cookingMethod = BaseUri + "cookingMethod";

        
        /// <summary>
        /// A category of alignment between the learning resource and the framework node. Recommended values include: 'assesses', 'teaches', 'requires', 'textComplexity', 'readingLevel', 'educationalSubject', and 'educationLevel'.
        /// </summary>
        public const string alignmentType = BaseUri + "alignmentType";

        
        /// <summary>
        /// Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the Name property.
        /// </summary>
        public const string familyName = BaseUri + "familyName";

        
        /// <summary>
        /// The duration of the item (movie, audio recording, event, etc.) in <a href='http://en.wikipedia.org/wiki/ISO_8601'>ISO 8601 date format</a>.
        /// </summary>
        public const string duration = BaseUri + "duration";

        
        /// <summary>
        /// A link to a screenshot image of the app.
        /// </summary>
        public const string screenshot = BaseUri + "screenshot";

        
        /// <summary>
        /// Cash, credit card, etc.
        /// </summary>
        public const string paymentAccepted = BaseUri + "paymentAccepted";

        
        /// <summary>
        /// The actual infectious agent, such as a specific bacterium.
        /// </summary>
        public const string infectiousAgent = BaseUri + "infectiousAgent";

        
        /// <summary>
        /// Skills required to fulfill this role.
        /// </summary>
        public const string skills = BaseUri + "skills";

        
        /// <summary>
        /// The currency (coded using ISO 4217, http://en.wikipedia.org/wiki/ISO_4217 used for the main salary information in this job posting.
        /// </summary>
        public const string salaryCurrency = BaseUri + "salaryCurrency";

        
        /// <summary>
        /// The number of grams of unsaturated fat.
        /// </summary>
        public const string unsaturatedFatContent = BaseUri + "unsaturatedFatContent";

        
        /// <summary>
        /// The lowest value allowed in this rating system. If worstRating is omitted, 1 is assumed.
        /// </summary>
        public const string worstRating = BaseUri + "worstRating";

        
        /// <summary>
        /// Articles may belong to one or more 'sections' in a magazine or newspaper, such as Sports, Lifestyle, etc.
        /// </summary>
        public const string articleSection = BaseUri + "articleSection";

        
        /// <summary>
        /// The highest value allowed in this rating system. If bestRating is omitted, 5 is assumed.
        /// </summary>
        public const string bestRating = BaseUri + "bestRating";

        
        /// <summary>
        /// The predominant type or kind characterizing the learning resource. For example, 'presentation', 'handout'.
        /// </summary>
        public const string learningResourceType = BaseUri + "learningResourceType";

        
        /// <summary>
        /// The number of grams of saturated fat.
        /// </summary>
        public const string saturatedFatContent = BaseUri + "saturatedFatContent";

        
        /// <summary>
        /// The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere.
        /// </summary>
        public const string commentCount = BaseUri + "commentCount";

        
        /// <summary>
        /// The job title of the person (for example, Financial Manager).
        /// </summary>
        public const string jobTitle = BaseUri + "jobTitle";

        
        /// <summary>
        /// Identifies the volume of publication or multi-part work; for example, "iii" or "2".
        /// </summary>
        public const string volumeNumber = BaseUri + "volumeNumber";

        
        /// <summary>
        /// How the disease spreads, either as a route or vector, for example 'direct contact', 'Aedes aegypti', etc.
        /// </summary>
        public const string transmissionMethod = BaseUri + "transmissionMethod";

        
        /// <summary>
        /// The date and time the reservation was booked.
        /// </summary>
        public const string bookingTime = BaseUri + "bookingTime";

        
        /// <summary>
        /// Reference to an asset (e.g., Barcode, QR code image or PDF) usable for entrance.
        /// </summary>
        public const string ticketToken = BaseUri + "ticketToken";

        
        /// <summary>
        /// Specifies the allowed range for number of characters in a literal value.
        /// </summary>
        public const string valueMaxLength = BaseUri + "valueMaxLength";

        
        /// <summary>
        /// Countries for which the application is supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.
        /// </summary>
        public const string countriesSupported = BaseUri + "countriesSupported";

        
        /// <summary>
        /// The website to access the service.
        /// </summary>
        public const string serviceUrl = BaseUri + "serviceUrl";

        
        /// <summary>
        /// The unique identifier for a flight including the airline IATA code. For example, if describing United flight 110, where the IATA code for United is 'UA', the flightNumber is 'UA110'.
        /// </summary>
        public const string flightNumber = BaseUri + "flightNumber";

        
        /// <summary>
        /// Specifies specific carrier(s) requirements for the application (e.g. an application may only work on a specific carrier network).
        /// </summary>
        public const string carrierRequirements = BaseUri + "carrierRequirements";

        
        /// <summary>
        /// The coding system, e.g. 'ICD-10'.
        /// </summary>
        public const string codingSystem = BaseUri + "codingSystem";

        
        /// <summary>
        /// The value of the product characteristic.
        /// </summary>
        public const string value = BaseUri + "value";

        
        /// <summary>
        /// The lower value of some characteristic or property.
        /// </summary>
        public const string minValue = BaseUri + "minValue";

        
        /// <summary>
        /// The edition of the book.
        /// </summary>
        public const string bookEdition = BaseUri + "bookEdition";

        
        /// <summary>
        /// The phase of the trial.
        /// </summary>
        public const string phase = BaseUri + "phase";

        
        /// <summary>
        /// The movement the muscle generates.
        /// </summary>
        public const string muscleAction = BaseUri + "muscleAction";

        
        /// <summary>
        /// Expected or actual outcomes of the study.
        /// </summary>
        public const string outcome = BaseUri + "outcome";

        
        /// <summary>
        /// Any potential safety concern associated with the supplement. May include interactions with other drugs and foods, pregnancy, breastfeeding, known adverse reactions, and documented efficacy of the supplement.
        /// </summary>
        public const string safetyConsideration = BaseUri + "safetyConsideration";

        
        /// <summary>
        /// The time admission will commence.
        /// </summary>
        public const string doorTime = BaseUri + "doorTime";

        
        /// <summary>
        /// The date the ticket was issued.
        /// </summary>
        public const string dateIssued = BaseUri + "dateIssued";

        
        /// <summary>
        /// A polygon is the area enclosed by a point-to-point path for which the starting and ending points are the same. A polygon is expressed as a series of four or more space delimited points where the first and final points are identical.
        /// </summary>
        public const string box = BaseUri + "box";

        
        /// <summary>
        /// A URL to a map of the place.
        /// </summary>
        public const string hasMap = BaseUri + "hasMap";

        
        /// <summary>
        /// The lowest price of all offers available.
        /// </summary>
        public const string lowPrice = BaseUri + "lowPrice";

        
        /// <summary>
        /// Whether the property must be filled in to complete the action.  Default is false.
        /// </summary>
        public const string valueRequired = BaseUri + "valueRequired";

        
        /// <summary>
        /// Description of skills and experience needed for the position.
        /// </summary>
        public const string experienceRequirements = BaseUri + "experienceRequirements";

        
        /// <summary>
        /// If this MediaObject is an AudioObject or VideoObject, the transcript of that object.
        /// </summary>
        public const string transcript = BaseUri + "transcript";

        
        /// <summary>
        /// The currency (in 3-letter ISO 4217 format) of the price or a price component, when attached to PriceSpecification and its subtypes.
        /// </summary>
        public const string priceCurrency = BaseUri + "priceCurrency";

        
        /// <summary>
        /// Specific physiologic benefits associated to the plan.
        /// </summary>
        public const string physiologicalBenefits = BaseUri + "physiologicalBenefits";

        
        /// <summary>
        /// The page on which the work starts; for example "135" or "xiii".
        /// </summary>
        public const string pageStart = BaseUri + "pageStart";

        
        /// <summary>
        /// The date after which the price is no longer available.
        /// </summary>
        public const string priceValidUntil = BaseUri + "priceValidUntil";

        
        /// <summary>
        /// The beginning of the availability of the product or service included in the offer.
        /// </summary>
        public const string availabilityStarts = BaseUri + "availabilityStarts";

        
        /// <summary>
        /// The region. For example, CA.
        /// </summary>
        public const string addressRegion = BaseUri + "addressRegion";

        
        /// <summary>
        /// The name of a character played in some acting or performing role, i.e. in a PerformanceRole.
        /// </summary>
        public const string characterName = BaseUri + "characterName";

        
        /// <summary>
        /// The number of grams of sugar.
        /// </summary>
        public const string sugarContent = BaseUri + "sugarContent";

        
        /// <summary>
        /// The latitude of a location. For example <code>37.42242</code>.
        /// </summary>
        public const string latitude = BaseUri + "latitude";

        
        /// <summary>
        /// Any precaution, guidance, contraindication, etc. related to consumption of alcohol while taking this drug.
        /// </summary>
        public const string alcoholWarning = BaseUri + "alcoholWarning";

        
        /// <summary>
        /// Indicates whether API is managed or unmanaged.
        /// </summary>
        public const string programmingModel = BaseUri + "programmingModel";

        
        /// <summary>
        /// Size of the application / package (e.g. 18MB). In the absence of a unit (MB, KB etc.), KB will be assumed.
        /// </summary>
        public const string fileSize = BaseUri + "fileSize";

        
        /// <summary>
        /// Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the Name property.
        /// </summary>
        public const string givenName = BaseUri + "givenName";

        
        /// <summary>
        /// The date on which the CreativeWork was created.
        /// </summary>
        public const string dateCreated = BaseUri + "dateCreated";

        
        /// <summary>
        /// The location of the reserved seat (e.g., 27).
        /// </summary>
        public const string seatNumber = BaseUri + "seatNumber";

        
        /// <summary>
        /// The end date and time of the role, event or item (in <a href='http://en.wikipedia.org/wiki/ISO_8601'>ISO 8601 date format</a>).
        /// </summary>
        public const string endDate = BaseUri + "endDate";

        
        /// <summary>
        /// The date when the item becomes valid.
        /// </summary>
        public const string validFrom = BaseUri + "validFrom";

        
        /// <summary>
        /// IATA identifier for an airline or airport
        /// </summary>
        public const string iataCode = BaseUri + "iataCode";

        
        /// <summary>
        /// The section location of the reserved seat (e.g. Orchestra).
        /// </summary>
        public const string seatSection = BaseUri + "seatSection";

        
        /// <summary>
        /// An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.
        /// </summary>
        public const string honorificPrefix = BaseUri + "honorificPrefix";

        
        /// <summary>
        /// Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience, e.g. 'P30M', 'P1H25M'.
        /// </summary>
        public const string timeRequired = BaseUri + "timeRequired";

        
        /// <summary>
        /// Descriptive information establishing a historical perspective on the supplement. May include the rationale for the name, the population where the supplement first came to prominence, etc.
        /// </summary>
        public const string background = BaseUri + "background";

        
        /// <summary>
        /// The distance travelled, e.g. exercising or travelling.
        /// </summary>
        public const string distance = BaseUri + "distance";

        
        /// <summary>
        /// True if this item's name is a proprietary/brand name (vs. generic name).
        /// </summary>
        public const string isProprietary = BaseUri + "isProprietary";

        
        /// <summary>
        /// If the file can be downloaded, URL to download the binary.
        /// </summary>
        public const string downloadUrl = BaseUri + "downloadUrl";

        
        /// <summary>
        /// The <a href="http://apps.gs1.org/GDD/glossary/Pages/GTIN-8.aspx">GTIN-8</a> code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN Summary</a> for more details.
        /// </summary>
        public const string gtin8 = BaseUri + "gtin8";

        
        /// <summary>
        /// Minimal age recommended for viewing content.
        /// </summary>
        public const string suggestedMinAge = BaseUri + "suggestedMinAge";

        
        /// <summary>
        /// A sub property of location. The original location of the object or the agent before the action.
        /// </summary>
        public const string fromLocation = BaseUri + "fromLocation";

        
        /// <summary>
        /// The longitude of a location. For example <code>-122.08585</code>.
        /// </summary>
        public const string longitude = BaseUri + "longitude";

        
        /// <summary>
        /// The industry associated with the job position.
        /// </summary>
        public const string industry = BaseUri + "industry";

        
        /// <summary>
        /// Operating systems supported (Windows 7, OSX 10.6, Android 1.6).
        /// </summary>
        public const string operatingSystem = BaseUri + "operatingSystem";

        
        /// <summary>
        /// The total time it takes to prepare and cook the recipe, in <a href='http://en.wikipedia.org/wiki/ISO_8601'>ISO 8601 duration format</a>.
        /// </summary>
        public const string totalTime = BaseUri + "totalTime";

        
        /// <summary>
        /// Proprietary name given to the diet plan, typically by its originator or creator.
        /// </summary>
        public const string proprietaryName = BaseUri + "proprietaryName";

        
        /// <summary>
        /// The number of grams of carbohydrates.
        /// </summary>
        public const string carbohydrateContent = BaseUri + "carbohydrateContent";

        
        /// <summary>
        /// The degree of mobility the joint allows.
        /// </summary>
        public const string functionalClass = BaseUri + "functionalClass";

        
        /// <summary>
        /// Number of people the reservation should accommodate.
        /// </summary>
        public const string partySize = BaseUri + "partySize";

        
        /// <summary>
        /// Link to the repository where the un-compiled, human readable code and related code is located (SVN, github, CodePlex)
        /// </summary>
        public const string codeRepository = BaseUri + "codeRepository";

        
        /// <summary>
        /// This property specifies the minimal quantity and rounding increment that will be the basis for the billing. The unit of measurement is specified by the unitCode property.
        /// </summary>
        public const string billingIncrement = BaseUri + "billingIncrement";

        
        /// <summary>
        /// Function of the anatomical structure.
        /// </summary>
        public const string function = BaseUri + "function";

        
        /// <summary>
        /// The currency accepted (in <a href='http://en.wikipedia.org/wiki/ISO_4217'>ISO 4217 currency format</a>).
        /// </summary>
        public const string currenciesAccepted = BaseUri + "currenciesAccepted";

        
        /// <summary>
        /// The time the object is scheduled to.
        /// </summary>
        public const string scheduledTime = BaseUri + "scheduledTime";

        
        /// <summary>
        /// How often one should break from the activity.
        /// </summary>
        public const string restPeriods = BaseUri + "restPeriods";

        
        /// <summary>
        /// An educationalRole of an EducationalAudience
        /// </summary>
        public const string educationalRole = BaseUri + "educationalRole";

        
        /// <summary>
        /// An identifier for the method of payment used (e.g. the last 4 digits of the credit card).
        /// </summary>
        public const string paymentMethodId = BaseUri + "paymentMethodId";

        
        /// <summary>
        /// Characteristics of the population for which this is intended, or which typically uses it, e.g. 'adults'.
        /// </summary>
        public const string targetPopulation = BaseUri + "targetPopulation";

        
        /// <summary>
        /// Description of the absorption and elimination of drugs, including their concentration (pharmacokinetics, pK) and biological effects (pharmacodynamics, pD).
        /// </summary>
        public const string clincalPharmacology = BaseUri + "clincalPharmacology";

        
        /// <summary>
        /// Shipper tracking number.
        /// </summary>
        public const string trackingNumber = BaseUri + "trackingNumber";

        
        /// <summary>
        /// The date that payment is due.
        /// </summary>
        public const string paymentDue = BaseUri + "paymentDue";

        
        /// <summary>
        /// The page on which the work ends; for example "138" or "xvi".
        /// </summary>
        public const string pageEnd = BaseUri + "pageEnd";

        
        /// <summary>
        /// Runtime platform or script interpreter dependencies (Example - Java v1, Python2.3, .Net Framework 3.0)
        /// </summary>
        public const string runtime = BaseUri + "runtime";

        
        /// <summary>
        /// Associated product/technology version. e.g., .NET Framework 4.5
        /// </summary>
        public const string assemblyVersion = BaseUri + "assemblyVersion";

        
        /// <summary>
        /// A count of a specific user interactions with this item&#x2014;for example, <code>20 UserLikes</code>, <code>5 UserComments</code>, or <code>300 UserDownloads</code>. The user interaction type should be one of the sub types of <a href='UserInteraction'>UserInteraction</a>.
        /// </summary>
        public const string interactionCount = BaseUri + "interactionCount";

        
        /// <summary>
        /// An award won by this person or for this creative work.
        /// </summary>
        public const string award = BaseUri + "award";

        
        /// <summary>
        /// The quantity produced by the recipe (for example, number of people served, number of servings, etc).
        /// </summary>
        public const string recipeYield = BaseUri + "recipeYield";

        
        /// <summary>
        /// Educational background needed for the position.
        /// </summary>
        public const string educationRequirements = BaseUri + "educationRequirements";

        
        /// <summary>
        /// The telephone number.
        /// </summary>
        public const string telephone = BaseUri + "telephone";

        
        /// <summary>
        /// exif data for this object.
        /// </summary>
        public const string exifData = BaseUri + "exifData";

        
        /// <summary>
        /// Link to page describing the editorial principles of the organization primarily responsible for the creation of the CreativeWork.
        /// </summary>
        public const string publishingPrinciples = BaseUri + "publishingPrinciples";

        
        /// <summary>
        /// An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.
        /// </summary>
        public const string honorificSuffix = BaseUri + "honorificSuffix";

        
        /// <summary>
        /// The Value-added Tax ID of the organization or person.
        /// </summary>
        public const string vatID = BaseUri + "vatID";

        
        /// <summary>
        /// Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas.
        /// </summary>
        public const string keywords = BaseUri + "keywords";

        
        /// <summary>
        /// An image of the item. This can be a <a href="http://schema.org/URL">URL</a> or a fully described <a href="http://schema.org/ImageObject">ImageObject</a>.
        /// </summary>
        public const string image = BaseUri + "image";

        
        /// <summary>
        /// Processor architecture required to run the application (e.g. IA64).
        /// </summary>
        public const string processorRequirements = BaseUri + "processorRequirements";

        
        /// <summary>
        /// Whether or not a property is mutable.  Default is false. Specifying this for a property that also has a value makes it act similar to a "hidden" input in an HTML form.
        /// </summary>
        public const string readonlyValue = BaseUri + "readonlyValue";

        
        /// <summary>
        /// Audiences defined by a person's gender.
        /// </summary>
        public const string requiredGender = BaseUri + "requiredGender";

        
        /// <summary>
        /// One of the more significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most.
        /// </summary>
        public const string significantLink = BaseUri + "significantLink";

        
        /// <summary>
        /// The locality. For example, Mountain View.
        /// </summary>
        public const string addressLocality = BaseUri + "addressLocality";

        
        /// <summary>
        /// Typical preparation that a patient must undergo before having the procedure performed.
        /// </summary>
        public const string preparation = BaseUri + "preparation";

        
        /// <summary>
        /// A URL to a map of the place.
        /// </summary>
        public const string map = BaseUri + "map";

        
        /// <summary>
        /// Audiences defined by a person's maximum age.
        /// </summary>
        public const string requiredMaxAge = BaseUri + "requiredMaxAge";

        
        /// <summary>
        /// Any information related to overdose on a drug, including signs or symptoms, treatments, contact information for emergency response.
        /// </summary>
        public const string overdosage = BaseUri + "overdosage";

        
        /// <summary>
        /// The date that this organization was founded.
        /// </summary>
        public const string foundingDate = BaseUri + "foundingDate";

        
        /// <summary>
        /// A unique identifier for the membership.
        /// </summary>
        public const string membershipNumber = BaseUri + "membershipNumber";

        
        /// <summary>
        /// Description of what changed in this version.
        /// </summary>
        public const string releaseNotes = BaseUri + "releaseNotes";

        
        /// <summary>
        /// Any discount applied (to an Order).
        /// </summary>
        public const string discount = BaseUri + "discount";

        
        /// <summary>
        /// Additional details to capture the origin of the cost data. For example, 'Medicare Part B'.
        /// </summary>
        public const string costOrigin = BaseUri + "costOrigin";

        
        /// <summary>
        /// Descriptive information establishing the overarching theory/philosophy of the plan. May include the rationale for the name, the population where the plan first came to prominence, etc.
        /// </summary>
        public const string overview = BaseUri + "overview";

        
        /// <summary>
        /// Subcategory of the application, e.g. "Arcade Game".
        /// </summary>
        public const string applicationSubCategory = BaseUri + "applicationSubCategory";

        
        /// <summary>
        /// The platform where the train arrives.
        /// </summary>
        public const string arrivalPlatform = BaseUri + "arrivalPlatform";

        
        /// <summary>
        /// The URL of a node in an established educational framework.
        /// </summary>
        public const string targetUrl = BaseUri + "targetUrl";

        
        /// <summary>
        /// Any description of pages that is not separated into pageStart and pageEnd; for example, "1-6, 9, 55" or "10-12, 46-49".
        /// </summary>
        public const string pagination = BaseUri + "pagination";

        
        /// <summary>
        /// Storage requirements (free space required).
        /// </summary>
        public const string storageRequirements = BaseUri + "storageRequirements";

        
        /// <summary>
        /// The post office box number for PO box addresses.
        /// </summary>
        public const string postOfficeBoxNumber = BaseUri + "postOfficeBoxNumber";

        
        /// <summary>
        /// The highest price of all offers available.
        /// </summary>
        public const string highPrice = BaseUri + "highPrice";

        
        /// <summary>
        /// The International Standard Serial Number (ISSN) that identifies this periodical. You can repeat this property to (for example) identify different formats of this periodical.
        /// </summary>
        public const string issn = BaseUri + "issn";

        
        /// <summary>
        /// The number of grams of protein.
        /// </summary>
        public const string proteinContent = BaseUri + "proteinContent";

        
        /// <summary>
        /// The serial number or any alphanumeric identifier of a particular product. When attached to an offer, it is a shortcut for the serial number of the product included in the offer.
        /// </summary>
        public const string serialNumber = BaseUri + "serialNumber";

        
        /// <summary>
        /// Length of time to engage in the activity.
        /// </summary>
        public const string activityDuration = BaseUri + "activityDuration";

        
        /// <summary>
        /// Description of benefits associated with the job.
        /// </summary>
        public const string benefits = BaseUri + "benefits";

        
        /// <summary>
        /// Audiences defined by a person's minimum age.
        /// </summary>
        public const string requiredMinAge = BaseUri + "requiredMinAge";

        
        /// <summary>
        /// The significance associated with the superficial anatomy; as an example, how characteristics of the superficial anatomy can suggest underlying medical conditions or courses of treatment.
        /// </summary>
        public const string significance = BaseUri + "significance";

        
        /// <summary>
        /// The unit of the dose, e.g. 'mg'.
        /// </summary>
        public const string doseUnit = BaseUri + "doseUnit";

        
        /// <summary>
        /// True if the drug is available in a generic form (regardless of name).
        /// </summary>
        public const string isAvailableGenerically = BaseUri + "isAvailableGenerically";

        
        /// <summary>
        /// The unique identifier for the train.
        /// </summary>
        public const string trainNumber = BaseUri + "trainNumber";

        
        /// <summary>
        /// Location in the body of the anatomical structure.
        /// </summary>
        public const string bodyLocation = BaseUri + "bodyLocation";

        
        /// <summary>
        /// Responsibilities associated with this role.
        /// </summary>
        public const string responsibilities = BaseUri + "responsibilities";

        
        /// <summary>
        /// Any additional component of the exercise prescription that may need to be articulated to the patient. This may include the order of exercises, the number of repetitions of movement, quantitative distance, progressions over time, etc.
        /// </summary>
        public const string additionalVariable = BaseUri + "additionalVariable";

        
        /// <summary>
        /// A link related to this web page, for example to other related web pages.
        /// </summary>
        public const string relatedLink = BaseUri + "relatedLink";

        
        /// <summary>
        /// The time validity of the permit.
        /// </summary>
        public const string validFor = BaseUri + "validFor";

        
        /// <summary>
        /// The textual content of this CreativeWork.
        /// </summary>
        public const string text = BaseUri + "text";

        
        /// <summary>
        /// Any FDA or other warnings about the drug (text or URL).
        /// </summary>
        public const string warning = BaseUri + "warning";

        
        /// <summary>
        /// Identifies input methods that are sufficient to fully control the described resource (<a href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas wiki lists possible values</a>).
        /// </summary>
        public const string accessibilityControl = BaseUri + "accessibilityControl";

        
        /// <summary>
        /// The typical expected age range, e.g. '7-9', '11-'.
        /// </summary>
        public const string typicalAgeRange = BaseUri + "typicalAgeRange";

        
        /// <summary>
        /// The platform from which the train departs.
        /// </summary>
        public const string departurePlatform = BaseUri + "departurePlatform";

        
        /// <summary>
        /// Indicates the name of the PropertyValueSpecification to be used in URL templates and form encoding in a manner analogous to HTML's input@name.
        /// </summary>
        public const string valueName = BaseUri + "valueName";

        
        /// <summary>
        /// The stage represented as a number, e.g. 3.
        /// </summary>
        public const string stageAsNumber = BaseUri + "stageAsNumber";

        
        /// <summary>
        /// The number of episodes in this season or series.
        /// </summary>
        public const string numberOfEpisodes = BaseUri + "numberOfEpisodes";

        
        /// <summary>
        /// The year during which the claimed copyright for the CreativeWork was first asserted.
        /// </summary>
        public const string copyrightYear = BaseUri + "copyrightYear";

        
        /// <summary>
        /// The number of downvotes this question has received from the community.
        /// </summary>
        public const string downvoteCount = BaseUri + "downvoteCount";

        
        /// <summary>
        /// The algorithm or rules to follow to compute the score.
        /// </summary>
        public const string algorithm = BaseUri + "algorithm";

        
        /// <summary>
        /// If applicable, a description of the pathophysiology associated with the anatomical system, including potential abnormal changes in the mechanical, physical, and biochemical functions of the system.
        /// </summary>
        public const string associatedPathophysiology = BaseUri + "associatedPathophysiology";

        
        /// <summary>
        /// The unit of measurement given using the UN/CEFACT Common Code (3 characters).
        /// </summary>
        public const string unitCode = BaseUri + "unitCode";

        
        /// <summary>
        /// The title of the job.
        /// </summary>
        public const string title = BaseUri + "title";

        
        /// <summary>
        /// The characteristics of associated patients, such as age, gender, race etc.
        /// </summary>
        public const string epidemiology = BaseUri + "epidemiology";

        
        /// <summary>
        /// Version of the software instance.
        /// </summary>
        public const string softwareVersion = BaseUri + "softwareVersion";

        
        /// <summary>
        /// The number of the column in which the NewsArticle appears in the print edition.
        /// </summary>
        public const string printColumn = BaseUri + "printColumn";

        
        /// <summary>
        /// The movement the muscle generates.
        /// </summary>
        public const string action = BaseUri + "action";

        
        /// <summary>
        /// Link to the drug's label details.
        /// </summary>
        public const string labelDetails = BaseUri + "labelDetails";

        
        /// <summary>
        /// Any special commitments associated with this job posting. Valid entries include VeteranCommit, MilitarySpouseCommit, etc.
        /// </summary>
        public const string specialCommitments = BaseUri + "specialCommitments";

        
        /// <summary>
        /// Source of the data used to formulate the guidance, e.g. RCT, consensus opinion, etc.
        /// </summary>
        public const string evidenceOrigin = BaseUri + "evidenceOrigin";

        
        /// <summary>
        /// The generic name of this drug or supplement.
        /// </summary>
        public const string nonProprietaryName = BaseUri + "nonProprietaryName";

        
        /// <summary>
        /// The lowest price if the price is a range.
        /// </summary>
        public const string minPrice = BaseUri + "minPrice";

        
        /// <summary>
        /// The <a href="http://apps.gs1.org/GDD/glossary/Pages/GTIN-14.aspx">GTIN-14</a> code of the product, or the product to which the offer refers. See <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN Summary</a> for more details.
        /// </summary>
        public const string gtin14 = BaseUri + "gtin14";

        
        /// <summary>
        /// Permission(s) required to run the app (for example, a mobile app may require full internet access or may run only on wifi).
        /// </summary>
        public const string permissions = BaseUri + "permissions";

        
        /// <summary>
        /// A characteristic of the described resource that is physiologically dangerous to some users. Related to WCAG 2.0 guideline 2.3. (<a href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas wiki lists possible values</a>)
        /// </summary>
        public const string accessibilityHazard = BaseUri + "accessibilityHazard";

        
        /// <summary>
        /// A full description of the lodging unit.
        /// </summary>
        public const string lodgingUnitDescription = BaseUri + "lodgingUnitDescription";

        
        /// <summary>
        /// The typical working hours for this job (e.g. 1st shift, night shift, 8am-5pm).
        /// </summary>
        public const string workHours = BaseUri + "workHours";

        
        /// <summary>
        /// The unique identifier for the bus.
        /// </summary>
        public const string busNumber = BaseUri + "busNumber";

        
        /// <summary>
        /// The price range of the business, for example <code>$$$</code>.
        /// </summary>
        public const string priceRange = BaseUri + "priceRange";

        
        /// <summary>
        /// Date of first broadcast/publication.
        /// </summary>
        public const string datePublished = BaseUri + "datePublished";

        
        /// <summary>
        /// Specifies a regular expression for testing literal values according to the HTML spec.
        /// </summary>
        public const string valuePattern = BaseUri + "valuePattern";

        
        /// <summary>
        /// Tracking url for the parcel delivery.
        /// </summary>
        public const string trackingUrl = BaseUri + "trackingUrl";

        
        /// <summary>
        /// The currency (in 3-letter <a href=http://en.wikipedia.org/wiki/ISO_4217>ISO 4217 format</a>) of the drug cost.
        /// </summary>
        public const string costCurrency = BaseUri + "costCurrency";

        
        /// <summary>
        /// Was the offer accepted as a gift for someone other than the buyer.
        /// </summary>
        public const string isGift = BaseUri + "isGift";

        
        /// <summary>
        /// The substage, e.g. 'a' for Stage IIIa.
        /// </summary>
        public const string subStageSuffix = BaseUri + "subStageSuffix";

        
        /// <summary>
        /// The Global Location Number (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
        /// </summary>
        public const string globalLocationNumber = BaseUri + "globalLocationNumber";

        
        /// <summary>
        /// Position of the episode within an ordered group of episodes.
        /// </summary>
        public const string episodeNumber = BaseUri + "episodeNumber";

        
        /// <summary>
        /// The North American Industry Classification System (NAICS) code for a particular organization or business person.
        /// </summary>
        public const string naics = BaseUri + "naics";

        
        /// <summary>
        /// The supported encoding type(s) for an EntryPoint request.
        /// </summary>
        public const string encodingType = BaseUri + "encodingType";

        
        /// <summary>
        /// The count of total number of ratings.
        /// </summary>
        public const string ratingCount = BaseUri + "ratingCount";

        
        /// <summary>
        /// A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.
        /// </summary>
        public const string contactType = BaseUri + "contactType";

        
        /// <summary>
        /// The range of temporal applicability of a dataset, e.g. for a 2011 census dataset, the year 2011 (in ISO 8601 time interval format).
        /// </summary>
        public const string temporal = BaseUri + "temporal";

        
        /// <summary>
        /// The start date and time of the event, role or item (in <a href='http://en.wikipedia.org/wiki/ISO_8601'>ISO 8601 date format</a>).
        /// </summary>
        public const string startDate = BaseUri + "startDate";

        
        /// <summary>
        /// The date when the item is no longer valid.
        /// </summary>
        public const string validUntil = BaseUri + "validUntil";

        
        /// <summary>
        /// Password, PIN, or access code needed for delivery (e.g. from a locker).
        /// </summary>
        public const string accessCode = BaseUri + "accessCode";

        
        /// <summary>
        /// The supported content type(s) for an EntryPoint response.
        /// </summary>
        public const string contentType = BaseUri + "contentType";

        
        /// <summary>
        /// The unique identifier for the ticket.
        /// </summary>
        public const string ticketNumber = BaseUri + "ticketNumber";

        
        /// <summary>
        /// A possible unexpected and unfavorable evolution of a medical condition. Complications may include worsening of the signs or symptoms of the disease, extension of the condition to other organ systems, etc.
        /// </summary>
        public const string possibleComplication = BaseUri + "possibleComplication";

        
        /// <summary>
        /// The time at which the UserComment was made.
        /// </summary>
        public const string commentTime = BaseUri + "commentTime";

        
        /// <summary>
        /// A polygon is the area enclosed by a point-to-point path for which the starting and ending points are the same. A polygon is expressed as a series of four or more space delimited points where the first and final points are identical.
        /// </summary>
        public const string polygon = BaseUri + "polygon";

        
        /// <summary>
        /// The time when a passenger can check into the flight online.
        /// </summary>
        public const string webCheckinTime = BaseUri + "webCheckinTime";

        
        /// <summary>
        /// Position of the season within an ordered group of seasons.
        /// </summary>
        public const string seasonNumber = BaseUri + "seasonNumber";

        
        /// <summary>
        /// The postal code. For example, 94043.
        /// </summary>
        public const string postalCode = BaseUri + "postalCode";

        
        /// <summary>
        /// A description of the postoperative procedures, care, and/or followups for this device.
        /// </summary>
        public const string postOp = BaseUri + "postOp";

        
        /// <summary>
        /// Date on which the content on this web page was last reviewed for accuracy and/or completeness.
        /// </summary>
        public const string lastReviewed = BaseUri + "lastReviewed";

        
        /// <summary>
        /// An aspect of medical practice that is considered on the page, such as 'diagnosis', 'treatment', 'causes', 'prognosis', 'etiology', 'epidemiology', etc.
        /// </summary>
        public const string aspect = BaseUri + "aspect";

        
        /// <summary>
        /// The URL at which a reply may be posted to the specified UserComment.
        /// </summary>
        public const string replyToUrl = BaseUri + "replyToUrl";

        
        /// <summary>
        /// The quality of the video.
        /// </summary>
        public const string videoQuality = BaseUri + "videoQuality";

        
        /// <summary>
        /// Position of the clip within an ordered group of clips.
        /// </summary>
        public const string clipNumber = BaseUri + "clipNumber";

        
        /// <summary>
        /// Indicates that the resource is compatible with the referenced accessibility API (<a href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas wiki lists possible values</a>).          
        /// </summary>
        public const string accessibilityAPI = BaseUri + "accessibilityAPI";

        
        /// <summary>
        /// The stepValue attribute indicates the granularity that is expected (and required) of the value in a PropertyValueSpecification.
        /// </summary>
        public const string stepValue = BaseUri + "stepValue";

        
        /// <summary>
        /// Identifier of the flight's arrival terminal.
        /// </summary>
        public const string arrivalTerminal = BaseUri + "arrivalTerminal";

        
        /// <summary>
        /// IACO identifier for an airport.
        /// </summary>
        public const string icaoCode = BaseUri + "icaoCode";

        
        /// <summary>
        /// The <a href="http://apps.gs1.org/GDD/glossary/Pages/GTIN-13.aspx">GTIN-13</a> code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceeding zero. See <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN Summary</a> for more details.
        /// </summary>
        public const string gtin13 = BaseUri + "gtin13";

        
        /// <summary>
        /// A route by which this drug may be administered, e.g. 'oral'.
        /// </summary>
        public const string administrationRoute = BaseUri + "administrationRoute";

        
        /// <summary>
        /// The fax number.
        /// </summary>
        public const string faxNumber = BaseUri + "faxNumber";

        
        /// <summary>
        /// The ISBN of the book.
        /// </summary>
        public const string isbn = BaseUri + "isbn";

        
        /// <summary>
        /// The actual body of the article.
        /// </summary>
        public const string articleBody = BaseUri + "articleBody";

        
        /// <summary>
        /// A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html
        /// </summary>
        public const string isBasedOnUrl = BaseUri + "isBasedOnUrl";

        
        /// <summary>
        /// The series to which this episode or season belongs.
        /// </summary>
        public const string partOfSeries = BaseUri + "partOfSeries";

        
        /// <summary>
        /// Specifies the Person who edited the CreativeWork.
        /// </summary>
        public const string editor = BaseUri + "editor";

        
        /// <summary>
        /// The rating given in this review. Note that reviews can themselves be rated. The <code>reviewRating</code> applies to rating given by the review. The <code>aggregateRating</code> property applies to the review itself, as a creative work.
        /// </summary>
        public const string reviewRating = BaseUri + "reviewRating";

        
        /// <summary>
        /// The branches that delineate from the nerve bundle.
        /// </summary>
        public const string branch = BaseUri + "branch";

        
        /// <summary>
        /// A medical code for the entity, taken from a controlled vocabulary or ontology such as ICD-9, DiseasesDB, MeSH, SNOMED-CT, RxNorm, etc.
        /// </summary>
        public const string code = BaseUri + "code";

        
        /// <summary>
        /// A sub property of participant. The participant who is at the receiving end of the action.
        /// </summary>
        public const string recipient = BaseUri + "recipient";

        
        /// <summary>
        /// The muscle whose action counteracts the specified muscle.
        /// </summary>
        public const string antagonist = BaseUri + "antagonist";

        
        /// <summary>
        /// An image containing a diagram that illustrates the structure and/or its component substructures and/or connections with other structures.
        /// </summary>
        public const string diagram = BaseUri + "diagram";

        
        /// <summary>
        /// The class of infectious agent (bacteria, prion, etc.) that causes the disease.
        /// </summary>
        public const string infectiousAgentClass = BaseUri + "infectiousAgentClass";

        
        /// <summary>
        /// A person or organization attending the event.
        /// </summary>
        public const string attendee = BaseUri + "attendee";

        
        /// <summary>
        /// A pointer to products or services sought by the organization or person (demand).
        /// </summary>
        public const string seeks = BaseUri + "seeks";

        
        /// <summary>
        /// The type of procedure, for example Surgical, Noninvasive, or Percutaneous.
        /// </summary>
        public const string procedureType = BaseUri + "procedureType";

        
        /// <summary>
        /// Method used for delivery or shipping.
        /// </summary>
        public const string hasDeliveryMethod = BaseUri + "hasDeliveryMethod";

        
        /// <summary>
        /// A contact location for a person's place of work.
        /// </summary>
        public const string workLocation = BaseUri + "workLocation";

        
        /// <summary>
        /// Organization offering the job position.
        /// </summary>
        public const string hiringOrganization = BaseUri + "hiringOrganization";

        
        /// <summary>
        /// The system of medicine that includes this MedicalEntity, for example 'evidence-based', 'homeopathic', 'chiropractic', etc.
        /// </summary>
        public const string medicineSystem = BaseUri + "medicineSystem";

        
        /// <summary>
        /// The address for accessing the service by mail.
        /// </summary>
        public const string servicePostalAddress = BaseUri + "servicePostalAddress";

        
        /// <summary>
        /// A medical guideline related to this entity.
        /// </summary>
        public const string guideline = BaseUri + "guideline";

        
        /// <summary>
        /// One of a set of differential diagnoses for the condition. Specifically, a closely-related or competing diagnosis typically considered later in the cognitive process whereby this medical condition is distinguished from others most likely responsible for a similar collection of signs and symptoms to reach the most parsimonious diagnosis or diagnoses in a patient.
        /// </summary>
        public const string differentialDiagnosis = BaseUri + "differentialDiagnosis";

        
        /// <summary>
        /// The country. For example, USA. You can also provide the two-letter <a href='http://en.wikipedia.org/wiki/ISO_3166-1'>ISO 3166-1 alpha-2 country code</a>.
        /// </summary>
        public const string addressCountry = BaseUri + "addressCountry";

        
        /// <summary>
        /// A sign detected by the test.
        /// </summary>
        public const string signDetected = BaseUri + "signDetected";

        
        /// <summary>
        /// The typical delay between the receipt of the order and the goods leaving the warehouse.
        /// </summary>
        public const string deliveryLeadTime = BaseUri + "deliveryLeadTime";

        
        /// <summary>
        /// Indicates if this web page element is the main subject of the page.
        /// </summary>
        public const string mainContentOfPage = BaseUri + "mainContentOfPage";

        
        /// <summary>
        /// The branches that comprise the arterial structure.
        /// </summary>
        public const string arterialBranch = BaseUri + "arterialBranch";

        
        /// <summary>
        /// A component test of the panel.
        /// </summary>
        public const string subTest = BaseUri + "subTest";

        
        /// <summary>
        /// An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred.
        /// </summary>
        public const string broker = BaseUri + "broker";

        
        /// <summary>
        /// An Event that is part of this event. For example, a conference event includes many presentations, each of which is a subEvent of the conference.
        /// </summary>
        public const string subEvent = BaseUri + "subEvent";

        
        /// <summary>
        /// A pointer to a secondary value that provides additional information on the original value, e.g. a reference temperature.
        /// </summary>
        public const string valueReference = BaseUri + "valueReference";

        
        /// <summary>
        /// The format of the book.
        /// </summary>
        public const string bookFormat = BaseUri + "bookFormat";

        
        /// <summary>
        /// Other co-agents that participated in the action indirectly. e.g. John wrote a book with *Steve*.
        /// </summary>
        public const string participant = BaseUri + "participant";

        
        /// <summary>
        /// A hospital with which the physician or office is affiliated.
        /// </summary>
        public const string hospitalAffiliation = BaseUri + "hospitalAffiliation";

        
        /// <summary>
        /// A sub property of object. The candidate subject of this action.
        /// </summary>
        public const string candidate = BaseUri + "candidate";

        
        /// <summary>
        /// New entry added as the package passes through each leg of its journey (from shipment to final delivery).
        /// </summary>
        public const string deliveryStatus = BaseUri + "deliveryStatus";

        
        /// <summary>
        /// A review of the item.
        /// </summary>
        public const string review = BaseUri + "review";

        
        /// <summary>
        /// Specifies the Person that is legally accountable for the CreativeWork.
        /// </summary>
        public const string accountablePerson = BaseUri + "accountablePerson";

        
        /// <summary>
        /// The service through with the permit was granted.
        /// </summary>
        public const string issuedThrough = BaseUri + "issuedThrough";

        
        /// <summary>
        /// A factor that indicates use of this therapy for treatment and/or prevention of a condition, symptom, etc. For therapies such as drugs, indications can include both officially-approved indications as well as off-label uses. These can be distinguished by using the ApprovedIndication subtype of MedicalIndication.
        /// </summary>
        public const string indication = BaseUri + "indication";

        
        /// <summary>
        /// The station from which the train departs.
        /// </summary>
        public const string departureStation = BaseUri + "departureStation";

        
        /// <summary>
        /// The overall order the items in this delivery were included in.
        /// </summary>
        public const string partOfOrder = BaseUri + "partOfOrder";

        
        /// <summary>
        /// A pointer from a previous, often discontinued variant of the product to its newer variant.
        /// </summary>
        public const string predecessorOf = BaseUri + "predecessorOf";

        
        /// <summary>
        /// The condition, complication, or symptom whose risk is being estimated.
        /// </summary>
        public const string estimatesRiskOf = BaseUri + "estimatesRiskOf";

        
        /// <summary>
        /// The delivery method(s) available for this offer.
        /// </summary>
        public const string availableDeliveryMethod = BaseUri + "availableDeliveryMethod";

        
        /// <summary>
        /// A sub property of participant. The real estate agent involved in the action.
        /// </summary>
        public const string realEstateAgent = BaseUri + "realEstateAgent";

        
        /// <summary>
        /// Any membership in a frequent flyer, hotel loyalty program, etc. being applied to the reservation.
        /// </summary>
        public const string programMembershipUsed = BaseUri + "programMembershipUsed";

        
        /// <summary>
        /// The season to which this episode belongs.
        /// </summary>
        public const string partOfSeason = BaseUri + "partOfSeason";

        
        /// <summary>
        /// Nutrition information about the recipe.
        /// </summary>
        public const string nutrition = BaseUri + "nutrition";

        
        /// <summary>
        /// An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider.
        /// </summary>
        public const string seller = BaseUri + "seller";

        
        /// <summary>
        /// A pointer to a base product from which this product is a variant. It is safe to infer that the variant inherits all product features from the base model, unless defined locally. This is not transitive.
        /// </summary>
        public const string isVariantOf = BaseUri + "isVariantOf";

        
        /// <summary>
        /// The underlying innervation associated with the muscle.
        /// </summary>
        public const string nerve = BaseUri + "nerve";

        
        /// <summary>
        /// A music album.
        /// </summary>
        public const string album = BaseUri + "album";

        
        /// <summary>
        /// A sub property of participant. The opponent on this action.
        /// </summary>
        public const string opponent = BaseUri + "opponent";

        
        /// <summary>
        /// The underlying anatomical structures, such as organs, that comprise the anatomical system.
        /// </summary>
        public const string comprisedOf = BaseUri + "comprisedOf";

        
        /// <summary>
        /// The day of the week for which these opening hours are valid.
        /// </summary>
        public const string dayOfWeek = BaseUri + "dayOfWeek";

        
        /// <summary>
        /// A sign or symptom of this condition. Signs are objective or physically observable manifestations of the medical condition while symptoms are the subjective experience of the medical condition.
        /// </summary>
        public const string signOrSymptom = BaseUri + "signOrSymptom";

        
        /// <summary>
        /// Sponsor of the study.
        /// </summary>
        public const string sponsor = BaseUri + "sponsor";

        
        /// <summary>
        /// A broadcast service associated with the publication event.
        /// </summary>
        public const string publishedOn = BaseUri + "publishedOn";

        
        /// <summary>
        /// Indicates the main image on the page.
        /// </summary>
        public const string primaryImageOfPage = BaseUri + "primaryImageOfPage";

        
        /// <summary>
        /// An organization that this person is affiliated with. For example, a school/university, a club, or a team.
        /// </summary>
        public const string affiliation = BaseUri + "affiliation";

        
        /// <summary>
        /// A sub property of location. The entertainment business where the action occurred.
        /// </summary>
        public const string entertainmentBusiness = BaseUri + "entertainmentBusiness";

        
        /// <summary>
        /// A sub property of object. The person or organization being followed.
        /// </summary>
        public const string followee = BaseUri + "followee";

        
        /// <summary>
        /// A sub property of location. The sports activity location where this action occurred.
        /// </summary>
        public const string sportsActivityLocation = BaseUri + "sportsActivityLocation";

        
        /// <summary>
        /// 'carrier' is an out-dated term indicating the 'provider' for parcel delivery and flights.
        /// </summary>
        public const string carrier = BaseUri + "carrier";

        
        /// <summary>
        /// 'bookingAgent' is an out-dated term indicating a 'broker' that serves as a booking agent.
        /// </summary>
        public const string bookingAgent = BaseUri + "bookingAgent";

        
        /// <summary>
        /// The name of the credit card or other method of payment for the order.
        /// </summary>
        public const string paymentMethod = BaseUri + "paymentMethod";

        
        /// <summary>
        /// Recommended intake of this supplement for a given population as defined by a specific recommending authority.
        /// </summary>
        public const string recommendedIntake = BaseUri + "recommendedIntake";

        
        /// <summary>
        /// An educational organizations that the person is an alumni of.
        /// </summary>
        public const string alumniOf = BaseUri + "alumniOf";

        
        /// <summary>
        /// The warranty promise(s) included in the offer.
        /// </summary>
        public const string warranty = BaseUri + "warranty";

        
        /// <summary>
        /// The size of the business in annual revenue.
        /// </summary>
        public const string yearlyRevenue = BaseUri + "yearlyRevenue";

        
        /// <summary>
        /// This ordering relation for qualitative values indicates that the subject is not equal to the object.
        /// </summary>
        public const string nonEqual = BaseUri + "nonEqual";

        
        /// <summary>
        /// The current status of the order.
        /// </summary>
        public const string orderStatus = BaseUri + "orderStatus";

        
        /// <summary>
        /// One of the domain specialities to which this web page's content applies.
        /// </summary>
        public const string specialty = BaseUri + "specialty";

        
        /// <summary>
        /// The anatomical or organ system drained by this vessel; generally refers to a specific part of an organ.
        /// </summary>
        public const string regionDrained = BaseUri + "regionDrained";

        
        /// <summary>
        /// A sub property of location. The course where this action was taken.
        /// </summary>
        public const string course = BaseUri + "course";

        
        /// <summary>
        /// The person or organization the reservation or ticket is for.
        /// </summary>
        public const string underName = BaseUri + "underName";

        
        /// <summary>
        /// An alignment to an established educational framework.
        /// </summary>
        public const string educationalAlignment = BaseUri + "educationalAlignment";

        
        /// <summary>
        /// A posting that is part of this blog.
        /// </summary>
        public const string blogPost = BaseUri + "blogPost";

        
        /// <summary>
        /// A medical condition associated with this anatomy.
        /// </summary>
        public const string relatedCondition = BaseUri + "relatedCondition";

        
        /// <summary>
        /// Physical address of the item.
        /// </summary>
        public const string address = BaseUri + "address";

        
        /// <summary>
        /// A broadcast service to which the broadcast service may belong to such as regional variations of a national channel.
        /// </summary>
        public const string parentService = BaseUri + "parentService";

        
        /// <summary>
        /// Anatomical systems or structures that relate to the superficial anatomy.
        /// </summary>
        public const string relatedAnatomy = BaseUri + "relatedAnatomy";

        
        /// <summary>
        /// A secondary contributor to the CreativeWork.
        /// </summary>
        public const string contributor = BaseUri + "contributor";

        
        /// <summary>
        /// The amount of time that is required between accepting the offer and the actual usage of the resource or service.
        /// </summary>
        public const string advanceBookingRequirement = BaseUri + "advanceBookingRequirement";

        
        /// <summary>
        /// Specifics about the trial design (enumerated).
        /// </summary>
        public const string trialDesign = BaseUri + "trialDesign";

        
        /// <summary>
        /// A pointer to products or services offered by the organization or person.
        /// </summary>
        public const string makesOffer = BaseUri + "makesOffer";

        
        /// <summary>
        /// A contact location for a person's residence.
        /// </summary>
        public const string homeLocation = BaseUri + "homeLocation";

        
        /// <summary>
        /// The result produced in the action. e.g. John wrote *a book*.
        /// </summary>
        public const string result = BaseUri + "result";

        
        /// <summary>
        /// The geo coordinates of the place.
        /// </summary>
        public const string geo = BaseUri + "geo";

        
        /// <summary>
        /// The anatomical or organ system that the vein flows into; a larger structure that the vein connects to.
        /// </summary>
        public const string tributary = BaseUri + "tributary";

        
        /// <summary>
        /// Thumbnail image for an image or video.
        /// </summary>
        public const string thumbnail = BaseUri + "thumbnail";

        
        /// <summary>
        /// The manufacturer of the product.
        /// </summary>
        public const string manufacturer = BaseUri + "manufacturer";

        
        /// <summary>
        /// An embedded audio object.
        /// </summary>
        public const string audio = BaseUri + "audio";

        
        /// <summary>
        /// The area to which the artery supplies blood.
        /// </summary>
        public const string supplyTo = BaseUri + "supplyTo";

        
        /// <summary>
        /// The anatomical or organ system that the artery originates from.
        /// </summary>
        public const string source = BaseUri + "source";

        
        /// <summary>
        /// The intended audience of the item, i.e. the group for whom the item was created.
        /// </summary>
        public const string audience = BaseUri + "audience";

        
        /// <summary>
        /// The location in which the study is taking/took place.
        /// </summary>
        public const string studyLocation = BaseUri + "studyLocation";

        
        /// <summary>
        /// A cast member of the movie, tv/radio series, season, episode, or video.
        /// </summary>
        public const string actor = BaseUri + "actor";

        
        /// <summary>
        /// The current status of the reservation.
        /// </summary>
        public const string reservationStatus = BaseUri + "reservationStatus";

        
        /// <summary>
        /// Expectations for health conditions of target audience
        /// </summary>
        public const string healthCondition = BaseUri + "healthCondition";

        
        /// <summary>
        /// The tangible thing generated by the service, e.g. a passport, permit, etc.
        /// </summary>
        public const string produces = BaseUri + "produces";

        
        /// <summary>
        /// Target Operating System / Product to which the code applies.  If applies to several versions, just the product name can be used.
        /// </summary>
        public const string targetProduct = BaseUri + "targetProduct";

        
        /// <summary>
        /// A sub property of participant. The winner of the action.
        /// </summary>
        public const string winner = BaseUri + "winner";

        
        /// <summary>
        /// A downloadable form of this dataset, at a specific location, in a specific format.
        /// </summary>
        public const string distribution = BaseUri + "distribution";

        
        /// <summary>
        /// The type(s) of customers for which the given offer is valid.
        /// </summary>
        public const string eligibleCustomerType = BaseUri + "eligibleCustomerType";

        
        /// <summary>
        /// Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept.
        /// </summary>
        public const string mentions = BaseUri + "mentions";

        
        /// <summary>
        /// Destination address.
        /// </summary>
        public const string deliveryAddress = BaseUri + "deliveryAddress";

        
        /// <summary>
        /// A sub property of object. The object that replaces.
        /// </summary>
        public const string replacer = BaseUri + "replacer";

        
        /// <summary>
        /// The parent of a question, answer or item in general.
        /// </summary>
        public const string parentItem = BaseUri + "parentItem";

        
        /// <summary>
        /// A parent of this person.
        /// </summary>
        public const string parent = BaseUri + "parent";

        
        /// <summary>
        /// The composer of the movie or TV/radio soundtrack.
        /// </summary>
        public const string musicBy = BaseUri + "musicBy";

        
        /// <summary>
        /// Relates a property to a class that is (one of) the type(s) the property is expected to be used on.
        /// </summary>
        public const string domainIncludes = BaseUri + "domainIncludes";

        
        /// <summary>
        /// A contact point for a person or organization.
        /// </summary>
        public const string contactPoint = BaseUri + "contactPoint";

        
        /// <summary>
        /// A sub property of result. The review that resulted in the performing of the action.
        /// </summary>
        public const string resultReview = BaseUri + "resultReview";

        
        /// <summary>
        /// A drug in this drug class.
        /// </summary>
        public const string drug = BaseUri + "drug";

        
        /// <summary>
        /// A colleague of the person.
        /// </summary>
        public const string colleague = BaseUri + "colleague";

        
        /// <summary>
        /// The publisher of the creative work.
        /// </summary>
        public const string publisher = BaseUri + "publisher";

        
        /// <summary>
        /// A medical study or trial related to this entity.
        /// </summary>
        public const string study = BaseUri + "study";

        
        /// <summary>
        /// A possible treatment to address this condition, sign or symptom.
        /// </summary>
        public const string possibleTreatment = BaseUri + "possibleTreatment";

        
        /// <summary>
        /// Relates a property to one that supersedes it.
        /// </summary>
        public const string supersededBy = BaseUri + "supersededBy";

        
        /// <summary>
        /// A member of a music group&#x2014;for example, John, Paul, George, or Ringo.
        /// </summary>
        public const string musicGroupMember = BaseUri + "musicGroupMember";

        
        /// <summary>
        /// Pregnancy category of this drug.
        /// </summary>
        public const string pregnancyCategory = BaseUri + "pregnancyCategory";

        
        /// <summary>
        /// Imaging technique used.
        /// </summary>
        public const string imagingTechnique = BaseUri + "imagingTechnique";

        
        /// <summary>
        /// Indicates the current disposition of the Action.
        /// </summary>
        public const string actionStatus = BaseUri + "actionStatus";

        
        /// <summary>
        /// A sub property of participant. The participant who is at the sending end of the action.
        /// </summary>
        public const string sender = BaseUri + "sender";

        
        /// <summary>
        /// The business function (e.g. sell, lease, repair, dispose) of the offer or component of a bundle (TypeAndQuantityNode). The default is http://purl.org/goodrelations/v1#Sell.
        /// </summary>
        public const string businessFunction = BaseUri + "businessFunction";

        
        /// <summary>
        /// One or more detailed price specifications, indicating the unit price and delivery or payment charges.
        /// </summary>
        public const string priceSpecification = BaseUri + "priceSpecification";

        
        /// <summary>
        /// A NewsArticle associated with the Media Object.
        /// </summary>
        public const string associatedArticle = BaseUri + "associatedArticle";

        
        /// <summary>
        /// The producer of the movie, tv/radio series, season, or episode, or video.
        /// </summary>
        public const string producer = BaseUri + "producer";

        
        /// <summary>
        /// The location in which the strength is available.
        /// </summary>
        public const string availableIn = BaseUri + "availableIn";

        
        /// <summary>
        /// The geographic area associated with the audience.
        /// </summary>
        public const string geographicArea = BaseUri + "geographicArea";

        
        /// <summary>
        /// The payment method(s) accepted by seller for this offer.
        /// </summary>
        public const string acceptedPaymentMethod = BaseUri + "acceptedPaymentMethod";

        
        /// <summary>
        /// An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers.)
        /// </summary>
        public const string contactOption = BaseUri + "contactOption";

        
        /// <summary>
        /// A medical specialty of the provider.
        /// </summary>
        public const string medicalSpecialty = BaseUri + "medicalSpecialty";

        
        /// <summary>
        /// The object upon the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read *a book*.
        /// </summary>
        public const string @object = BaseUri + "object";

        
        /// <summary>
        /// This ordering relation for qualitative values indicates that the subject is lesser than the object.
        /// </summary>
        public const string lesser = BaseUri + "lesser";

        
        /// <summary>
        /// An application that can complete the request.
        /// </summary>
        public const string application = BaseUri + "application";

        
        /// <summary>
        /// The duration of the warranty promise. Common unitCode values are ANN for year, MON for months, or DAY for days.
        /// </summary>
        public const string durationOfWarranty = BaseUri + "durationOfWarranty";

        
        /// <summary>
        /// The size of business by number of employees.
        /// </summary>
        public const string numberofEmployees = BaseUri + "numberofEmployees";

        
        /// <summary>
        /// The blood vessel that carries blood from the heart to the muscle.
        /// </summary>
        public const string bloodSupply = BaseUri + "bloodSupply";

        
        /// <summary>
        /// The class of drug this belongs to (e.g., statins).
        /// </summary>
        public const string drugClass = BaseUri + "drugClass";

        
        /// <summary>
        /// A performer at the event&#x2014;for example, a presenter, musician, musical group or actor.
        /// </summary>
        public const string performer = BaseUri + "performer";

        
        /// <summary>
        /// The place(s) from which the offer can be obtained (e.g. store locations).
        /// </summary>
        public const string availableAtOrFrom = BaseUri + "availableAtOrFrom";

        
        /// <summary>
        /// The availability of this item&#x2014;for example In stock, Out of stock, Pre-order, etc.
        /// </summary>
        public const string availability = BaseUri + "availability";

        
        /// <summary>
        /// The location served by this contact point (e.g., a phone number intended for Europeans vs. North Americans or only within the United States.)
        /// </summary>
        public const string areaServed = BaseUri + "areaServed";

        
        /// <summary>
        /// A possible complication and/or side effect of this therapy. If it is known that an adverse outcome is serious (resulting in death, disability, or permanent damage; requiring hospitalization; or is otherwise life-threatening or requires immediate medical attention), tag it as a seriouseAdverseOutcome instead.
        /// </summary>
        public const string adverseOutcome = BaseUri + "adverseOutcome";

        
        /// <summary>
        /// The category of cost, such as wholesale, retail, reimbursement cap, etc.
        /// </summary>
        public const string costCategory = BaseUri + "costCategory";

        
        /// <summary>
        /// The stage of the condition, if applicable.
        /// </summary>
        public const string stage = BaseUri + "stage";

        
        /// <summary>
        /// A physical examination that can identify this sign.
        /// </summary>
        public const string identifyingExam = BaseUri + "identifyingExam";

        
        /// <summary>
        /// A medical test typically performed given this condition.
        /// </summary>
        public const string typicalTest = BaseUri + "typicalTest";

        
        /// <summary>
        /// Indicates the kind of Map, from the MapCategoryType Enumeration.
        /// </summary>
        public const string mapType = BaseUri + "mapType";

        
        /// <summary>
        /// A pointer from a newer variant of a product  to its previous, often discontinued predecessor.
        /// </summary>
        public const string successorOf = BaseUri + "successorOf";

        
        /// <summary>
        /// Where a taxi will pick up a passenger or a rental car can be picked up.
        /// </summary>
        public const string pickupLocation = BaseUri + "pickupLocation";

        
        /// <summary>
        /// A dataset contained in a catalog.
        /// </summary>
        public const string dataset = BaseUri + "dataset";

        
        /// <summary>
        /// Nationality of the person.
        /// </summary>
        public const string nationality = BaseUri + "nationality";

        
        /// <summary>
        /// A sibling of the person.
        /// </summary>
        public const string sibling = BaseUri + "sibling";

        
        /// <summary>
        /// The item that is being reviewed/rated.
        /// </summary>
        public const string itemReviewed = BaseUri + "itemReviewed";

        
        /// <summary>
        /// A sub property of participant. The participant/person/organization that bought the object.
        /// </summary>
        public const string buyer = BaseUri + "buyer";

        
        /// <summary>
        /// A (typically single) geographic location associated with the job position.
        /// </summary>
        public const string jobLocation = BaseUri + "jobLocation";

        
        /// <summary>
        /// The answer that has been accepted as best, typically on a Question/Answer site. Sites vary in their selection mechanisms, e.g. drawing on community opinion and/or the view of the Question author.
        /// </summary>
        public const string acceptedAnswer = BaseUri + "acceptedAnswer";

        
        /// <summary>
        /// Drugs that affect the test's results.
        /// </summary>
        public const string affectedBy = BaseUri + "affectedBy";

        
        /// <summary>
        /// A diagnostic test or procedure offered by this lab.
        /// </summary>
        public const string availableTest = BaseUri + "availableTest";

        
        /// <summary>
        /// A sub property of instrument. The method of delivery
        /// </summary>
        public const string deliveryMethod = BaseUri + "deliveryMethod";

        
        /// <summary>
        /// An organizer of an Event.
        /// </summary>
        public const string organizer = BaseUri + "organizer";

        
        /// <summary>
        /// The airport where the flight terminates.
        /// </summary>
        public const string arrivalAirport = BaseUri + "arrivalAirport";

        
        /// <summary>
        /// Where a rental car can be dropped off.
        /// </summary>
        public const string dropoffLocation = BaseUri + "dropoffLocation";

        
        /// <summary>
        /// The location (e.g. civic structure, local business, etc.) where a person can go to access the service.
        /// </summary>
        public const string serviceLocation = BaseUri + "serviceLocation";

        
        /// <summary>
        /// A sub property of participant. The owner of the real estate property.
        /// </summary>
        public const string landlord = BaseUri + "landlord";

        
        /// <summary>
        /// The phone number to use to access the service.
        /// </summary>
        public const string servicePhone = BaseUri + "servicePhone";

        
        /// <summary>
        /// Indicates a target EntryPoint for an Action.
        /// </summary>
        public const string target = BaseUri + "target";

        
        /// <summary>
        /// A predefined value from OfferItemCondition or a textual description of the condition of the product or service, or the products or services included in the offer.
        /// </summary>
        public const string itemCondition = BaseUri + "itemCondition";

        
        /// <summary>
        /// An underlying cause. More specifically, one of the causative agent(s) that are most directly responsible for the pathophysiologic process that eventually results in the occurrence.
        /// </summary>
        public const string cause = BaseUri + "cause";

        
        /// <summary>
        /// Device used to perform the test.
        /// </summary>
        public const string usesDevice = BaseUri + "usesDevice";

        
        /// <summary>
        /// The item being offered.
        /// </summary>
        public const string itemOffered = BaseUri + "itemOffered";

        
        /// <summary>
        /// A photograph of this place.
        /// </summary>
        public const string photo = BaseUri + "photo";

        
        /// <summary>
        /// This ordering relation for qualitative values indicates that the subject is greater than the object.
        /// </summary>
        public const string greater = BaseUri + "greater";

        
        /// <summary>
        /// The object that helped the agent perform the action. e.g. John wrote a book with *a pen*.
        /// </summary>
        public const string instrument = BaseUri + "instrument";

        
        /// <summary>
        /// The anatomical or organ system that this structure is part of.
        /// </summary>
        public const string partOfSystem = BaseUri + "partOfSystem";

        
        /// <summary>
        /// The episode to which this clip belongs.
        /// </summary>
        public const string partOfEpisode = BaseUri + "partOfEpisode";

        
        /// <summary>
        /// A pointer to another, somehow related product (or multiple products).
        /// </summary>
        public const string isRelatedTo = BaseUri + "isRelatedTo";

        
        /// <summary>
        /// A possible serious complication and/or serious side effect of this therapy. Serious adverse outcomes include those that are life-threatening; result in death, disability, or permanent damage; require hospitalization or prolong existing hospitalization; cause congenital anomalies or birth defects; or jeopardize the patient and may require medical or surgical intervention to prevent one of the outcomes in this definition.
        /// </summary>
        public const string seriousAdverseOutcome = BaseUri + "seriousAdverseOutcome";

        
        /// <summary>
        /// The scope of the warranty promise.
        /// </summary>
        public const string warrantyScope = BaseUri + "warrantyScope";

        
        /// <summary>
        /// A sub property of object. The object that is being replaced.
        /// </summary>
        public const string replacee = BaseUri + "replacee";

        
        /// <summary>
        /// The neurological pathway that originates the neurons.
        /// </summary>
        public const string sourcedFrom = BaseUri + "sourcedFrom";

        
        /// <summary>
        /// Points-of-Sales operated by the organization or person.
        /// </summary>
        public const string hasPOS = BaseUri + "hasPOS";

        
        /// <summary>
        /// A goal towards an action is taken. Can be concrete or abstract.
        /// </summary>
        public const string purpose = BaseUri + "purpose";

        
        /// <summary>
        /// The operating organization, if different from the provider.  This enables the representation of services that are provided by an organization, but operated by another organization like a subcontractor.
        /// </summary>
        public const string serviceOperator = BaseUri + "serviceOperator";

        
        /// <summary>
        /// Alumni of educational organization.
        /// </summary>
        public const string alumni = BaseUri + "alumni";

        
        /// <summary>
        /// An embedded video object.
        /// </summary>
        public const string video = BaseUri + "video";

        
        /// <summary>
        /// A sub property of location. The specific food event where the action occurred.
        /// </summary>
        public const string foodEvent = BaseUri + "foodEvent";

        
        /// <summary>
        /// The most generic uni-directional social relation.
        /// </summary>
        public const string follows = BaseUri + "follows";

        
        /// <summary>
        /// Indicates whether this drug is available by prescription or over-the-counter.
        /// </summary>
        public const string prescriptionStatus = BaseUri + "prescriptionStatus";

        
        /// <summary>
        /// A work performed in some event, for example a play performed in a TheaterEvent.
        /// </summary>
        public const string workPerformed = BaseUri + "workPerformed";

        
        /// <summary>
        /// If applicable, a medical specialty in which this entity is relevant.
        /// </summary>
        public const string relevantSpecialty = BaseUri + "relevantSpecialty";

        
        /// <summary>
        /// The creator/author of this CreativeWork or UserComments. This is the same as the Author property for CreativeWork.
        /// </summary>
        public const string creator = BaseUri + "creator";

        
        /// <summary>
        /// Another drug that is known to interact with this drug in a way that impacts the effect of this drug or causes a risk to the patient. Note: disease interactions are typically captured as contraindications.
        /// </summary>
        public const string interactingDrug = BaseUri + "interactingDrug";

        
        /// <summary>
        /// An additional offer that can only be obtained in combination with the first base offer (e.g. supplements and extensions that are available for a surcharge).
        /// </summary>
        public const string addOn = BaseUri + "addOn";

        
        /// <summary>
        /// The age of the business.
        /// </summary>
        public const string yearsInOperation = BaseUri + "yearsInOperation";

        
        /// <summary>
        /// A media object that encodes this CreativeWork. This property is a synonym for encoding.
        /// </summary>
        public const string associatedMedia = BaseUri + "associatedMedia";

        
        /// <summary>
        /// Component (sub-)structure(s) that comprise this anatomical structure.
        /// </summary>
        public const string subStructure = BaseUri + "subStructure";

        
        /// <summary>
        /// Organizations that the person works for.
        /// </summary>
        public const string worksFor = BaseUri + "worksFor";

        
        /// <summary>
        /// The location in which the status applies.
        /// </summary>
        public const string applicableLocation = BaseUri + "applicableLocation";

        
        /// <summary>
        /// A preventative therapy used to prevent an initial occurrence of the medical condition, such as vaccination.
        /// </summary>
        public const string primaryPrevention = BaseUri + "primaryPrevention";

        
        /// <summary>
        /// An answer (possibly one of several, possibly incorrect) to a Question, e.g. on a Question/Answer site.
        /// </summary>
        public const string suggestedAnswer = BaseUri + "suggestedAnswer";

        
        /// <summary>
        /// People or organizations that endorse the plan.
        /// </summary>
        public const string endorsers = BaseUri + "endorsers";

        
        /// <summary>
        /// The neurological pathway extension that inputs and sends information to the brain or spinal cord.
        /// </summary>
        public const string sensoryUnit = BaseUri + "sensoryUnit";

        
        /// <summary>
        /// A sub property of instrument. The recipe/instructions used to perform the action.
        /// </summary>
        public const string recipe = BaseUri + "recipe";

        
        /// <summary>
        /// Someone working for this organization.
        /// </summary>
        public const string employee = BaseUri + "employee";

        
        /// <summary>
        /// A means of accessing the service (e.g. a phone bank, a web site, a location, etc.)
        /// </summary>
        public const string availableChannel = BaseUri + "availableChannel";

        
        /// <summary>
        /// A person who founded this organization.
        /// </summary>
        public const string founder = BaseUri + "founder";

        
        /// <summary>
        /// A music recording (track)&#x2014;usually a single song.
        /// </summary>
        public const string track = BaseUri + "track";

        
        /// <summary>
        /// The CreativeWork encoded by this media object.
        /// </summary>
        public const string encodesCreativeWork = BaseUri + "encodesCreativeWork";

        
        /// <summary>
        /// A sub property of instrument. The language used on this action.
        /// </summary>
        public const string language = BaseUri + "language";

        
        /// <summary>
        /// A creative work that this work is an example/instance/realization/derivation of.
        /// </summary>
        public const string exampleOfWork = BaseUri + "exampleOfWork";

        
        /// <summary>
        /// The opening hours of a certain place.
        /// </summary>
        public const string openingHoursSpecification = BaseUri + "openingHoursSpecification";

        
        /// <summary>
        /// Example/instance/realization/derivation of the concept of this creative work. eg. The paperback edition, first edition, or eBook.
        /// </summary>
        public const string workExample = BaseUri + "workExample";

        
        /// <summary>
        /// The direct performer or driver of the action (animate or inanimate). e.g. *John* wrote a book.
        /// </summary>
        public const string agent = BaseUri + "agent";

        
        /// <summary>
        /// A preventative therapy used to prevent reoccurrence of the medical condition after an initial episode of the condition.
        /// </summary>
        public const string secondaryPrevention = BaseUri + "secondaryPrevention";

        
        /// <summary>
        /// Related anatomical structure(s) that are not part of the system but relate or connect to it, such as vascular bundles associated with an organ system.
        /// </summary>
        public const string relatedStructure = BaseUri + "relatedStructure";

        
        /// <summary>
        /// The neurological pathway extension that involves muscle control.
        /// </summary>
        public const string nerveMotor = BaseUri + "nerveMotor";

        
        /// <summary>
        /// The organization owning or operating the broadcast service.
        /// </summary>
        public const string broadcaster = BaseUri + "broadcaster";

        
        /// <summary>
        /// Other anatomical structures to which this structure is connected.
        /// </summary>
        public const string connectedTo = BaseUri + "connectedTo";

        
        /// <summary>
        /// One or more alternative conditions considered in the differential diagnosis process.
        /// </summary>
        public const string diagnosis = BaseUri + "diagnosis";

        
        /// <summary>
        /// The vasculature the lymphatic structure originates, or afferents, from.
        /// </summary>
        public const string originatesFrom = BaseUri + "originatesFrom";

        
        /// <summary>
        /// The overall rating, based on a collection of reviews or ratings, of the item.
        /// </summary>
        public const string aggregateRating = BaseUri + "aggregateRating";

        
        /// <summary>
        /// 'merchant' is an out-dated term for 'seller'.
        /// </summary>
        public const string merchant = BaseUri + "merchant";

        
        /// <summary>
        /// Recommended intake of this supplement for a given population as defined by a specific recommending authority.
        /// </summary>
        public const string maximumIntake = BaseUri + "maximumIntake";

        
        /// <summary>
        /// The author of this content. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably.
        /// </summary>
        public const string author = BaseUri + "author";

        
        /// <summary>
        /// The organization issuing the ticket or permit.
        /// </summary>
        public const string issuedBy = BaseUri + "issuedBy";

        
        /// <summary>
        /// A diagnostic test that can identify this sign.
        /// </summary>
        public const string identifyingTest = BaseUri + "identifyingTest";

        
        /// <summary>
        /// An Organization (or ProgramMembership) to which this Person or Organization belongs.
        /// </summary>
        public const string memberOf = BaseUri + "memberOf";

        
        /// <summary>
        /// The place or point where a muscle arises.
        /// </summary>
        public const string origin = BaseUri + "origin";

        
        /// <summary>
        /// Upcoming or past event associated with this place or organization.
        /// </summary>
        public const string @event = BaseUri + "event";

        
        /// <summary>
        /// The most generic bi-directional social/work relation.
        /// </summary>
        public const string knows = BaseUri + "knows";

        
        /// <summary>
        /// Strength of evidence of the data used to formulate the guideline (enumerated).
        /// </summary>
        public const string evidenceLevel = BaseUri + "evidenceLevel";

        
        /// <summary>
        /// The thing -- flight, event, restaurant,etc. being reserved.
        /// </summary>
        public const string reservationFor = BaseUri + "reservationFor";

        
        /// <summary>
        /// A sub property of participant. The person that lends the object being borrowed.
        /// </summary>
        public const string lender = BaseUri + "lender";

        
        /// <summary>
        /// Shipper's address.
        /// </summary>
        public const string originAddress = BaseUri + "originAddress";

        
        /// <summary>
        /// The anatomy of the underlying organ system or structures associated with this entity.
        /// </summary>
        public const string associatedAnatomy = BaseUri + "associatedAnatomy";

        
        /// <summary>
        /// Party placing the order.
        /// </summary>
        public const string customer = BaseUri + "customer";

        
        /// <summary>
        /// A sub property of instrument. The exercise plan used on this action.
        /// </summary>
        public const string exercisePlan = BaseUri + "exercisePlan";

        
        /// <summary>
        /// The stop or station from which the bus arrives.
        /// </summary>
        public const string arrivalBusStop = BaseUri + "arrivalBusStop";

        
        /// <summary>
        /// Relates a property to a property that is its inverse. Inverse properties relate the same pairs of items to each other, but in reversed direction. For example, the 'alumni' and 'alumniOf' properties are inverseOf each other. Some properties don't have explicit inverses; in these situations RDFa and JSON-LD syntax for reverse properties can be used.
        /// </summary>
        public const string inverseOf = BaseUri + "inverseOf";

        
        /// <summary>
        /// The vasculature that the vein drains into.
        /// </summary>
        public const string drainsTo = BaseUri + "drainsTo";

        
        /// <summary>
        /// A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.
        /// </summary>
        public const string member = BaseUri + "member";

        
        /// <summary>
        /// This ordering relation for qualitative values indicates that the subject is lesser than or equal to the object.
        /// </summary>
        public const string lesserOrEqual = BaseUri + "lesserOrEqual";

        
        /// <summary>
        /// The payment method(s) to which the payment charge specification applies.
        /// </summary>
        public const string appliesToPaymentMethod = BaseUri + "appliesToPaymentMethod";

        
        /// <summary>
        /// The location of the event, organization or action.
        /// </summary>
        public const string location = BaseUri + "location";

        
        /// <summary>
        /// A modifiable or non-modifiable factor that increases the risk of a patient contracting this condition, e.g. age,  coexisting condition.
        /// </summary>
        public const string riskFactor = BaseUri + "riskFactor";

        
        /// <summary>
        /// One of a set of signs and symptoms that can be used to distinguish this diagnosis from others in the differential diagnosis.
        /// </summary>
        public const string distinguishingSign = BaseUri + "distinguishingSign";

        
        /// <summary>
        /// The audience eligible for this service.
        /// </summary>
        public const string serviceAudience = BaseUri + "serviceAudience";

        
        /// <summary>
        /// The billing address for the order.
        /// </summary>
        public const string billingAddress = BaseUri + "billingAddress";

        
        /// <summary>
        /// A pointer to another product (or multiple products) for which this product is a consumable.
        /// </summary>
        public const string isConsumableFor = BaseUri + "isConsumableFor";

        
        /// <summary>
        /// The computer programming language.
        /// </summary>
        public const string programmingLanguage = BaseUri + "programmingLanguage";

        
        /// <summary>
        /// A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.
        /// </summary>
        public const string department = BaseUri + "department";

        
        /// <summary>
        /// The seat associated with the ticket.
        /// </summary>
        public const string ticketedSeat = BaseUri + "ticketedSeat";

        
        /// <summary>
        /// The geographic area where the service is provided.
        /// </summary>
        public const string serviceArea = BaseUri + "serviceArea";

        
        /// <summary>
        /// The party holding the legal copyright to the CreativeWork.
        /// </summary>
        public const string copyrightHolder = BaseUri + "copyrightHolder";

        
        /// <summary>
        /// The number to access the service by text message.
        /// </summary>
        public const string serviceSmsNumber = BaseUri + "serviceSmsNumber";

        
        /// <summary>
        /// 'vendor' is an earlier term for 'seller'.
        /// </summary>
        public const string vendor = BaseUri + "vendor";

        
        /// <summary>
        /// An event that this event is a part of. For example, a collection of individual music performances might each have a music festival as their superEvent.
        /// </summary>
        public const string superEvent = BaseUri + "superEvent";

        
        /// <summary>
        /// The current approximate inventory level for the item or items.
        /// </summary>
        public const string inventoryLevel = BaseUri + "inventoryLevel";

        
        /// <summary>
        /// A sub property of instrument. The diet used in this action.
        /// </summary>
        public const string diet = BaseUri + "diet";

        
        /// <summary>
        /// A sub property of location. The specific food establishment where the action occurred.
        /// </summary>
        public const string foodEstablishment = BaseUri + "foodEstablishment";

        
        /// <summary>
        /// A season in a tv/radio series.
        /// </summary>
        public const string season = BaseUri + "season";

        
        /// <summary>
        /// An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, or give away tickets to an event.
        /// </summary>
        public const string offers = BaseUri + "offers";

        
        /// <summary>
        /// The location of the content.
        /// </summary>
        public const string contentLocation = BaseUri + "contentLocation";

        
        /// <summary>
        /// The larger organization that this local business is a branch of, if any.
        /// </summary>
        public const string branchOf = BaseUri + "branchOf";

        
        /// <summary>
        /// The stop or station from which the bus departs.
        /// </summary>
        public const string departureBusStop = BaseUri + "departureBusStop";

        
        /// <summary>
        /// A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.
        /// </summary>
        public const string subOrganization = BaseUri + "subOrganization";

        
        /// <summary>
        /// Products owned by the organization or person.
        /// </summary>
        public const string owns = BaseUri + "owns";

        
        /// <summary>
        /// Item(s) being shipped.
        /// </summary>
        public const string itemShipped = BaseUri + "itemShipped";

        
        /// <summary>
        /// The hours during which this contact point is available.
        /// </summary>
        public const string hoursAvailable = BaseUri + "hoursAvailable";

        
        /// <summary>
        /// This ordering relation for qualitative values indicates that the subject is greater than or equal to the object.
        /// </summary>
        public const string greaterOrEqual = BaseUri + "greaterOrEqual";

        
        /// <summary>
        /// A sub property of participant. The person/organization being supported.
        /// </summary>
        public const string endorsee = BaseUri + "endorsee";

        
        /// <summary>
        /// A condition the test is used to diagnose.
        /// </summary>
        public const string usedToDiagnose = BaseUri + "usedToDiagnose";

        
        /// <summary>
        /// The production company or studio that made the movie, tv/radio series, season, or episode, or media object.
        /// </summary>
        public const string productionCompany = BaseUri + "productionCompany";

        
        /// <summary>
        /// The airport where the flight originates.
        /// </summary>
        public const string departureAirport = BaseUri + "departureAirport";

        
        /// <summary>
        /// A data catalog which contains a dataset.
        /// </summary>
        public const string catalog = BaseUri + "catalog";

        
        /// <summary>
        /// The most generic familial relation.
        /// </summary>
        public const string relatedTo = BaseUri + "relatedTo";

        
        /// <summary>
        /// The illustrator of the book.
        /// </summary>
        public const string illustrator = BaseUri + "illustrator";

        
        /// <summary>
        /// Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
        /// </summary>
        public const string potentialAction = BaseUri + "potentialAction";

        
        /// <summary>
        /// The service provided by this channel.
        /// </summary>
        public const string providesService = BaseUri + "providesService";

        
        /// <summary>
        /// Specifies the CreativeWork associated with the UserComment.
        /// </summary>
        public const string discusses = BaseUri + "discusses";

        
        /// <summary>
        /// The offer(s) -- e.g., product, quantity and price combinations -- included in the order.
        /// </summary>
        public const string acceptedOffer = BaseUri + "acceptedOffer";

        
        /// <summary>
        /// Any other drug related to this one, for example commonly-prescribed alternatives.
        /// </summary>
        public const string relatedDrug = BaseUri + "relatedDrug";

        
        /// <summary>
        /// A sub property of participant. The loser of the action.
        /// </summary>
        public const string loser = BaseUri + "loser";

        
        /// <summary>
        /// The place of attachment of a muscle, or what the muscle moves.
        /// </summary>
        public const string insertion = BaseUri + "insertion";

        
        /// <summary>
        /// A therapy that duplicates or overlaps this one.
        /// </summary>
        public const string duplicateTherapy = BaseUri + "duplicateTherapy";

        
        /// <summary>
        /// The condition, complication, symptom, sign, etc. caused.
        /// </summary>
        public const string causeOf = BaseUri + "causeOf";

        
        /// <summary>
        /// The Organization on whose behalf the creator was working.
        /// </summary>
        public const string sourceOrganization = BaseUri + "sourceOrganization";

        
        /// <summary>
        /// Specifics about the observational study design (enumerated).
        /// </summary>
        public const string studyDesign = BaseUri + "studyDesign";

        
        /// <summary>
        /// The range of spatial applicability of a dataset, e.g. for a dataset of New York weather, the state of New York.
        /// </summary>
        public const string spatial = BaseUri + "spatial";

        
        /// <summary>
        /// A pointer to another, functionally similar product (or multiple products).
        /// </summary>
        public const string isSimilarTo = BaseUri + "isSimilarTo";

        
        /// <summary>
        /// A sub property of participant. The person that borrows the object being lent.
        /// </summary>
        public const string borrower = BaseUri + "borrower";

        
        /// <summary>
        /// The duration for which the given offer is valid.
        /// </summary>
        public const string eligibleDuration = BaseUri + "eligibleDuration";

        
        /// <summary>
        /// The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount.
        /// </summary>
        public const string eligibleTransactionVolume = BaseUri + "eligibleTransactionVolume";

        
        /// <summary>
        /// This links to a node or nodes indicating the exact quantity of the products included in the offer.
        /// </summary>
        public const string includesObject = BaseUri + "includesObject";

        
        /// <summary>
        /// The person's spouse.
        /// </summary>
        public const string spouse = BaseUri + "spouse";

        
        /// <summary>
        /// The drug or supplement's legal status, including any controlled substance schedules that apply.
        /// </summary>
        public const string legalStatus = BaseUri + "legalStatus";

        
        /// <summary>
        /// The artist that performed this album or recording.
        /// </summary>
        public const string byArtist = BaseUri + "byArtist";

        
        /// <summary>
        /// Cost per unit of the drug, as reported by the source being tagged.
        /// </summary>
        public const string cost = BaseUri + "cost";

        
        /// <summary>
        /// A media object that encodes this CreativeWork. This property is a synonym for associatedMedia.
        /// </summary>
        public const string encoding = BaseUri + "encoding";

        
        /// <summary>
        /// An available dosage strength for the drug.
        /// </summary>
        public const string availableStrength = BaseUri + "availableStrength";

        
        /// <summary>
        /// Relates a property to a class that constitutes (one of) the expected type(s) for values of the property.
        /// </summary>
        public const string rangeIncludes = BaseUri + "rangeIncludes";

        
        /// <summary>
        /// A ticket associated with the reservation.
        /// </summary>
        public const string reservedTicket = BaseUri + "reservedTicket";

        
        /// <summary>
        /// A sub property of object. The collection target of the action.
        /// </summary>
        public const string collection = BaseUri + "collection";

        
        /// <summary>
        /// The organization or person from which the product was acquired.
        /// </summary>
        public const string acquiredFrom = BaseUri + "acquiredFrom";

        
        /// <summary>
        /// The station where the train trip ends.
        /// </summary>
        public const string arrivalStation = BaseUri + "arrivalStation";

        
        /// <summary>
        /// A modifiable or non-modifiable risk factor included in the calculation, e.g. age, coexisting condition.
        /// </summary>
        public const string includedRiskFactor = BaseUri + "includedRiskFactor";

        
        /// <summary>
        /// A publication event associated with the episode, clip or media object.
        /// </summary>
        public const string publication = BaseUri + "publication";

        
        /// <summary>
        /// The status of the study (enumerated).
        /// </summary>
        public const string status = BaseUri + "status";

        
        /// <summary>
        /// A sub property of location. The sports event where this action occurred.
        /// </summary>
        public const string sportsEvent = BaseUri + "sportsEvent";

        
        /// <summary>
        /// The weight of the product.
        /// </summary>
        public const string weight = BaseUri + "weight";

        
        /// <summary>
        /// The geographic area where the permit is valid.
        /// </summary>
        public const string validIn = BaseUri + "validIn";

        
        /// <summary>
        /// The area within which users can expect to reach the broadcast service.
        /// </summary>
        public const string area = BaseUri + "area";

        
        /// <summary>
        /// This ordering relation for qualitative values indicates that the subject is equal to the object.
        /// </summary>
        public const string equal = BaseUri + "equal";

        
        /// <summary>
        /// The individual reservations included in the package. Typically a repeated property.
        /// </summary>
        public const string subReservation = BaseUri + "subReservation";

        
        /// <summary>
        /// A child of the person.
        /// </summary>
        public const string children = BaseUri + "children";

        
        /// <summary>
        /// The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity.
        /// </summary>
        public const string eligibleQuantity = BaseUri + "eligibleQuantity";

        
        /// <summary>
        /// A contraindication for this therapy.
        /// </summary>
        public const string contraindication = BaseUri + "contraindication";

        
        /// <summary>
        /// A language someone may use with the item.
        /// </summary>
        public const string availableLanguage = BaseUri + "availableLanguage";

        
        /// <summary>
        /// A subject of the study, i.e. one of the medical conditions, therapies, devices, drugs, etc. investigated by the study.
        /// </summary>
        public const string studySubject = BaseUri + "studySubject";

        
        /// <summary>
        /// The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
        /// </summary>
        public const string brand = BaseUri + "brand";

        
        /// <summary>
        /// A sub property of participant. The sports team that participated on this action.
        /// </summary>
        public const string sportsTeam = BaseUri + "sportsTeam";

        
        /// <summary>
        /// The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller.
        /// </summary>
        public const string provider = BaseUri + "provider";

        
        /// <summary>
        /// An eventStatus of an event represents its status; particularly useful when an event is cancelled or rescheduled.
        /// </summary>
        public const string eventStatus = BaseUri + "eventStatus";

        
        /// <summary>
        /// An episode of a TV/radio series or season
        /// </summary>
        public const string episode = BaseUri + "episode";

        
        /// <summary>
        /// The album to which this recording belongs.
        /// </summary>
        public const string inAlbum = BaseUri + "inAlbum";

        
        /// <summary>
        /// Indicates a CreativeWork that this CreativeWork is (in some sense) part of.
        /// </summary>
        public const string isPartOf = BaseUri + "isPartOf";

        
        /// <summary>
        /// The product that this structured value is referring to.
        /// </summary>
        public const string typeOfGood = BaseUri + "typeOfGood";

        
        /// <summary>
        /// Indicates a CreativeWork that is (in some sense) a part of this CreativeWork.
        /// </summary>
        public const string hasPart = BaseUri + "hasPart";

        
        /// <summary>
        /// A medical therapy related to this anatomy.
        /// </summary>
        public const string relatedTherapy = BaseUri + "relatedTherapy";

        
        /// <summary>
        /// A pointer to another product (or multiple products) for which this product is an accessory or spare part.
        /// </summary>
        public const string isAccessoryOrSparePartFor = BaseUri + "isAccessoryOrSparePartFor";

        
        /// <summary>
        /// The playlist to which this recording belongs.
        /// </summary>
        public const string inPlaylist = BaseUri + "inPlaylist";

        
        /// <summary>
        /// The target audience for this permit.
        /// </summary>
        public const string permitAudience = BaseUri + "permitAudience";

        
        /// <summary>
        /// The vasculature the lymphatic structure runs, or efferents, to.
        /// </summary>
        public const string runsTo = BaseUri + "runsTo";

        
        /// <summary>
        /// The organization (airline, travelers' club, etc.) the membership is made with.
        /// </summary>
        public const string hostingOrganization = BaseUri + "hostingOrganization";

        
        /// <summary>
        /// The medical conditions, treatments, etc. that are the subject of the guideline.
        /// </summary>
        public const string guidelineSubject = BaseUri + "guidelineSubject";

        
        /// <summary>
        /// The condition, complication, etc. influenced by this factor.
        /// </summary>
        public const string increasesRiskOf = BaseUri + "increasesRiskOf";

        
        /// <summary>
        /// Comments, typically from users, on this CreativeWork.
        /// </summary>
        public const string comment = BaseUri + "comment";

        
        /// <summary>
        /// The director of the movie, tv/radio episode or series.
        /// </summary>
        public const string director = BaseUri + "director";

        
        /// <summary>
        /// The delivery method(s) to which the delivery charge or payment charge specification applies.
        /// </summary>
        public const string appliesToDeliveryMethod = BaseUri + "appliesToDeliveryMethod";

        
        /// <summary>
        /// If applicable, the organization that officially recognizes this entity as part of its endorsed system of medicine.
        /// </summary>
        public const string recognizingAuthority = BaseUri + "recognizingAuthority";

        
        /// <summary>
        /// A dosing schedule for the drug for a given population, either observed, recommended, or maximum dose based on the type used.
        /// </summary>
        public const string doseSchedule = BaseUri + "doseSchedule";

        
        /// <summary>
        /// The regions where the media is allowed. If not specified, then it's assumed to be allowed everywhere. Specify the countries in <a href='http://en.wikipedia.org/wiki/ISO_3166'>ISO 3166 format</a>.
        /// </summary>
        public const string regionsAllowed = BaseUri + "regionsAllowed";

        
        /// <summary>
        /// The warranty promise(s) included in the offer.
        /// </summary>
        public const string warrantyPromise = BaseUri + "warrantyPromise";

        
        /// <summary>
        /// A medical service available from this provider.
        /// </summary>
        public const string availableService = BaseUri + "availableService";

        
        /// <summary>
        /// Event that this person is a performer or participant in.
        /// </summary>
        public const string performerIn = BaseUri + "performerIn";

        
        /// <summary>
        /// The subject matter of the content.
        /// </summary>
        public const string about = BaseUri + "about";

        
        /// <summary>
        /// The trailer of a movie or tv/radio series, season, or episode.
        /// </summary>
        public const string trailer = BaseUri + "trailer";

        
        /// <summary>
        /// The item ordered.
        /// </summary>
        public const string orderedItem = BaseUri + "orderedItem";

        
        /// <summary>
        /// People or organizations that have reviewed the content on this web page for accuracy and/or completeness.
        /// </summary>
        public const string reviewedBy = BaseUri + "reviewedBy";

        
        /// <summary>
        /// The basic containment relation between places.
        /// </summary>
        public const string containedIn = BaseUri + "containedIn";

        /// <summary>
        /// Indicates that the item has sold out.
        /// </summary>
        public const string SoldOut = BaseUri + "SoldOut";

        /// <summary>
        /// Indicates that the item is available only online.
        /// </summary>
        public const string OnlineOnly = BaseUri + "OnlineOnly";

        /// <summary>
        /// Indicates that the item is available for pre-order.
        /// </summary>
        public const string PreOrder = BaseUri + "PreOrder";

        /// <summary>
        /// Indicates that the item is out of stock.
        /// </summary>
        public const string OutOfStock = BaseUri + "OutOfStock";

        /// <summary>
        /// Indicates that the item is available only at physical locations.
        /// </summary>
        public const string InStoreOnly = BaseUri + "InStoreOnly";

        /// <summary>
        /// Indicates that the item has limited availability.
        /// </summary>
        public const string LimitedAvailability = BaseUri + "LimitedAvailability";

        /// <summary>
        /// Indicates that the item has been discontinued.
        /// </summary>
        public const string Discontinued = BaseUri + "Discontinued";

        /// <summary>
        /// Indicates that the item is in stock.
        /// </summary>
        public const string InStock = BaseUri + "InStock";

        /// <summary>
        /// Indicates that the item is new.
        /// </summary>
        public const string NewCondition = BaseUri + "NewCondition";

        /// <summary>
        /// Indicates that the item is used.
        /// </summary>
        public const string UsedCondition = BaseUri + "UsedCondition";

        /// <summary>
        /// Indicates that the item is damaged.
        /// </summary>
        public const string DamagedCondition = BaseUri + "DamagedCondition";

        /// <summary>
        /// Indicates that the item is refurbished.
        /// </summary>
        public const string RefurbishedCondition = BaseUri + "RefurbishedCondition";

        /// <summary>
        /// Positron emission tomography imaging.
        /// </summary>
        public const string PET = BaseUri + "PET";

        /// <summary>
        /// Magnetic resonance imaging.
        /// </summary>
        public const string MRI = BaseUri + "MRI";

        /// <summary>
        /// X-ray computed tomography imaging.
        /// </summary>
        public const string CT = BaseUri + "CT";

        /// <summary>
        /// Ultrasound imaging.
        /// </summary>
        public const string Ultrasound = BaseUri + "Ultrasound";

        /// <summary>
        /// X-ray imaging.
        /// </summary>
        public const string XRay = BaseUri + "XRay";

        /// <summary>
        /// Data derived from a single randomized trial, or nonrandomized studies.
        /// </summary>
        public const string EvidenceLevelB = BaseUri + "EvidenceLevelB";

        /// <summary>
        /// Data derived from multiple randomized clinical trials or meta-analyses.
        /// </summary>
        public const string EvidenceLevelA = BaseUri + "EvidenceLevelA";

        /// <summary>
        /// Only consensus opinion of experts, case studies, or standard-of-care.
        /// </summary>
        public const string EvidenceLevelC = BaseUri + "EvidenceLevelC";

        /// <summary>
        /// An international trial.
        /// </summary>
        public const string InternationalTrial = BaseUri + "InternationalTrial";

        /// <summary>
        /// A trial design in which the researcher knows which treatment the patient was randomly assigned to but the patient does not.
        /// </summary>
        public const string SingleBlindedTrial = BaseUri + "SingleBlindedTrial";

        /// <summary>
        /// A trial that takes place at multiple centers.
        /// </summary>
        public const string MultiCenterTrial = BaseUri + "MultiCenterTrial";

        /// <summary>
        /// A placebo-controlled trial design.
        /// </summary>
        public const string PlaceboControlledTrial = BaseUri + "PlaceboControlledTrial";

        /// <summary>
        /// A trial design in which neither the researcher nor the patient knows the details of the treatment the patient was randomly assigned to.
        /// </summary>
        public const string DoubleBlindedTrial = BaseUri + "DoubleBlindedTrial";

        /// <summary>
        /// A trial design in which the researcher knows the full details of the treatment, and so does the patient.
        /// </summary>
        public const string OpenTrial = BaseUri + "OpenTrial";

        /// <summary>
        /// A trial design in which neither the researcher, the person administering the therapy nor the patient knows the details of the treatment the patient was randomly assigned to.
        /// </summary>
        public const string TripleBlindedTrial = BaseUri + "TripleBlindedTrial";

        /// <summary>
        /// A trial that takes place at a single center.
        /// </summary>
        public const string SingleCenterTrial = BaseUri + "SingleCenterTrial";

        /// <summary>
        /// A randomized trial design.
        /// </summary>
        public const string RandomizedTrial = BaseUri + "RandomizedTrial";

        /// <summary>
        /// The associated telephone number is toll free.
        /// </summary>
        public const string TollFree = BaseUri + "TollFree";

        /// <summary>
        /// Uses devices to support users with hearing impairments.
        /// </summary>
        public const string HearingImpairedSupported = BaseUri + "HearingImpairedSupported";

        /// <summary>
        /// A medical device used for diagnostic purposes.
        /// </summary>
        public const string Diagnostic = BaseUri + "Diagnostic";

        /// <summary>
        /// A medical device used for therapeutic purposes.
        /// </summary>
        public const string Therapeutic = BaseUri + "Therapeutic";

        /// <summary>
        /// A system of medicine that originated in India over thousands of years and that focuses on integrating and balancing the body, mind, and spirit.
        /// </summary>
        public const string Ayurvedic = BaseUri + "Ayurvedic";

        /// <summary>
        /// The conventional Western system of medicine, that aims to apply the best available evidence gained from the scientific method to clinical decision making. Also known as conventional or Western medicine.
        /// </summary>
        public const string WesternConventional = BaseUri + "WesternConventional";

        /// <summary>
        /// A system of medicine based on the principle that a disease can be cured by a substance that produces similar symptoms in healthy people.
        /// </summary>
        public const string Homeopathic = BaseUri + "Homeopathic";

        /// <summary>
        /// A system of medicine focused on promoting the body's innate ability to heal itself.
        /// </summary>
        public const string Osteopathic = BaseUri + "Osteopathic";

        /// <summary>
        /// A system of medicine based on common theoretical concepts that originated in China and evolved over thousands of years, that uses herbs, acupuncture, exercise, massage, dietary therapy, and other methods to treat a wide range of conditions.
        /// </summary>
        public const string TraditionalChinese = BaseUri + "TraditionalChinese";

        /// <summary>
        /// A system of medicine focused on the relationship between the body's structure, mainly the spine, and its functioning.
        /// </summary>
        public const string Chiropractic = BaseUri + "Chiropractic";

        /// <summary>
        /// The event is taking place or has taken place on the startDate as scheduled. Use of this value is optional, as it is assumed by default.
        /// </summary>
        public const string EventScheduled = BaseUri + "EventScheduled";

        /// <summary>
        /// The event has been rescheduled. The event's previousStartDate should be set to the old date and the startDate should be set to the event's new date. (If the event has been rescheduled multiple times, the previousStartDate property may be repeated.)
        /// </summary>
        public const string EventRescheduled = BaseUri + "EventRescheduled";

        /// <summary>
        /// The event has been cancelled. If the event has multiple startDate values, all are assumed to be cancelled. Either startDate or previousStartDate may be used to specify the event's cancelled date(s).
        /// </summary>
        public const string EventCancelled = BaseUri + "EventCancelled";

        /// <summary>
        /// The event has been postponed and no new date has been set. The event's previousStartDate should be set.
        /// </summary>
        public const string EventPostponed = BaseUri + "EventPostponed";

        /// <summary>
        /// A designation by the US FDA signifying that studies in animals or humans have demonstrated fetal abnormalities and/or there is positive evidence of human fetal risk based on adverse reaction data from investigational or marketing experience, and the risks involved in use of the drug in pregnant women clearly outweigh potential benefits.
        /// </summary>
        public const string FDAcategoryX = BaseUri + "FDAcategoryX";

        /// <summary>
        /// A designation by the US FDA signifying that animal reproduction studies have failed to demonstrate a risk to the fetus and there are no adequate and well-controlled studies in pregnant women.
        /// </summary>
        public const string FDAcategoryB = BaseUri + "FDAcategoryB";

        /// <summary>
        /// A designation by the US FDA signifying that animal reproduction studies have shown an adverse effect on the fetus and there are no adequate and well-controlled studies in humans, but potential benefits may warrant use of the drug in pregnant women despite potential risks.
        /// </summary>
        public const string FDAcategoryC = BaseUri + "FDAcategoryC";

        /// <summary>
        /// A designation by the US FDA signifying that there is positive evidence of human fetal risk based on adverse reaction data from investigational or marketing experience or studies in humans, but potential benefits may warrant use of the drug in pregnant women despite potential risks.
        /// </summary>
        public const string FDAcategoryD = BaseUri + "FDAcategoryD";

        /// <summary>
        /// A designation by the US FDA signifying that adequate and well-controlled studies have failed to demonstrate a risk to the fetus in the first trimester of pregnancy (and there is no evidence of risk in later trimesters).
        /// </summary>
        public const string FDAcategoryA = BaseUri + "FDAcategoryA";

        /// <summary>
        /// A designation that the drug in question has not been assigned a pregnancy category designation by the US FDA.
        /// </summary>
        public const string FDAnotEvaluated = BaseUri + "FDAnotEvaluated";

        /// <summary>
        /// The status of a reservation on hold pending an update like credit card number or flight changes.
        /// </summary>
        public const string ReservationHold = BaseUri + "ReservationHold";

        /// <summary>
        /// The status of a reservation when a request has been sent, but not confirmed.
        /// </summary>
        public const string ReservationPending = BaseUri + "ReservationPending";

        /// <summary>
        /// The status for a previously confirmed reservation that is now cancelled.
        /// </summary>
        public const string ReservationCancelled = BaseUri + "ReservationCancelled";

        /// <summary>
        /// The status of a confirmed reservation.
        /// </summary>
        public const string ReservationConfirmed = BaseUri + "ReservationConfirmed";

        /// <summary>
        /// Book format: Hardcover.
        /// </summary>
        public const string Hardcover = BaseUri + "Hardcover";

        /// <summary>
        /// Book format: Paperback.
        /// </summary>
        public const string Paperback = BaseUri + "Paperback";

        /// <summary>
        /// Book format: Ebook.
        /// </summary>
        public const string EBook = BaseUri + "EBook";

        /// <summary>
        /// Eye
        /// </summary>
        public const string Eye = BaseUri + "Eye";

        /// <summary>
        /// Cardiovascular
        /// </summary>
        public const string CardiovascularExam = BaseUri + "CardiovascularExam";

        /// <summary>
        /// Neuro
        /// </summary>
        public const string Neuro = BaseUri + "Neuro";

        /// <summary>
        /// Skin
        /// </summary>
        public const string Skin = BaseUri + "Skin";

        /// <summary>
        /// Ear
        /// </summary>
        public const string Ear = BaseUri + "Ear";

        /// <summary>
        /// Musculoskeletal
        /// </summary>
        public const string MusculoskeletalExam = BaseUri + "MusculoskeletalExam";

        /// <summary>
        /// Throat
        /// </summary>
        public const string Throat = BaseUri + "Throat";

        /// <summary>
        /// VitalSign
        /// </summary>
        public const string VitalSign = BaseUri + "VitalSign";

        /// <summary>
        /// Nose
        /// </summary>
        public const string Nose = BaseUri + "Nose";

        /// <summary>
        /// Appearance
        /// </summary>
        public const string Appearance = BaseUri + "Appearance";

        /// <summary>
        /// Genitourinary
        /// </summary>
        public const string Genitourinary = BaseUri + "Genitourinary";

        /// <summary>
        /// Abdomen
        /// </summary>
        public const string Abdomen = BaseUri + "Abdomen";

        /// <summary>
        /// Head
        /// </summary>
        public const string Head = BaseUri + "Head";

        /// <summary>
        /// Lung
        /// </summary>
        public const string Lung = BaseUri + "Lung";

        /// <summary>
        /// Neck
        /// </summary>
        public const string Neck = BaseUri + "Neck";

        /// <summary>
        /// A type of medical procedure that involves invasive surgical techniques.
        /// </summary>
        public const string SurgicalProcedure = BaseUri + "SurgicalProcedure";

        /// <summary>
        /// A type of medical procedure that involves percutaneous techniques, where access to organs or tissue is achieved via needle-puncture of the skin. For example, catheter-based procedures like stent delivery.
        /// </summary>
        public const string PercutaneousProcedure = BaseUri + "PercutaneousProcedure";

        /// <summary>
        /// A type of medical procedure that involves noninvasive techniques.
        /// </summary>
        public const string NoninvasiveProcedure = BaseUri + "NoninvasiveProcedure";

        /// <summary>
        /// Available over the counter.
        /// </summary>
        public const string OTC = BaseUri + "OTC";

        /// <summary>
        /// Available by prescription only.
        /// </summary>
        public const string PrescriptionOnly = BaseUri + "PrescriptionOnly";

        /// <summary>
        /// Physical activity that is engaged in to improve muscle and bone strength. Also referred to as resistance training.
        /// </summary>
        public const string StrengthTraining = BaseUri + "StrengthTraining";

        /// <summary>
        /// Any physical activity engaged in for recreational purposes. Examples may include ballroom dancing, roller skating, canoeing, fishing, etc.
        /// </summary>
        public const string LeisureTimeActivity = BaseUri + "LeisureTimeActivity";

        /// <summary>
        /// Physical activity that is of high-intensity which utilizes the anaerobic metabolism of the body.
        /// </summary>
        public const string AnaerobicActivity = BaseUri + "AnaerobicActivity";

        /// <summary>
        /// Physical activity of relatively low intensity that depends primarily on the aerobic energy-generating process; during activity, the aerobic metabolism uses oxygen to adequately meet energy demands during exercise.
        /// </summary>
        public const string AerobicActivity = BaseUri + "AerobicActivity";

        /// <summary>
        /// Physical activity that is engaged to help maintain posture and balance.
        /// </summary>
        public const string Balance = BaseUri + "Balance";

        /// <summary>
        /// Any physical activity engaged in for job-related purposes. Examples may include waiting tables, maid service, carrying a mailbag, picking fruits or vegetables, construction work, etc.
        /// </summary>
        public const string OccupationalActivity = BaseUri + "OccupationalActivity";

        /// <summary>
        /// Physical activity that is engaged in to improve joint and muscle flexibility.
        /// </summary>
        public const string Flexibility = BaseUri + "Flexibility";

        /// <summary>
        /// OrderStatus representing that payment is due on an order.
        /// </summary>
        public const string OrderPaymentDue = BaseUri + "OrderPaymentDue";

        /// <summary>
        /// OrderStatus representing availability of an order for pickup.
        /// </summary>
        public const string OrderPickupAvailable = BaseUri + "OrderPickupAvailable";

        /// <summary>
        /// OrderStatus representing that an order is in transit.
        /// </summary>
        public const string OrderInTransit = BaseUri + "OrderInTransit";

        /// <summary>
        /// OrderStatus representing that an order has been returned.
        /// </summary>
        public const string OrderReturned = BaseUri + "OrderReturned";

        /// <summary>
        /// OrderStatus representing successful delivery of an order.
        /// </summary>
        public const string OrderDelivered = BaseUri + "OrderDelivered";

        /// <summary>
        /// OrderStatus representing cancellation of an order.
        /// </summary>
        public const string OrderCancelled = BaseUri + "OrderCancelled";

        /// <summary>
        /// OrderStatus representing that an order is being processed.
        /// </summary>
        public const string OrderProcessing = BaseUri + "OrderProcessing";

        /// <summary>
        /// OrderStatus representing that there is a problem with the order.
        /// </summary>
        public const string OrderProblem = BaseUri + "OrderProblem";

        /// <summary>
        /// A specific branch of medical science that pertains to the study of the respiratory system and its respective disease states.
        /// </summary>
        public const string Pulmonary = BaseUri + "Pulmonary";

        /// <summary>
        /// Diet and nutrition.
        /// </summary>
        public const string DietNutrition = BaseUri + "DietNutrition";

        /// <summary>
        /// Speech pathology.
        /// </summary>
        public const string SpeechPathology = BaseUri + "SpeechPathology";

        /// <summary>
        /// A specific branch of medical science that specializes in the care of infants, children and adolescents.
        /// </summary>
        public const string Pediatric = BaseUri + "Pediatric";

        /// <summary>
        /// A specific branch of medical science that pertains to diagnosis and treatment of disorders of skin.
        /// </summary>
        public const string Dermatologic = BaseUri + "Dermatologic";

        /// <summary>
        /// A specific branch of medical science that is concerned with the ear, nose and throat and their respective disease states.
        /// </summary>
        public const string Otolaryngologic = BaseUri + "Otolaryngologic";

        /// <summary>
        /// Dentistry.
        /// </summary>
        public const string Dentistry = BaseUri + "Dentistry";

        /// <summary>
        /// Radiography.
        /// </summary>
        public const string Radiograpy = BaseUri + "Radiograpy";

        /// <summary>
        /// A specific branch of medical science that pertains to the study of the kidneys and its respective disease states.
        /// </summary>
        public const string Renal = BaseUri + "Renal";

        /// <summary>
        /// A specific branch of medical science that is concerned with poisons, their nature, effects and detection and involved in the treatment of poisoning.
        /// </summary>
        public const string Toxicologic = BaseUri + "Toxicologic";

        /// <summary>
        /// A specific branch of medical science that pertains to diagnosis and treatment of disorders of heart and vasculature.
        /// </summary>
        public const string Cardiovascular = BaseUri + "Cardiovascular";

        /// <summary>
        /// A specific branch of medical science that pertains to diagnosis and treatment of disorders of muscles, ligaments and skeletal system.
        /// </summary>
        public const string Musculoskeletal = BaseUri + "Musculoskeletal";

        /// <summary>
        /// A specific branch of medical science that pertains to the health care of women, particularly in the diagnosis and treatment of disorders affecting the female reproductive system.
        /// </summary>
        public const string Gynecologic = BaseUri + "Gynecologic";

        /// <summary>
        /// A specific branch of medical science that pertains to diagnosis and treatment of disorders of digestive system.
        /// </summary>
        public const string Gastroenterologic = BaseUri + "Gastroenterologic";

        /// <summary>
        /// Pharmacy.
        /// </summary>
        public const string PharmacySpecialty = BaseUri + "PharmacySpecialty";

        /// <summary>
        /// A specific branch of medical science that is concerned with the diagnosis and treatment of diseases pertaining to the urinary tract and the urogenital system.
        /// </summary>
        public const string Urologic = BaseUri + "Urologic";

        /// <summary>
        /// Physiotherapy.
        /// </summary>
        public const string Physiotherapy = BaseUri + "Physiotherapy";

        /// <summary>
        /// A specific branch of medical science that specializes in the care of women during the prenatal and postnatal care and with the delivery of the child.
        /// </summary>
        public const string Obstetric = BaseUri + "Obstetric";

        /// <summary>
        /// A specific branch of medical science that pertains to diagnosis and treatment of disorders of blood and blood producing organs.
        /// </summary>
        public const string Hematologic = BaseUri + "Hematologic";

        /// <summary>
        /// A specific branch of medical science that pertains to hereditary transmission and the variation of inherited characteristics and disorders.
        /// </summary>
        public const string Genetic = BaseUri + "Genetic";

        /// <summary>
        /// A specific branch of medical science that pertains to diagnosis and treatment of disorders of endocrine glands and their secretions.
        /// </summary>
        public const string Endocrine = BaseUri + "Endocrine";

        /// <summary>
        /// A specific branch of medical science that pertains to diagnosis and treatment of bacterial, viral, fungal and parasitic infections.
        /// </summary>
        public const string Infectious = BaseUri + "Infectious";

        /// <summary>
        /// A specific branch of medical science that is concerned with the diagnosis and treatment of diseases, debilities and provision of care to the aged.
        /// </summary>
        public const string Geriatric = BaseUri + "Geriatric";

        /// <summary>
        /// Environment and public health.
        /// </summary>
        public const string PublicHealth = BaseUri + "PublicHealth";

        /// <summary>
        /// Respiratory therapy.
        /// </summary>
        public const string RespiratoryTherapy = BaseUri + "RespiratoryTherapy";

        /// <summary>
        /// A specific branch of medical science that deals with the study and treatment of rheumatic, autoimmune or joint diseases.
        /// </summary>
        public const string Rheumatologic = BaseUri + "Rheumatologic";

        /// <summary>
        /// Optometry.
        /// </summary>
        public const string Optometic = BaseUri + "Optometic";

        /// <summary>
        /// Nursing.
        /// </summary>
        public const string Nursing = BaseUri + "Nursing";

        /// <summary>
        /// A specific branch of medical science that deals with benign and malignant tumors, including the study of their development, diagnosis, treatment and prevention.
        /// </summary>
        public const string Oncologic = BaseUri + "Oncologic";

        /// <summary>
        /// A specific branch of medical science that is concerned with the study of the cause, origin and nature of a disease state, including its consequences as a result of manifestation of the disease. In clinical care, the term is used to designate a branch of medicine using laboratory tests to diagnose and determine the prognostic significance of illness.
        /// </summary>
        public const string Pathology = BaseUri + "Pathology";

        /// <summary>
        /// A specific branch of medical science that is deals with the evaluation and initial treatment of medical conditions caused by trauma or sudden illness.
        /// </summary>
        public const string Emergency = BaseUri + "Emergency";

        /// <summary>
        /// Podiatry.
        /// </summary>
        public const string Podiatric = BaseUri + "Podiatric";

        /// <summary>
        /// Primary care.
        /// </summary>
        public const string PrimaryCare = BaseUri + "PrimaryCare";

        /// <summary>
        /// A specific branch of medical science that is concerned with the study, treatment, and prevention of mental illness, using both medical and psychological therapies.
        /// </summary>
        public const string Psychiatric = BaseUri + "Psychiatric";

        /// <summary>
        /// A specific branch of medical science that pertains to treating diseases, injuries and deformities by manual and instrumental means.
        /// </summary>
        public const string Surgical = BaseUri + "Surgical";

        /// <summary>
        /// Midwifery.
        /// </summary>
        public const string Midwifery = BaseUri + "Midwifery";

        /// <summary>
        /// A specific branch of medical science that studies the nerves and nervous system and its respective disease states.
        /// </summary>
        public const string Neurologic = BaseUri + "Neurologic";

        /// <summary>
        /// A specific branch of medical science that pertains to therapeutic or cosmetic repair or re-formation of missing, injured or malformed tissues or body parts by manual and instrumental means.
        /// </summary>
        public const string PlasticSurgery = BaseUri + "PlasticSurgery";

        /// <summary>
        /// Community health.
        /// </summary>
        public const string CommunityHealth = BaseUri + "CommunityHealth";

        /// <summary>
        /// A specific branch of medical science that pertains to study of anesthetics and their application.
        /// </summary>
        public const string Anesthesia = BaseUri + "Anesthesia";

        /// <summary>
        /// Laboratory science.
        /// </summary>
        public const string LaboratoryScience = BaseUri + "LaboratoryScience";

        /// <summary>
        /// Occupational therapy.
        /// </summary>
        public const string OccupationalTherapy = BaseUri + "OccupationalTherapy";

        /// <summary>
        /// Unlike cross-sectional studies, longitudinal studies track the same people, and therefore the differences observed in those people are less likely to be the result of cultural differences across generations. Longitudinal studies are also used in medicine to uncover predictors of certain diseases.
        /// </summary>
        public const string Longitudinal = BaseUri + "Longitudinal";

        /// <summary>
        /// An observational study design.
        /// </summary>
        public const string Observational = BaseUri + "Observational";

        /// <summary>
        /// A case series (also known as a clinical series) is a medical research study that tracks patients with a known exposure given similar treatment or examines their medical records for exposure and outcome. A case series can be retrospective or prospective and usually involves a smaller number of patients than the more powerful case-control studies or randomized controlled trials. Case series may be consecutive or non-consecutive, depending on whether all cases presenting to the reporting authors over a period of time were included, or only a selection.
        /// </summary>
        public const string CaseSeries = BaseUri + "CaseSeries";

        /// <summary>
        /// Also known as a panel study. A cohort study is a form of longitudinal study used in medicine and social science. It is one type of study design and should be compared with a cross-sectional study.  A cohort is a group of people who share a common characteristic or experience within a defined period (e.g., are born, leave school, lose their job, are exposed to a drug or a vaccine, etc.). The comparison group may be the general population from which the cohort is drawn, or it may be another cohort of persons thought to have had little or no exposure to the substance under investigation, but otherwise similar. Alternatively, subgroups within the cohort may be compared with each other.
        /// </summary>
        public const string CohortStudy = BaseUri + "CohortStudy";

        /// <summary>
        /// Studies carried out on pre-existing data (usually from 'snapshot' surveys), such as that collected by the Census Bureau. Sometimes called Prevalence Studies.
        /// </summary>
        public const string CrossSectional = BaseUri + "CrossSectional";

        /// <summary>
        /// A registry-based study design.
        /// </summary>
        public const string Registry = BaseUri + "Registry";

        /// <summary>
        /// Researchers.
        /// </summary>
        public const string Researcher = BaseUri + "Researcher";

        /// <summary>
        /// Patients.
        /// </summary>
        public const string Patient = BaseUri + "Patient";

        /// <summary>
        /// Medical clinicians, including practicing physicians and other medical professionals involved in clinical practice.
        /// </summary>
        public const string Clinician = BaseUri + "Clinician";

        /// <summary>
        /// Medical researchers.
        /// </summary>
        public const string MedicalResearcher = BaseUri + "MedicalResearcher";

        /// <summary>
        /// A DeliveryMethod in which an item is collected on site, e.g. in a store or at a box office.
        /// </summary>
        public const string OnSitePickup = BaseUri + "OnSitePickup";

        /// <summary>
        /// An action that has already taken place.
        /// </summary>
        public const string CompletedActionStatus = BaseUri + "CompletedActionStatus";

        /// <summary>
        /// An in-progress action (e.g, while watching the movie, or driving to a location).
        /// </summary>
        public const string ActiveActionStatus = BaseUri + "ActiveActionStatus";

        /// <summary>
        /// A description of an action that is supported.
        /// </summary>
        public const string PotentialActionStatus = BaseUri + "PotentialActionStatus";

        /// <summary>
        /// The drug's cost represents the wholesale acquisition cost of the drug.
        /// </summary>
        public const string Wholesale = BaseUri + "Wholesale";

        /// <summary>
        /// The drug's cost represents the maximum reimbursement paid by an insurer for the drug.
        /// </summary>
        public const string ReimbursementCap = BaseUri + "ReimbursementCap";

        /// <summary>
        /// The drug's cost represents the retail cost of the drug.
        /// </summary>
        public const string Retail = BaseUri + "Retail";

        /// <summary>
        /// Pathogenic bacteria that cause bacterial infection.
        /// </summary>
        public const string Bacteria = BaseUri + "Bacteria";

        /// <summary>
        /// Multicellular parasite that causes an infection.
        /// </summary>
        public const string MulticellularParasite = BaseUri + "MulticellularParasite";

        /// <summary>
        /// Pathogenic fungus.
        /// </summary>
        public const string Fungus = BaseUri + "Fungus";

        /// <summary>
        /// Pathogenic virus that causes viral infection.
        /// </summary>
        public const string Virus = BaseUri + "Virus";

        /// <summary>
        /// A prion is an infectious agent composed of protein in a misfolded form.
        /// </summary>
        public const string Prion = BaseUri + "Prion";

        /// <summary>
        /// Single-celled organism that causes an infection.
        /// </summary>
        public const string Protozoa = BaseUri + "Protozoa";

        /// <summary>
        /// A transit map.
        /// </summary>
        public const string TransitMap = BaseUri + "TransitMap";

        /// <summary>
        /// A parking map.
        /// </summary>
        public const string ParkingMap = BaseUri + "ParkingMap";

        /// <summary>
        /// A venue map (e.g. for malls, auditoriums, museums, etc.).
        /// </summary>
        public const string VenueMap = BaseUri + "VenueMap";

        /// <summary>
        /// A seating map.
        /// </summary>
        public const string SeatingMap = BaseUri + "SeatingMap";

        /// <summary>
        /// Enrolling participants by invitation only.
        /// </summary>
        public const string EnrollingByInvitation = BaseUri + "EnrollingByInvitation";

        /// <summary>
        /// Active, but not recruiting new participants.
        /// </summary>
        public const string ActiveNotRecruiting = BaseUri + "ActiveNotRecruiting";

        /// <summary>
        /// Results are not available.
        /// </summary>
        public const string ResultsNotAvailable = BaseUri + "ResultsNotAvailable";

        /// <summary>
        /// Suspended.
        /// </summary>
        public const string Suspended = BaseUri + "Suspended";

        /// <summary>
        /// Completed.
        /// </summary>
        public const string Completed = BaseUri + "Completed";

        /// <summary>
        /// Recruiting participants.
        /// </summary>
        public const string Recruiting = BaseUri + "Recruiting";

        /// <summary>
        /// Results are available.
        /// </summary>
        public const string ResultsAvailable = BaseUri + "ResultsAvailable";

        /// <summary>
        /// Withdrawn.
        /// </summary>
        public const string Withdrawn = BaseUri + "Withdrawn";

        /// <summary>
        /// Not yet recruiting.
        /// </summary>
        public const string NotYetRecruiting = BaseUri + "NotYetRecruiting";

        /// <summary>
        /// Terminated.
        /// </summary>
        public const string Terminated = BaseUri + "Terminated";

    }
}